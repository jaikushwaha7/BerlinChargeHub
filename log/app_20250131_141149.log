2025-01-31 14:11:49,297 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:11:49,887 - INFO - Starting execution of the main function.
2025-01-31 14:11:49,898 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:11:50,098 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:11:50,099 - INFO - Starting preprop_lstat function.
2025-01-31 14:11:50,118 - INFO - Renamed columns in DataFrame.
2025-01-31 14:11:50,138 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:11:50,142 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:11:50,146 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:11:50,150 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:11:50,154 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:11:50,226 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:11:50,226 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:11:50,231 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:11:50,231 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:11:50,241 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:11:50,244 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:11:50,250 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:11:50,251 - INFO - Starting preprop_resid function.
2025-01-31 14:11:50,252 - INFO - Renamed columns in DataFrame.
2025-01-31 14:11:50,258 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:11:50,258 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:11:50,260 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:11:50,262 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:11:50,265 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:11:50,272 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:11:50,272 - INFO - preprop_resid function completed successfully.
2025-01-31 14:11:50,273 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:11:50,279 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:11:57,039 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:11:57,040 - INFO - Starting execution of the main function.
2025-01-31 14:11:57,047 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:11:57,312 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:11:57,312 - INFO - Starting preprop_lstat function.
2025-01-31 14:11:57,325 - INFO - Renamed columns in DataFrame.
2025-01-31 14:11:57,356 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:11:57,359 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:11:57,362 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:11:57,364 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:11:57,368 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:11:57,486 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:11:57,486 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:11:57,492 - INFO -  ====> Duration 0.18 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:11:57,492 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:11:57,499 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:11:57,501 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:11:57,510 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:11:57,510 - INFO - Starting preprop_resid function.
2025-01-31 14:11:57,510 - INFO - Renamed columns in DataFrame.
2025-01-31 14:11:57,520 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:11:57,521 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:11:57,523 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:11:57,524 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:11:57,526 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:11:57,536 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:11:57,536 - INFO - preprop_resid function completed successfully.
2025-01-31 14:11:57,537 - INFO -  ====> Duration 0.03 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:11:57,543 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:12:02,038 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:12:02,038 - INFO - Starting execution of the main function.
2025-01-31 14:12:02,043 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:12:02,233 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:12:02,233 - INFO - Starting preprop_lstat function.
2025-01-31 14:12:02,244 - INFO - Renamed columns in DataFrame.
2025-01-31 14:12:02,262 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:12:02,265 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:12:02,268 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:12:02,269 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:12:02,272 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:12:02,381 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:12:02,381 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:12:02,389 - INFO -  ====> Duration 0.16 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:12:02,389 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:12:02,397 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:12:02,399 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:12:02,408 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:12:02,408 - INFO - Starting preprop_resid function.
2025-01-31 14:12:02,409 - INFO - Renamed columns in DataFrame.
2025-01-31 14:12:02,420 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:12:02,420 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:12:02,422 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:12:02,423 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:12:02,425 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:12:02,432 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:12:02,432 - INFO - preprop_resid function completed successfully.
2025-01-31 14:12:02,432 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:12:02,437 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:12:02,440 - ERROR - create_electric_charging_residents_heatmap raised an exception: module 'streamlit' has no attribute 'experimental_rerun'
2025-01-31 14:15:48,092 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:15:48,100 - INFO - Starting execution of the main function.
2025-01-31 14:15:48,105 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:15:48,288 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:15:48,289 - INFO - Starting preprop_lstat function.
2025-01-31 14:15:48,299 - INFO - Renamed columns in DataFrame.
2025-01-31 14:15:48,318 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:15:48,321 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:15:48,324 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:15:48,326 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:15:48,329 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:15:48,395 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:15:48,395 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:15:48,400 - INFO -  ====> Duration 0.11 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:15:48,400 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:15:48,405 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:15:48,407 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:15:48,413 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:15:48,414 - INFO - Starting preprop_resid function.
2025-01-31 14:15:48,414 - INFO - Renamed columns in DataFrame.
2025-01-31 14:15:48,420 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:15:48,421 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:15:48,422 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:15:48,424 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:15:48,426 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:15:48,433 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:15:48,433 - INFO - preprop_resid function completed successfully.
2025-01-31 14:15:48,433 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:15:48,438 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:15:48,445 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFBE7770>), kwargs: {}
2025-01-31 14:15:48,488 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E31834D0>, <folium.folium.Map object at 0x000002B8DFBE7770>)
2025-01-31 14:15:48,624 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 14:15:48,630 - INFO -  ====> Duration 0.53 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 14:15:59,321 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:15:59,324 - INFO - Starting execution of the main function.
2025-01-31 14:15:59,332 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:15:59,590 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:15:59,590 - INFO - Starting preprop_lstat function.
2025-01-31 14:15:59,602 - INFO - Renamed columns in DataFrame.
2025-01-31 14:15:59,620 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:15:59,622 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:15:59,626 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:15:59,628 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:15:59,632 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:15:59,713 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:15:59,714 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:15:59,720 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:15:59,720 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:15:59,727 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:15:59,730 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:15:59,736 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:15:59,736 - INFO - Starting preprop_resid function.
2025-01-31 14:15:59,737 - INFO - Renamed columns in DataFrame.
2025-01-31 14:15:59,743 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:15:59,744 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:15:59,746 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:15:59,747 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:15:59,749 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:15:59,756 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:15:59,756 - INFO - preprop_resid function completed successfully.
2025-01-31 14:15:59,756 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:15:59,763 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:15:59,771 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8E24DF610>), kwargs: {}
2025-01-31 14:15:59,821 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E215F930>, <folium.folium.Map object at 0x000002B8E24DF610>)
2025-01-31 14:16:00,021 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 14:16:00,028 - INFO -  ====> Duration 0.70 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 14:16:02,704 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:16:02,705 - INFO - Starting execution of the main function.
2025-01-31 14:16:02,710 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:16:02,971 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:16:02,972 - INFO - Starting preprop_lstat function.
2025-01-31 14:16:02,985 - INFO - Renamed columns in DataFrame.
2025-01-31 14:16:03,014 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:16:03,017 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:16:03,020 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:16:03,022 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:16:03,025 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:16:03,102 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:16:03,102 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:16:03,108 - INFO -  ====> Duration 0.14 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:16:03,109 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:16:03,114 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:16:03,117 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:16:03,124 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:16:03,124 - INFO - Starting preprop_resid function.
2025-01-31 14:16:03,125 - INFO - Renamed columns in DataFrame.
2025-01-31 14:16:03,132 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:16:03,132 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:16:03,134 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:16:03,135 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:16:03,138 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:16:03,149 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:16:03,150 - INFO - preprop_resid function completed successfully.
2025-01-31 14:16:03,150 - INFO -  ====> Duration 0.03 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:16:03,157 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:16:03,168 - ERROR - create_electric_charging_residents_heatmap raised an exception: SearchService.search_by_postal_code() missing 1 required positional argument: 'plz'
2025-01-31 14:16:05,207 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:16:05,207 - INFO - Starting execution of the main function.
2025-01-31 14:16:05,213 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:16:05,488 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:16:05,488 - INFO - Starting preprop_lstat function.
2025-01-31 14:16:05,501 - INFO - Renamed columns in DataFrame.
2025-01-31 14:16:05,529 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:16:05,534 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:16:05,537 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:16:05,539 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:16:05,543 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:16:05,651 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:16:05,652 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:16:05,657 - INFO -  ====> Duration 0.17 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:16:05,657 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:16:05,662 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:16:05,666 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:16:05,672 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:16:05,672 - INFO - Starting preprop_resid function.
2025-01-31 14:16:05,673 - INFO - Renamed columns in DataFrame.
2025-01-31 14:16:05,680 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:16:05,681 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:16:05,683 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:16:05,684 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:16:05,688 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:16:05,696 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:16:05,696 - INFO - preprop_resid function completed successfully.
2025-01-31 14:16:05,696 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:16:05,701 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:16:05,705 - ERROR - create_electric_charging_residents_heatmap raised an exception: SearchService.search_by_postal_code() missing 1 required positional argument: 'plz'
2025-01-31 14:16:11,941 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:16:11,941 - INFO - Starting execution of the main function.
2025-01-31 14:16:11,947 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:16:12,194 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:16:12,194 - INFO - Starting preprop_lstat function.
2025-01-31 14:16:12,208 - INFO - Renamed columns in DataFrame.
2025-01-31 14:16:12,237 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:16:12,241 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:16:12,244 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:16:12,246 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:16:12,249 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:16:12,361 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:16:12,363 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:16:12,369 - INFO -  ====> Duration 0.18 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:16:12,369 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:16:12,374 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:16:12,376 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:16:12,383 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:16:12,383 - INFO - Starting preprop_resid function.
2025-01-31 14:16:12,384 - INFO - Renamed columns in DataFrame.
2025-01-31 14:16:12,390 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:16:12,391 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:16:12,393 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:16:12,394 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:16:12,397 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:16:12,403 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:16:12,404 - INFO - preprop_resid function completed successfully.
2025-01-31 14:16:12,404 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:16:12,410 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:16:12,420 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD32490>), kwargs: {}
2025-01-31 14:16:12,472 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8ADA42EB0>, <folium.folium.Map object at 0x000002B8DFD32490>)
2025-01-31 14:16:12,621 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 14:16:12,628 - INFO -  ====> Duration 0.69 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 14:16:23,749 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:16:23,750 - INFO - Starting execution of the main function.
2025-01-31 14:16:23,755 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:16:23,964 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:16:23,964 - INFO - Starting preprop_lstat function.
2025-01-31 14:16:23,974 - INFO - Renamed columns in DataFrame.
2025-01-31 14:16:23,992 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:16:23,994 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:16:23,997 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:16:23,998 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:16:24,001 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:16:24,067 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:16:24,068 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:16:24,073 - INFO -  ====> Duration 0.11 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:16:24,073 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:16:24,078 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:16:24,081 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:16:24,086 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:16:24,087 - INFO - Starting preprop_resid function.
2025-01-31 14:16:24,087 - INFO - Renamed columns in DataFrame.
2025-01-31 14:16:24,093 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:16:24,094 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:16:24,095 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:16:24,096 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:16:24,098 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:16:24,105 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:16:24,113 - INFO - preprop_resid function completed successfully.
2025-01-31 14:16:24,113 - INFO -  ====> Duration 0.03 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:16:24,119 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:16:24,125 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8E24C9A70>), kwargs: {}
2025-01-31 14:16:24,162 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E1E3D8D0>, <folium.folium.Map object at 0x000002B8E24C9A70>)
2025-01-31 14:16:24,294 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 14:16:24,302 - INFO -  ====> Duration 0.55 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 14:16:25,659 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:16:25,659 - INFO - Starting execution of the main function.
2025-01-31 14:16:25,664 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:16:25,834 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:16:25,835 - INFO - Starting preprop_lstat function.
2025-01-31 14:16:25,846 - INFO - Renamed columns in DataFrame.
2025-01-31 14:16:25,864 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:16:25,866 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:16:25,869 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:16:25,870 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:16:25,874 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:16:25,941 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:16:25,941 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:16:25,947 - INFO -  ====> Duration 0.11 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:16:25,947 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:16:25,952 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:16:25,955 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:16:25,960 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:16:25,960 - INFO - Starting preprop_resid function.
2025-01-31 14:16:25,961 - INFO - Renamed columns in DataFrame.
2025-01-31 14:16:25,967 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:16:25,967 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:16:25,969 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:16:25,969 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:16:25,972 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:16:25,979 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:16:25,979 - INFO - preprop_resid function completed successfully.
2025-01-31 14:16:25,979 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:16:25,985 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:16:25,987 - ERROR - create_electric_charging_residents_heatmap raised an exception: module 'streamlit' has no attribute 'experimental_rerun'
2025-01-31 14:16:26,924 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:16:26,924 - INFO - Starting execution of the main function.
2025-01-31 14:16:26,931 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:16:27,177 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:16:27,177 - INFO - Starting preprop_lstat function.
2025-01-31 14:16:27,188 - INFO - Renamed columns in DataFrame.
2025-01-31 14:16:27,206 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:16:27,208 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:16:27,211 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:16:27,213 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:16:27,216 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:16:27,284 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:16:27,285 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:16:27,289 - INFO -  ====> Duration 0.11 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:16:27,290 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:16:27,295 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:16:27,298 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:16:27,304 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:16:27,305 - INFO - Starting preprop_resid function.
2025-01-31 14:16:27,305 - INFO - Renamed columns in DataFrame.
2025-01-31 14:16:27,311 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:16:27,312 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:16:27,314 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:16:27,314 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:16:27,317 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:16:27,323 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:16:27,324 - INFO - preprop_resid function completed successfully.
2025-01-31 14:16:27,324 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:16:27,332 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:16:36,366 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:16:36,367 - INFO - Starting execution of the main function.
2025-01-31 14:16:36,375 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:16:36,614 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:16:36,615 - INFO - Starting preprop_lstat function.
2025-01-31 14:16:36,630 - INFO - Renamed columns in DataFrame.
2025-01-31 14:16:36,650 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:16:36,653 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:16:36,656 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:16:36,658 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:16:36,662 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:16:36,731 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:16:36,731 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:16:36,739 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:16:36,739 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:16:36,748 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:16:36,751 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:16:36,759 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:16:36,759 - INFO - Starting preprop_resid function.
2025-01-31 14:16:36,760 - INFO - Renamed columns in DataFrame.
2025-01-31 14:16:36,768 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:16:36,769 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:16:36,773 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:16:36,775 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:16:36,779 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:16:36,790 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:16:36,790 - INFO - preprop_resid function completed successfully.
2025-01-31 14:16:36,791 - INFO -  ====> Duration 0.03 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:16:36,799 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:16:36,852 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:16:36,852 - INFO - Starting execution of the main function.
2025-01-31 14:16:36,857 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:16:37,103 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:16:37,104 - INFO - Starting preprop_lstat function.
2025-01-31 14:16:37,120 - INFO - Renamed columns in DataFrame.
2025-01-31 14:16:37,155 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:16:37,159 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:16:37,162 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:16:37,165 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:16:37,169 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:16:37,300 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:16:37,300 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:16:37,308 - INFO -  ====> Duration 0.20 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:16:37,308 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:16:37,314 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:16:37,317 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:16:37,325 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:16:37,325 - INFO - Starting preprop_resid function.
2025-01-31 14:16:37,325 - INFO - Renamed columns in DataFrame.
2025-01-31 14:16:37,332 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:16:37,332 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:16:37,334 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:16:37,335 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:16:37,337 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:16:37,348 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:16:37,348 - INFO - preprop_resid function completed successfully.
2025-01-31 14:16:37,349 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:16:37,357 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:16:37,366 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8E2CE5220>), kwargs: {}
2025-01-31 14:16:37,419 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E3183CB0>, <folium.folium.Map object at 0x000002B8E2CE5220>)
2025-01-31 14:16:37,592 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 14:16:37,600 - INFO -  ====> Duration 0.75 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 14:17:26,447 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:17:26,448 - INFO - Starting execution of the main function.
2025-01-31 14:17:26,453 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:17:26,664 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:17:26,664 - INFO - Starting preprop_lstat function.
2025-01-31 14:17:26,676 - INFO - Renamed columns in DataFrame.
2025-01-31 14:17:26,706 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:17:26,709 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:17:26,713 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:17:26,715 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:17:26,719 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:17:26,791 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:17:26,792 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:17:26,797 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:17:26,797 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:17:26,805 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:17:26,808 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:17:26,814 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:17:26,814 - INFO - Starting preprop_resid function.
2025-01-31 14:17:26,814 - INFO - Renamed columns in DataFrame.
2025-01-31 14:17:26,820 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:17:26,821 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:17:26,823 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:17:26,824 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:17:26,827 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:17:26,834 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:17:26,834 - INFO - preprop_resid function completed successfully.
2025-01-31 14:17:26,834 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:17:26,841 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:17:27,065 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 14:17:27,073 - INFO -  ====> Duration 0.63 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 14:17:32,879 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:17:32,879 - INFO - Starting execution of the main function.
2025-01-31 14:17:32,886 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:17:33,099 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:17:33,099 - INFO - Starting preprop_lstat function.
2025-01-31 14:17:33,113 - INFO - Renamed columns in DataFrame.
2025-01-31 14:17:33,132 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:17:33,135 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:17:33,137 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:17:33,138 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:17:33,143 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:17:33,262 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:17:33,262 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:17:33,269 - INFO -  ====> Duration 0.17 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:17:33,269 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:17:33,275 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:17:33,277 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:17:33,283 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:17:33,283 - INFO - Starting preprop_resid function.
2025-01-31 14:17:33,284 - INFO - Renamed columns in DataFrame.
2025-01-31 14:17:33,290 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:17:33,291 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:17:33,292 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:17:33,293 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:17:33,296 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:17:33,304 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:17:33,304 - INFO - preprop_resid function completed successfully.
2025-01-31 14:17:33,304 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:17:33,311 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:17:33,317 - ERROR - create_electric_charging_residents_heatmap raised an exception: 'Einwohner'
2025-01-31 14:17:37,309 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:17:37,310 - INFO - Starting execution of the main function.
2025-01-31 14:17:37,316 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:17:37,592 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:17:37,593 - INFO - Starting preprop_lstat function.
2025-01-31 14:17:37,607 - INFO - Renamed columns in DataFrame.
2025-01-31 14:17:37,638 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:17:37,641 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:17:37,645 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:17:37,646 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:17:37,650 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:17:37,766 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:17:37,766 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:17:37,773 - INFO -  ====> Duration 0.18 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:17:37,774 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:17:37,779 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:17:37,782 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:17:37,792 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:17:37,792 - INFO - Starting preprop_resid function.
2025-01-31 14:17:37,793 - INFO - Renamed columns in DataFrame.
2025-01-31 14:17:37,799 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:17:37,801 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:17:37,805 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:17:37,806 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:17:37,809 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:17:37,815 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:17:37,816 - INFO - preprop_resid function completed successfully.
2025-01-31 14:17:37,816 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:17:37,824 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:17:37,833 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 14:17:37,840 - INFO -  ====> Duration 0.53 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 14:17:41,702 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:17:41,702 - INFO - Starting execution of the main function.
2025-01-31 14:17:41,709 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:17:41,911 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:17:41,911 - INFO - Starting preprop_lstat function.
2025-01-31 14:17:41,924 - INFO - Renamed columns in DataFrame.
2025-01-31 14:17:41,946 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:17:41,949 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:17:41,952 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:17:41,955 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:17:41,961 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:17:42,029 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:17:42,030 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:17:42,038 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:17:42,038 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:17:42,044 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:17:42,047 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:17:42,053 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:17:42,053 - INFO - Starting preprop_resid function.
2025-01-31 14:17:42,054 - INFO - Renamed columns in DataFrame.
2025-01-31 14:17:42,060 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:17:42,061 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:17:42,062 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:17:42,065 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:17:42,068 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:17:42,075 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:17:42,075 - INFO - preprop_resid function completed successfully.
2025-01-31 14:17:42,076 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:17:42,082 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:17:42,088 - ERROR - create_electric_charging_residents_heatmap raised an exception: module 'dbm.sqlite3' has no attribute 'connect'
2025-01-31 14:17:46,046 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:17:46,046 - INFO - Starting execution of the main function.
2025-01-31 14:17:46,052 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:17:46,232 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:17:46,232 - INFO - Starting preprop_lstat function.
2025-01-31 14:17:46,245 - INFO - Renamed columns in DataFrame.
2025-01-31 14:17:46,262 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:17:46,267 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:17:46,270 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:17:46,272 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:17:46,276 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:17:46,346 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:17:46,347 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:17:46,352 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:17:46,352 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:17:46,358 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:17:46,361 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:17:46,367 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:17:46,367 - INFO - Starting preprop_resid function.
2025-01-31 14:17:46,368 - INFO - Renamed columns in DataFrame.
2025-01-31 14:17:46,374 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:17:46,375 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:17:46,377 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:17:46,378 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:17:46,380 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:17:46,388 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:17:46,388 - INFO - preprop_resid function completed successfully.
2025-01-31 14:17:46,388 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:17:46,394 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:17:46,400 - ERROR - create_electric_charging_residents_heatmap raised an exception: module 'dbm.sqlite3' has no attribute 'connect'
2025-01-31 14:17:53,067 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:17:53,068 - INFO - Starting execution of the main function.
2025-01-31 14:17:53,073 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:17:53,268 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:17:53,268 - INFO - Starting preprop_lstat function.
2025-01-31 14:17:53,282 - INFO - Renamed columns in DataFrame.
2025-01-31 14:17:53,307 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:17:53,310 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:17:53,313 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:17:53,315 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:17:53,319 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:17:53,425 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:17:53,426 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:17:53,431 - INFO -  ====> Duration 0.16 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:17:53,431 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:17:53,437 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:17:53,439 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:17:53,446 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:17:53,446 - INFO - Starting preprop_resid function.
2025-01-31 14:17:53,447 - INFO - Renamed columns in DataFrame.
2025-01-31 14:17:53,453 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:17:53,453 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:17:53,455 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:17:53,456 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:17:53,458 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:17:53,465 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:17:53,465 - INFO - preprop_resid function completed successfully.
2025-01-31 14:17:53,466 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:17:53,472 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:17:53,487 - ERROR - create_electric_charging_residents_heatmap raised an exception: module 'dbm.sqlite3' has no attribute 'connect'
2025-01-31 14:41:25,852 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:41:25,856 - INFO - Starting execution of the main function.
2025-01-31 14:41:25,869 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:41:25,920 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:41:25,921 - INFO - Starting execution of the main function.
2025-01-31 14:41:25,935 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:41:26,251 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:41:26,252 - INFO - Starting preprop_lstat function.
2025-01-31 14:41:26,268 - INFO - Renamed columns in DataFrame.
2025-01-31 14:41:26,288 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:41:26,295 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:41:26,299 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:41:26,305 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:41:26,310 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:41:26,380 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:41:26,381 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:41:26,389 - INFO -  ====> Duration 0.14 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:41:26,389 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:41:26,404 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:41:26,408 - INFO -  ====> Duration 0.02 secs: Counts loading stations per PLZ
2025-01-31 14:41:26,439 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:41:26,439 - INFO - Starting preprop_lstat function.
2025-01-31 14:41:26,452 - INFO - Renamed columns in DataFrame.
2025-01-31 14:41:26,477 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:41:26,481 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:41:26,481 - INFO - Starting preprop_resid function.
2025-01-31 14:41:26,482 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:41:26,483 - INFO - Renamed columns in DataFrame.
2025-01-31 14:41:26,485 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:41:26,494 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:41:26,495 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:41:26,497 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:41:26,500 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:41:26,502 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:41:26,509 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:41:26,511 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:41:26,516 - INFO - preprop_resid function completed successfully.
2025-01-31 14:41:26,516 - INFO -  ====> Duration 0.04 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:41:26,517 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:41:26,608 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:41:26,608 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:41:26,617 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:41:26,674 - INFO -  ====> Duration 0.23 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:41:26,699 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:41:26,705 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:41:26,707 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:41:26,715 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:41:26,715 - INFO - Starting preprop_resid function.
2025-01-31 14:41:26,716 - INFO - Renamed columns in DataFrame.
2025-01-31 14:41:26,722 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:41:26,723 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:41:26,724 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:41:26,726 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:41:26,728 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:41:26,735 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:41:26,736 - INFO - preprop_resid function completed successfully.
2025-01-31 14:41:26,736 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:41:26,743 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:41:26,747 - ERROR - create_electric_charging_residents_heatmap raised an exception: SearchService.search_by_postal_code() missing 1 required positional argument: 'plz'
2025-01-31 14:50:14,666 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:50:14,681 - INFO - Starting execution of the main function.
2025-01-31 14:50:14,687 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:50:14,873 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:50:14,874 - INFO - Starting preprop_lstat function.
2025-01-31 14:50:14,887 - INFO - Renamed columns in DataFrame.
2025-01-31 14:50:14,905 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:50:14,907 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:50:14,909 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:50:14,911 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:50:14,914 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:50:14,981 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:50:14,982 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:50:14,988 - INFO -  ====> Duration 0.11 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:50:14,988 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:50:14,994 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:50:14,996 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:50:15,003 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:50:15,003 - INFO - Starting preprop_resid function.
2025-01-31 14:50:15,004 - INFO - Renamed columns in DataFrame.
2025-01-31 14:50:15,010 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:50:15,010 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:50:15,012 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:50:15,013 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:50:15,016 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:50:15,023 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:50:15,023 - INFO - preprop_resid function completed successfully.
2025-01-31 14:50:15,023 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:50:15,031 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:50:15,034 - ERROR - create_electric_charging_residents_heatmap raised an exception: SearchService.search_by_postal_code() missing 1 required positional argument: 'plz'
2025-01-31 14:50:18,550 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:50:18,551 - INFO - Starting execution of the main function.
2025-01-31 14:50:18,558 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:50:18,816 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:50:18,816 - INFO - Starting preprop_lstat function.
2025-01-31 14:50:18,830 - INFO - Renamed columns in DataFrame.
2025-01-31 14:50:18,849 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:50:18,852 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:50:18,854 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:50:18,857 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:50:18,860 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:50:18,930 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:50:18,934 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:50:18,943 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:50:18,943 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:50:18,949 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:50:18,952 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:50:18,960 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:50:18,960 - INFO - Starting preprop_resid function.
2025-01-31 14:50:18,960 - INFO - Renamed columns in DataFrame.
2025-01-31 14:50:18,966 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:50:18,967 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:50:18,969 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:50:18,970 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:50:18,972 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:50:18,979 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:50:18,979 - INFO - preprop_resid function completed successfully.
2025-01-31 14:50:18,979 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:50:18,986 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:50:18,993 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 14:50:19,002 - INFO -  ====> Duration 0.45 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 14:50:20,713 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:50:20,714 - INFO - Starting execution of the main function.
2025-01-31 14:50:20,719 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:50:20,954 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:50:20,954 - INFO - Starting preprop_lstat function.
2025-01-31 14:50:20,964 - INFO - Renamed columns in DataFrame.
2025-01-31 14:50:20,983 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:50:20,986 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:50:20,989 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:50:20,991 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:50:20,994 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:50:21,109 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:50:21,109 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:50:21,116 - INFO -  ====> Duration 0.16 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:50:21,116 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:50:21,122 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:50:21,124 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:50:21,130 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:50:21,131 - INFO - Starting preprop_resid function.
2025-01-31 14:50:21,132 - INFO - Renamed columns in DataFrame.
2025-01-31 14:50:21,138 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:50:21,139 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:50:21,141 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:50:21,143 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:50:21,145 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:50:21,151 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:50:21,152 - INFO - preprop_resid function completed successfully.
2025-01-31 14:50:21,152 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:50:21,159 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:50:21,163 - ERROR - create_electric_charging_residents_heatmap raised an exception: SearchService.search_by_postal_code() missing 1 required positional argument: 'plz'
2025-01-31 14:53:24,456 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:53:24,464 - INFO - Starting execution of the main function.
2025-01-31 14:53:24,470 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:53:24,662 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:53:24,663 - INFO - Starting preprop_lstat function.
2025-01-31 14:53:24,674 - INFO - Renamed columns in DataFrame.
2025-01-31 14:53:24,692 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:53:24,695 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:53:24,697 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:53:24,699 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:53:24,702 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:53:24,769 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:53:24,770 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:53:24,776 - INFO -  ====> Duration 0.11 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:53:24,777 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:53:24,782 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:53:24,784 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:53:24,790 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:53:24,790 - INFO - Starting preprop_resid function.
2025-01-31 14:53:24,791 - INFO - Renamed columns in DataFrame.
2025-01-31 14:53:24,797 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:53:24,797 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:53:24,799 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:53:24,800 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:53:24,802 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:53:24,809 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:53:24,809 - INFO - preprop_resid function completed successfully.
2025-01-31 14:53:24,809 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:53:24,814 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:53:24,817 - ERROR - create_electric_charging_residents_heatmap raised an exception: SearchService.search_by_postal_code() missing 1 required positional argument: 'plz'
2025-01-31 14:53:29,995 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:53:29,996 - INFO - Starting execution of the main function.
2025-01-31 14:53:30,001 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:53:30,204 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:53:30,204 - INFO - Starting preprop_lstat function.
2025-01-31 14:53:30,220 - INFO - Renamed columns in DataFrame.
2025-01-31 14:53:30,240 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:53:30,243 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:53:30,245 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:53:30,246 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:53:30,249 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:53:30,318 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:53:30,318 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:53:30,328 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:53:30,328 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:53:30,336 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:53:30,338 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:53:30,347 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:53:30,347 - INFO - Starting preprop_resid function.
2025-01-31 14:53:30,348 - INFO - Renamed columns in DataFrame.
2025-01-31 14:53:30,357 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:53:30,358 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:53:30,360 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:53:30,361 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:53:30,363 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:53:30,370 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:53:30,370 - INFO - preprop_resid function completed successfully.
2025-01-31 14:53:30,370 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:53:30,376 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:53:30,379 - ERROR - create_electric_charging_residents_heatmap raised an exception: SearchService.search_by_postal_code() missing 1 required positional argument: 'plz'
2025-01-31 14:53:32,063 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:53:32,064 - INFO - Starting execution of the main function.
2025-01-31 14:53:32,070 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:53:32,303 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:53:32,303 - INFO - Starting preprop_lstat function.
2025-01-31 14:53:32,317 - INFO - Renamed columns in DataFrame.
2025-01-31 14:53:32,344 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:53:32,347 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:53:32,350 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:53:32,352 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:53:32,355 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:53:32,424 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:53:32,424 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:53:32,433 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:53:32,433 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:53:32,438 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:53:32,441 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:53:32,448 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:53:32,448 - INFO - Starting preprop_resid function.
2025-01-31 14:53:32,449 - INFO - Renamed columns in DataFrame.
2025-01-31 14:53:32,455 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:53:32,456 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:53:32,458 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:53:32,458 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:53:32,461 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:53:32,469 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:53:32,469 - INFO - preprop_resid function completed successfully.
2025-01-31 14:53:32,470 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:53:32,475 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:53:32,530 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:53:32,531 - INFO - Starting execution of the main function.
2025-01-31 14:53:32,540 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:53:32,777 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:53:32,777 - INFO - Starting preprop_lstat function.
2025-01-31 14:53:32,790 - INFO - Renamed columns in DataFrame.
2025-01-31 14:53:32,809 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:53:32,811 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:53:32,814 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:53:32,816 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:53:32,819 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:53:32,929 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:53:32,930 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:53:32,936 - INFO -  ====> Duration 0.16 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:53:32,936 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:53:32,941 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:53:32,944 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:53:32,951 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:53:32,951 - INFO - Starting preprop_resid function.
2025-01-31 14:53:32,952 - INFO - Renamed columns in DataFrame.
2025-01-31 14:53:32,958 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:53:32,959 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:53:32,960 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:53:32,962 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:53:32,964 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:53:32,971 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:53:32,971 - INFO - preprop_resid function completed successfully.
2025-01-31 14:53:32,972 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:53:32,978 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:53:37,918 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:53:37,918 - INFO - Starting execution of the main function.
2025-01-31 14:53:37,925 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:53:38,218 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:53:38,219 - INFO - Starting preprop_lstat function.
2025-01-31 14:53:38,237 - INFO - Renamed columns in DataFrame.
2025-01-31 14:53:38,266 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:53:38,269 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:53:38,273 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:53:38,275 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:53:38,278 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:53:38,361 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:53:38,361 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:53:38,370 - INFO -  ====> Duration 0.15 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:53:38,370 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:53:38,377 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:53:38,381 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:53:38,393 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:53:38,394 - INFO - Starting preprop_resid function.
2025-01-31 14:53:38,394 - INFO - Renamed columns in DataFrame.
2025-01-31 14:53:38,404 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:53:38,404 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:53:38,407 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:53:38,408 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:53:38,411 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:53:38,421 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:53:38,422 - INFO - preprop_resid function completed successfully.
2025-01-31 14:53:38,422 - INFO -  ====> Duration 0.03 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:53:38,430 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:53:38,494 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:53:38,495 - INFO - Starting execution of the main function.
2025-01-31 14:53:38,501 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:53:38,804 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:53:38,805 - INFO - Starting preprop_lstat function.
2025-01-31 14:53:38,817 - INFO - Renamed columns in DataFrame.
2025-01-31 14:53:38,836 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:53:38,838 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:53:38,841 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:53:38,843 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:53:38,846 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:53:38,959 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:53:38,960 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:53:38,968 - INFO -  ====> Duration 0.16 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:53:38,968 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:53:38,973 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:53:38,975 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:53:38,982 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:53:38,982 - INFO - Starting preprop_resid function.
2025-01-31 14:53:38,983 - INFO - Renamed columns in DataFrame.
2025-01-31 14:53:38,990 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:53:38,991 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:53:38,993 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:53:38,994 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:53:38,997 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:53:39,004 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:53:39,004 - INFO - preprop_resid function completed successfully.
2025-01-31 14:53:39,005 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:53:39,011 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:53:39,025 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1F750>), kwargs: {}
2025-01-31 14:53:39,082 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2349550>, <folium.folium.Map object at 0x000002B8DFD1F750>)
2025-01-31 14:53:39,269 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 14:53:39,281 - INFO -  ====> Duration 0.79 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 14:53:42,639 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:53:42,640 - INFO - Starting execution of the main function.
2025-01-31 14:53:42,647 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:53:42,933 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:53:42,933 - INFO - Starting preprop_lstat function.
2025-01-31 14:53:42,945 - INFO - Renamed columns in DataFrame.
2025-01-31 14:53:42,964 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:53:42,966 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:53:42,969 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:53:42,971 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:53:42,974 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:53:43,043 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:53:43,043 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:53:43,050 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:53:43,050 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:53:43,056 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:53:43,059 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:53:43,065 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:53:43,065 - INFO - Starting preprop_resid function.
2025-01-31 14:53:43,066 - INFO - Renamed columns in DataFrame.
2025-01-31 14:53:43,072 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:53:43,073 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:53:43,074 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:53:43,075 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:53:43,078 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:53:43,089 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:53:43,089 - INFO - preprop_resid function completed successfully.
2025-01-31 14:53:43,089 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:53:43,095 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:53:43,101 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1D150>), kwargs: {}
2025-01-31 14:53:43,155 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E23489F0>, <folium.folium.Map object at 0x000002B8DFD1D150>)
2025-01-31 14:53:43,325 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 14:53:43,333 - INFO -  ====> Duration 0.69 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 14:53:44,789 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:53:44,790 - INFO - Starting execution of the main function.
2025-01-31 14:53:44,797 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:53:45,006 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:53:45,006 - INFO - Starting preprop_lstat function.
2025-01-31 14:53:45,024 - INFO - Renamed columns in DataFrame.
2025-01-31 14:53:45,043 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:53:45,046 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:53:45,048 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:53:45,050 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:53:45,053 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:53:45,123 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:53:45,123 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:53:45,131 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:53:45,131 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:53:45,137 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:53:45,142 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:53:45,149 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:53:45,149 - INFO - Starting preprop_resid function.
2025-01-31 14:53:45,149 - INFO - Renamed columns in DataFrame.
2025-01-31 14:53:45,156 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:53:45,156 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:53:45,158 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:53:45,158 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:53:45,161 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:53:45,168 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:53:45,168 - INFO - preprop_resid function completed successfully.
2025-01-31 14:53:45,169 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:53:45,174 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:53:45,177 - ERROR - create_electric_charging_residents_heatmap raised an exception: SearchService.search_by_postal_code() missing 1 required positional argument: 'plz'
2025-01-31 14:56:31,964 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:56:31,965 - INFO - Starting execution of the main function.
2025-01-31 14:56:31,974 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:56:32,170 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:56:32,170 - INFO - Starting preprop_lstat function.
2025-01-31 14:56:32,182 - INFO - Renamed columns in DataFrame.
2025-01-31 14:56:32,202 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:56:32,204 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:56:32,208 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:56:32,210 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:56:32,214 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:56:32,333 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:56:32,334 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:56:32,340 - INFO -  ====> Duration 0.17 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:56:32,340 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:56:32,345 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:56:32,348 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:56:32,354 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:56:32,354 - INFO - Starting preprop_resid function.
2025-01-31 14:56:32,355 - INFO - Renamed columns in DataFrame.
2025-01-31 14:56:32,361 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:56:32,361 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:56:32,363 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:56:32,364 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:56:32,366 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:56:32,375 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:56:32,376 - INFO - preprop_resid function completed successfully.
2025-01-31 14:56:32,376 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:56:32,382 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:56:32,389 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8E230D050>), kwargs: {}
2025-01-31 14:56:32,430 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E29810F0>, <folium.folium.Map object at 0x000002B8E230D050>)
2025-01-31 14:56:32,565 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 14:56:32,572 - INFO -  ====> Duration 0.61 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 14:56:34,131 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 14:56:34,132 - INFO - Starting execution of the main function.
2025-01-31 14:56:34,137 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 14:56:34,360 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 14:56:34,361 - INFO - Starting preprop_lstat function.
2025-01-31 14:56:34,376 - INFO - Renamed columns in DataFrame.
2025-01-31 14:56:34,395 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:56:34,399 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 14:56:34,402 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:56:34,404 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 14:56:34,407 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 14:56:34,476 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:56:34,476 - INFO - preprop_lstat function completed successfully.
2025-01-31 14:56:34,484 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 14:56:34,485 - INFO - Starting count_plz_occurrences function.
2025-01-31 14:56:34,490 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 14:56:34,493 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 14:56:34,499 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 14:56:34,499 - INFO - Starting preprop_resid function.
2025-01-31 14:56:34,500 - INFO - Renamed columns in DataFrame.
2025-01-31 14:56:34,506 - INFO - Formatted latitude and longitude columns.
2025-01-31 14:56:34,507 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 14:56:34,509 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 14:56:34,510 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 14:56:34,512 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 14:56:34,519 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 14:56:34,519 - INFO - preprop_resid function completed successfully.
2025-01-31 14:56:34,519 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 14:56:34,526 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 14:56:34,530 - ERROR - create_electric_charging_residents_heatmap raised an exception: SearchService.search_by_postal_code() missing 1 required positional argument: 'plz'
2025-01-31 15:02:36,540 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:02:36,550 - INFO - Starting execution of the main function.
2025-01-31 15:02:36,555 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:02:36,756 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:02:36,756 - INFO - Starting preprop_lstat function.
2025-01-31 15:02:36,769 - INFO - Renamed columns in DataFrame.
2025-01-31 15:02:36,787 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:02:36,790 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:02:36,792 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:02:36,794 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:02:36,797 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:02:36,863 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:02:36,863 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:02:36,869 - INFO -  ====> Duration 0.11 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:02:36,869 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:02:36,874 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:02:36,876 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:02:36,883 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:02:36,883 - INFO - Starting preprop_resid function.
2025-01-31 15:02:36,883 - INFO - Renamed columns in DataFrame.
2025-01-31 15:02:36,889 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:02:36,889 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:02:36,891 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:02:36,892 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:02:36,894 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:02:36,901 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:02:36,901 - INFO - preprop_resid function completed successfully.
2025-01-31 15:02:36,901 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:02:36,906 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:02:36,913 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8E230DF50>), kwargs: {}
2025-01-31 15:02:36,954 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E0571D30>, <folium.folium.Map object at 0x000002B8E230DF50>)
2025-01-31 15:02:37,093 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:02:37,100 - INFO -  ====> Duration 0.55 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:02:40,482 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:02:40,483 - INFO - Starting execution of the main function.
2025-01-31 15:02:40,488 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:02:40,720 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:02:40,720 - INFO - Starting preprop_lstat function.
2025-01-31 15:02:40,737 - INFO - Renamed columns in DataFrame.
2025-01-31 15:02:40,756 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:02:40,759 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:02:40,762 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:02:40,764 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:02:40,767 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:02:40,834 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:02:40,835 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:02:40,843 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:02:40,843 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:02:40,848 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:02:40,850 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:02:40,857 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:02:40,857 - INFO - Starting preprop_resid function.
2025-01-31 15:02:40,859 - INFO - Renamed columns in DataFrame.
2025-01-31 15:02:40,865 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:02:40,865 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:02:40,867 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:02:40,868 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:02:40,870 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:02:40,877 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:02:40,877 - INFO - preprop_resid function completed successfully.
2025-01-31 15:02:40,878 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:02:40,885 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:02:40,894 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1C650>), kwargs: {}
2025-01-31 15:02:40,950 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E3182B30>, <folium.folium.Map object at 0x000002B8DFD1C650>)
2025-01-31 15:02:41,137 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:02:41,146 - INFO -  ====> Duration 0.66 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:02:45,778 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:02:45,778 - INFO - Starting execution of the main function.
2025-01-31 15:02:45,786 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:02:46,069 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:02:46,069 - INFO - Starting preprop_lstat function.
2025-01-31 15:02:46,084 - INFO - Renamed columns in DataFrame.
2025-01-31 15:02:46,105 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:02:46,108 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:02:46,110 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:02:46,112 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:02:46,115 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:02:46,185 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:02:46,185 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:02:46,194 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:02:46,195 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:02:46,200 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:02:46,203 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:02:46,210 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:02:46,210 - INFO - Starting preprop_resid function.
2025-01-31 15:02:46,211 - INFO - Renamed columns in DataFrame.
2025-01-31 15:02:46,217 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:02:46,218 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:02:46,220 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:02:46,221 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:02:46,224 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:02:46,231 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:02:46,231 - INFO - preprop_resid function completed successfully.
2025-01-31 15:02:46,231 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:02:46,238 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:02:46,247 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1E750>), kwargs: {}
2025-01-31 15:02:46,290 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8AECE09F0>, <folium.folium.Map object at 0x000002B8DFD1E750>)
2025-01-31 15:02:46,484 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:02:46,493 - INFO -  ====> Duration 0.71 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:02:47,342 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:02:47,343 - INFO - Starting execution of the main function.
2025-01-31 15:02:47,351 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:02:47,629 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:02:47,629 - INFO - Starting preprop_lstat function.
2025-01-31 15:02:47,648 - INFO - Renamed columns in DataFrame.
2025-01-31 15:02:47,675 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:02:47,679 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:02:47,682 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:02:47,684 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:02:47,688 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:02:47,783 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:02:47,784 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:02:47,795 - INFO -  ====> Duration 0.17 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:02:47,795 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:02:47,800 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:02:47,803 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:02:47,811 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:02:47,811 - INFO - Starting preprop_resid function.
2025-01-31 15:02:47,811 - INFO - Renamed columns in DataFrame.
2025-01-31 15:02:47,819 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:02:47,820 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:02:47,822 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:02:47,823 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:02:47,826 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:02:47,836 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:02:47,836 - INFO - preprop_resid function completed successfully.
2025-01-31 15:02:47,837 - INFO -  ====> Duration 0.03 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:02:47,844 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:02:47,846 - ERROR - An unexpected error occurred: float() argument must be a string or a real number, not 'PostalCode'
2025-01-31 15:02:47,851 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DE0FF550>), kwargs: {}
2025-01-31 15:02:47,912 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E3183CB0>, <folium.folium.Map object at 0x000002B8DE0FF550>)
2025-01-31 15:02:48,103 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:02:48,116 - INFO -  ====> Duration 0.77 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:07:01,193 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:07:01,201 - INFO - Starting execution of the main function.
2025-01-31 15:07:01,209 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:07:01,427 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:07:01,428 - INFO - Starting preprop_lstat function.
2025-01-31 15:07:01,442 - INFO - Renamed columns in DataFrame.
2025-01-31 15:07:01,464 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:07:01,466 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:07:01,469 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:07:01,471 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:07:01,474 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:07:01,542 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:07:01,543 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:07:01,551 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:07:01,551 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:07:01,556 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:07:01,558 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:07:01,565 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:07:01,565 - INFO - Starting preprop_resid function.
2025-01-31 15:07:01,566 - INFO - Renamed columns in DataFrame.
2025-01-31 15:07:01,572 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:07:01,572 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:07:01,574 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:07:01,575 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:07:01,577 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:07:01,584 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:07:01,584 - INFO - preprop_resid function completed successfully.
2025-01-31 15:07:01,585 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:07:01,589 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:07:01,597 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1F250>), kwargs: {}
2025-01-31 15:07:01,635 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2FCA430>, <folium.folium.Map object at 0x000002B8DFD1F250>)
2025-01-31 15:07:01,774 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:07:01,784 - INFO -  ====> Duration 0.58 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:07:08,915 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:07:08,916 - INFO - Starting execution of the main function.
2025-01-31 15:07:08,922 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:07:09,118 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:07:09,119 - INFO - Starting preprop_lstat function.
2025-01-31 15:07:09,132 - INFO - Renamed columns in DataFrame.
2025-01-31 15:07:09,150 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:07:09,153 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:07:09,156 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:07:09,157 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:07:09,160 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:07:09,229 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:07:09,229 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:07:09,236 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:07:09,236 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:07:09,241 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:07:09,244 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:07:09,250 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:07:09,250 - INFO - Starting preprop_resid function.
2025-01-31 15:07:09,250 - INFO - Renamed columns in DataFrame.
2025-01-31 15:07:09,256 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:07:09,256 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:07:09,258 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:07:09,260 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:07:09,263 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:07:09,269 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:07:09,269 - INFO - preprop_resid function completed successfully.
2025-01-31 15:07:09,269 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:07:09,274 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:07:09,281 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1EF50>), kwargs: {}
2025-01-31 15:07:09,318 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E3183930>, <folium.folium.Map object at 0x000002B8DFD1EF50>)
2025-01-31 15:07:09,452 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:07:09,461 - INFO -  ====> Duration 0.54 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:07:10,385 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:07:10,386 - INFO - Starting execution of the main function.
2025-01-31 15:07:10,392 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:07:10,607 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:07:10,608 - INFO - Starting preprop_lstat function.
2025-01-31 15:07:10,621 - INFO - Renamed columns in DataFrame.
2025-01-31 15:07:10,640 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:07:10,643 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:07:10,645 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:07:10,646 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:07:10,649 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:07:10,719 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:07:10,721 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:07:10,731 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:07:10,731 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:07:10,738 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:07:10,741 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:07:10,748 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:07:10,748 - INFO - Starting preprop_resid function.
2025-01-31 15:07:10,749 - INFO - Renamed columns in DataFrame.
2025-01-31 15:07:10,757 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:07:10,757 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:07:10,759 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:07:10,760 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:07:10,762 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:07:10,770 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:07:10,770 - INFO - preprop_resid function completed successfully.
2025-01-31 15:07:10,770 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:07:10,779 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:07:10,791 - INFO - Searching for postal code: 10115
2025-01-31 15:07:10,791 - ERROR - An unexpected error occurred: 'Postleitzahl'
2025-01-31 15:07:10,798 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8ADA08950>), kwargs: {}
2025-01-31 15:07:10,844 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2FC9390>, <folium.folium.Map object at 0x000002B8ADA08950>)
2025-01-31 15:07:10,982 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:07:10,990 - INFO -  ====> Duration 0.60 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:08:34,752 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:08:34,759 - INFO - Starting execution of the main function.
2025-01-31 15:08:34,764 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:08:34,984 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:08:34,988 - INFO - Starting preprop_lstat function.
2025-01-31 15:08:35,001 - INFO - Renamed columns in DataFrame.
2025-01-31 15:08:35,019 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:08:35,021 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:08:35,024 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:08:35,025 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:08:35,029 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:08:35,094 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:08:35,094 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:08:35,100 - INFO -  ====> Duration 0.11 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:08:35,101 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:08:35,106 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:08:35,108 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:08:35,114 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:08:35,114 - INFO - Starting preprop_resid function.
2025-01-31 15:08:35,115 - INFO - Renamed columns in DataFrame.
2025-01-31 15:08:35,121 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:08:35,122 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:08:35,124 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:08:35,125 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:08:35,127 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:08:35,134 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:08:35,134 - INFO - preprop_resid function completed successfully.
2025-01-31 15:08:35,134 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:08:35,139 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:08:35,142 - INFO - Searching for postal code: 10115.0
2025-01-31 15:08:35,142 - ERROR - An unexpected error occurred: 'Postleitzahl'
2025-01-31 15:08:35,148 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1FE50>), kwargs: {}
2025-01-31 15:08:35,185 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E0B99E10>, <folium.folium.Map object at 0x000002B8DFD1FE50>)
2025-01-31 15:08:35,316 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:08:35,324 - INFO -  ====> Duration 0.56 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:08:36,255 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:08:36,255 - INFO - Starting execution of the main function.
2025-01-31 15:08:36,261 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:08:36,450 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:08:36,451 - INFO - Starting preprop_lstat function.
2025-01-31 15:08:36,462 - INFO - Renamed columns in DataFrame.
2025-01-31 15:08:36,480 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:08:36,482 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:08:36,484 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:08:36,486 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:08:36,489 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:08:36,556 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:08:36,556 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:08:36,562 - INFO -  ====> Duration 0.11 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:08:36,563 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:08:36,568 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:08:36,570 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:08:36,575 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:08:36,575 - INFO - Starting preprop_resid function.
2025-01-31 15:08:36,576 - INFO - Renamed columns in DataFrame.
2025-01-31 15:08:36,582 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:08:36,582 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:08:36,584 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:08:36,585 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:08:36,587 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:08:36,593 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:08:36,593 - INFO - preprop_resid function completed successfully.
2025-01-31 15:08:36,594 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:08:36,599 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:08:36,602 - INFO - Searching for postal code: 10115.0
2025-01-31 15:08:36,602 - ERROR - An unexpected error occurred: 'Postleitzahl'
2025-01-31 15:08:36,608 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DE0FF550>), kwargs: {}
2025-01-31 15:08:36,644 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8AECE0F30>, <folium.folium.Map object at 0x000002B8DE0FF550>)
2025-01-31 15:08:36,779 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:08:36,789 - INFO -  ====> Duration 0.53 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:08:39,092 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:08:39,092 - INFO - Starting execution of the main function.
2025-01-31 15:08:39,098 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:08:39,374 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:08:39,375 - INFO - Starting preprop_lstat function.
2025-01-31 15:08:39,388 - INFO - Renamed columns in DataFrame.
2025-01-31 15:08:39,410 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:08:39,413 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:08:39,415 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:08:39,417 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:08:39,420 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:08:39,489 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:08:39,489 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:08:39,497 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:08:39,497 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:08:39,503 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:08:39,505 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:08:39,512 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:08:39,512 - INFO - Starting preprop_resid function.
2025-01-31 15:08:39,513 - INFO - Renamed columns in DataFrame.
2025-01-31 15:08:39,520 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:08:39,520 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:08:39,524 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:08:39,526 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:08:39,528 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:08:39,535 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:08:39,535 - INFO - preprop_resid function completed successfully.
2025-01-31 15:08:39,535 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:08:39,540 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:08:39,544 - INFO - Searching for postal code: 10115.0
2025-01-31 15:08:39,544 - ERROR - An unexpected error occurred: 'Postleitzahl'
2025-01-31 15:08:39,552 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1D150>), kwargs: {}
2025-01-31 15:08:39,606 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E3183A10>, <folium.folium.Map object at 0x000002B8DFD1D150>)
2025-01-31 15:08:39,744 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:08:39,754 - INFO -  ====> Duration 0.66 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:08:43,721 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:08:43,721 - INFO - Starting execution of the main function.
2025-01-31 15:08:43,731 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:08:43,941 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:08:43,941 - INFO - Starting preprop_lstat function.
2025-01-31 15:08:43,959 - INFO - Renamed columns in DataFrame.
2025-01-31 15:08:43,979 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:08:43,982 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:08:43,985 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:08:43,988 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:08:43,994 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:08:44,068 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:08:44,068 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:08:44,075 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:08:44,076 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:08:44,082 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:08:44,085 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:08:44,092 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:08:44,092 - INFO - Starting preprop_resid function.
2025-01-31 15:08:44,093 - INFO - Renamed columns in DataFrame.
2025-01-31 15:08:44,099 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:08:44,100 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:08:44,102 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:08:44,103 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:08:44,106 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:08:44,113 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:08:44,113 - INFO - preprop_resid function completed successfully.
2025-01-31 15:08:44,114 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:08:44,121 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:08:44,129 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1DF50>), kwargs: {}
2025-01-31 15:08:44,186 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2FCAA50>, <folium.folium.Map object at 0x000002B8DFD1DF50>)
2025-01-31 15:08:44,375 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:08:44,383 - INFO -  ====> Duration 0.66 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:08:45,178 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:08:45,178 - INFO - Starting execution of the main function.
2025-01-31 15:08:45,184 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:08:45,372 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:08:45,372 - INFO - Starting preprop_lstat function.
2025-01-31 15:08:45,384 - INFO - Renamed columns in DataFrame.
2025-01-31 15:08:45,407 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:08:45,410 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:08:45,413 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:08:45,415 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:08:45,420 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:08:45,536 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:08:45,536 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:08:45,544 - INFO -  ====> Duration 0.17 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:08:45,544 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:08:45,550 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:08:45,554 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:08:45,561 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:08:45,561 - INFO - Starting preprop_resid function.
2025-01-31 15:08:45,561 - INFO - Renamed columns in DataFrame.
2025-01-31 15:08:45,568 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:08:45,568 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:08:45,570 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:08:45,571 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:08:45,574 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:08:45,581 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:08:45,581 - INFO - preprop_resid function completed successfully.
2025-01-31 15:08:45,581 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:08:45,588 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:08:45,592 - INFO - Searching for postal code: 10115.0
2025-01-31 15:08:45,592 - ERROR - An unexpected error occurred: 'Postleitzahl'
2025-01-31 15:08:45,599 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1EA50>), kwargs: {}
2025-01-31 15:08:45,640 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E3183850>, <folium.folium.Map object at 0x000002B8DFD1EA50>)
2025-01-31 15:08:45,803 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:08:45,811 - INFO -  ====> Duration 0.63 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:08:47,216 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:08:47,217 - INFO - Starting execution of the main function.
2025-01-31 15:08:47,222 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:08:47,482 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:08:47,483 - INFO - Starting preprop_lstat function.
2025-01-31 15:08:47,499 - INFO - Renamed columns in DataFrame.
2025-01-31 15:08:47,519 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:08:47,521 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:08:47,524 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:08:47,525 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:08:47,529 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:08:47,644 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:08:47,644 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:08:47,652 - INFO -  ====> Duration 0.17 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:08:47,652 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:08:47,659 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:08:47,662 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:08:47,669 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:08:47,669 - INFO - Starting preprop_resid function.
2025-01-31 15:08:47,669 - INFO - Renamed columns in DataFrame.
2025-01-31 15:08:47,675 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:08:47,675 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:08:47,677 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:08:47,679 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:08:47,681 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:08:47,688 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:08:47,688 - INFO - preprop_resid function completed successfully.
2025-01-31 15:08:47,688 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:08:47,694 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:08:47,698 - INFO - Searching for postal code: 10115.0
2025-01-31 15:08:47,698 - ERROR - An unexpected error occurred: 'Postleitzahl'
2025-01-31 15:08:47,705 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DE0FF550>), kwargs: {}
2025-01-31 15:08:47,744 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E3182970>, <folium.folium.Map object at 0x000002B8DE0FF550>)
2025-01-31 15:08:47,938 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:08:47,951 - INFO -  ====> Duration 0.73 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:09:23,483 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:09:23,493 - INFO - Starting execution of the main function.
2025-01-31 15:09:23,501 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:09:23,711 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:09:23,711 - INFO - Starting preprop_lstat function.
2025-01-31 15:09:23,724 - INFO - Renamed columns in DataFrame.
2025-01-31 15:09:23,743 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:09:23,745 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:09:23,747 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:09:23,749 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:09:23,752 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:09:23,818 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:09:23,818 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:09:23,824 - INFO -  ====> Duration 0.11 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:09:23,825 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:09:23,830 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:09:23,832 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:09:23,838 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:09:23,839 - INFO - Starting preprop_resid function.
2025-01-31 15:09:23,839 - INFO - Renamed columns in DataFrame.
2025-01-31 15:09:23,845 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:09:23,846 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:09:23,848 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:09:23,849 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:09:23,851 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:09:23,858 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:09:23,858 - INFO - preprop_resid function completed successfully.
2025-01-31 15:09:23,858 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:09:23,863 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:09:23,870 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1C650>), kwargs: {}
2025-01-31 15:09:23,906 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E0B9A190>, <folium.folium.Map object at 0x000002B8DFD1C650>)
2025-01-31 15:09:24,048 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:09:24,057 - INFO -  ====> Duration 0.56 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:09:25,216 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:09:25,218 - INFO - Starting execution of the main function.
2025-01-31 15:09:25,223 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:09:25,423 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:09:25,423 - INFO - Starting preprop_lstat function.
2025-01-31 15:09:25,435 - INFO - Renamed columns in DataFrame.
2025-01-31 15:09:25,454 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:09:25,458 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:09:25,462 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:09:25,464 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:09:25,467 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:09:25,546 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:09:25,546 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:09:25,553 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:09:25,553 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:09:25,558 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:09:25,561 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:09:25,567 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:09:25,567 - INFO - Starting preprop_resid function.
2025-01-31 15:09:25,568 - INFO - Renamed columns in DataFrame.
2025-01-31 15:09:25,574 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:09:25,575 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:09:25,576 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:09:25,577 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:09:25,580 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:09:25,586 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:09:25,587 - INFO - preprop_resid function completed successfully.
2025-01-31 15:09:25,587 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:09:25,592 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:09:25,594 - INFO - Searching for postal code: 10115
2025-01-31 15:09:25,594 - ERROR - An unexpected error occurred: 'Postleitzahl'
2025-01-31 15:09:25,600 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8ADA09650>), kwargs: {}
2025-01-31 15:09:25,637 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2FC89F0>, <folium.folium.Map object at 0x000002B8ADA09650>)
2025-01-31 15:09:25,768 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:09:25,776 - INFO -  ====> Duration 0.56 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:09:26,600 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:09:26,601 - INFO - Starting execution of the main function.
2025-01-31 15:09:26,606 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:09:26,801 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:09:26,801 - INFO - Starting preprop_lstat function.
2025-01-31 15:09:26,813 - INFO - Renamed columns in DataFrame.
2025-01-31 15:09:26,831 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:09:26,836 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:09:26,839 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:09:26,841 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:09:26,844 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:09:26,911 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:09:26,911 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:09:26,917 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:09:26,918 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:09:26,923 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:09:26,925 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:09:26,931 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:09:26,931 - INFO - Starting preprop_resid function.
2025-01-31 15:09:26,931 - INFO - Renamed columns in DataFrame.
2025-01-31 15:09:26,937 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:09:26,938 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:09:26,939 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:09:26,941 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:09:26,943 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:09:26,949 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:09:26,950 - INFO - preprop_resid function completed successfully.
2025-01-31 15:09:26,950 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:09:26,956 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:09:26,959 - INFO - Searching for postal code: 10115
2025-01-31 15:09:26,960 - ERROR - An unexpected error occurred: 'Postleitzahl'
2025-01-31 15:09:26,965 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1FD50>), kwargs: {}
2025-01-31 15:09:27,003 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E0B9A510>, <folium.folium.Map object at 0x000002B8DFD1FD50>)
2025-01-31 15:09:27,140 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:09:27,150 - INFO -  ====> Duration 0.55 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:10:55,714 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:10:55,721 - INFO - Starting execution of the main function.
2025-01-31 15:10:55,726 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:10:55,926 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:10:55,926 - INFO - Starting preprop_lstat function.
2025-01-31 15:10:55,939 - INFO - Renamed columns in DataFrame.
2025-01-31 15:10:55,959 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:10:55,962 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:10:55,965 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:10:55,967 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:10:55,970 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:10:56,038 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:10:56,039 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:10:56,045 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:10:56,045 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:10:56,051 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:10:56,053 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:10:56,060 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:10:56,060 - INFO - Starting preprop_resid function.
2025-01-31 15:10:56,060 - INFO - Renamed columns in DataFrame.
2025-01-31 15:10:56,066 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:10:56,067 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:10:56,069 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:10:56,070 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:10:56,072 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:10:56,079 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:10:56,079 - INFO - preprop_resid function completed successfully.
2025-01-31 15:10:56,079 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:10:56,085 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:10:56,091 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1CC50>), kwargs: {}
2025-01-31 15:10:56,130 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2FCA6D0>, <folium.folium.Map object at 0x000002B8DFD1CC50>)
2025-01-31 15:10:56,260 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:10:56,269 - INFO -  ====> Duration 0.55 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:10:57,414 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:10:57,414 - INFO - Starting execution of the main function.
2025-01-31 15:10:57,420 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:10:57,613 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:10:57,613 - INFO - Starting preprop_lstat function.
2025-01-31 15:10:57,625 - INFO - Renamed columns in DataFrame.
2025-01-31 15:10:57,642 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:10:57,645 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:10:57,647 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:10:57,649 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:10:57,651 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:10:57,717 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:10:57,717 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:10:57,723 - INFO -  ====> Duration 0.11 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:10:57,723 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:10:57,728 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:10:57,730 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:10:57,736 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:10:57,736 - INFO - Starting preprop_resid function.
2025-01-31 15:10:57,737 - INFO - Renamed columns in DataFrame.
2025-01-31 15:10:57,742 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:10:57,743 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:10:57,744 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:10:57,745 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:10:57,747 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:10:57,753 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:10:57,754 - INFO - preprop_resid function completed successfully.
2025-01-31 15:10:57,754 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:10:57,758 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:10:57,761 - INFO - Searching for postal code: 10115
2025-01-31 15:10:57,762 - INFO - Filtered dataframe:
Empty DataFrame
Columns: [PLZ, Number, geometry_x, Einwohner, Breitengrad, Längengrad, geometry_y]
Index: []
2025-01-31 15:10:57,776 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8ADA08950>), kwargs: {}
2025-01-31 15:10:57,813 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E0B9BA10>, <folium.folium.Map object at 0x000002B8ADA08950>)
2025-01-31 15:10:57,948 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:10:57,956 - INFO -  ====> Duration 0.54 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:17:46,772 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:17:46,787 - INFO - Starting execution of the main function.
2025-01-31 15:17:46,794 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:17:46,986 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:17:46,986 - INFO - Starting preprop_lstat function.
2025-01-31 15:17:46,998 - INFO - Renamed columns in DataFrame.
2025-01-31 15:17:47,017 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:17:47,020 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:17:47,022 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:17:47,024 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:17:47,027 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:17:47,094 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:17:47,095 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:17:47,102 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:17:47,103 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:17:47,108 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:17:47,110 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:17:47,117 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:17:47,117 - INFO - Starting preprop_resid function.
2025-01-31 15:17:47,118 - INFO - Renamed columns in DataFrame.
2025-01-31 15:17:47,124 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:17:47,124 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:17:47,126 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:17:47,127 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:17:47,129 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:17:47,136 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:17:47,136 - INFO - preprop_resid function completed successfully.
2025-01-31 15:17:47,137 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:17:47,142 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:17:47,144 - INFO - Searching for postal code: 10115
2025-01-31 15:17:47,148 - INFO - merged_df: 
       PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 15:17:47,148 - INFO - Filtered dataframe:
Empty DataFrame
Columns: [PLZ, Number, geometry_x, Einwohner, Breitengrad, Längengrad, geometry_y]
Index: []
2025-01-31 15:17:47,154 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1ED50>), kwargs: {}
2025-01-31 15:17:47,192 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2FCA270>, <folium.folium.Map object at 0x000002B8DFD1ED50>)
2025-01-31 15:17:47,326 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:17:47,337 - INFO -  ====> Duration 0.55 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:17:51,247 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:17:51,247 - INFO - Starting execution of the main function.
2025-01-31 15:17:51,253 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:17:51,504 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:17:51,504 - INFO - Starting preprop_lstat function.
2025-01-31 15:17:51,520 - INFO - Renamed columns in DataFrame.
2025-01-31 15:17:51,546 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:17:51,550 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:17:51,553 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:17:51,555 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:17:51,559 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:17:51,670 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:17:51,671 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:17:51,680 - INFO -  ====> Duration 0.18 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:17:51,680 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:17:51,686 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:17:51,690 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:17:51,699 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:17:51,699 - INFO - Starting preprop_resid function.
2025-01-31 15:17:51,700 - INFO - Renamed columns in DataFrame.
2025-01-31 15:17:51,707 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:17:51,707 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:17:51,709 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:17:51,710 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:17:51,712 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:17:51,721 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:17:51,721 - INFO - preprop_resid function completed successfully.
2025-01-31 15:17:51,721 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:17:51,728 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:17:51,736 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1C650>), kwargs: {}
2025-01-31 15:17:51,774 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E0B98BB0>, <folium.folium.Map object at 0x000002B8DFD1C650>)
2025-01-31 15:17:51,921 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:17:51,933 - INFO -  ====> Duration 0.69 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:17:53,132 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:17:53,133 - INFO - Starting execution of the main function.
2025-01-31 15:17:53,139 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:17:53,389 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:17:53,390 - INFO - Starting preprop_lstat function.
2025-01-31 15:17:53,403 - INFO - Renamed columns in DataFrame.
2025-01-31 15:17:53,421 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:17:53,424 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:17:53,426 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:17:53,428 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:17:53,431 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:17:53,498 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:17:53,498 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:17:53,505 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:17:53,506 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:17:53,511 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:17:53,514 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:17:53,521 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:17:53,521 - INFO - Starting preprop_resid function.
2025-01-31 15:17:53,522 - INFO - Renamed columns in DataFrame.
2025-01-31 15:17:53,528 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:17:53,529 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:17:53,532 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:17:53,533 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:17:53,537 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:17:53,544 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:17:53,544 - INFO - preprop_resid function completed successfully.
2025-01-31 15:17:53,545 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:17:53,551 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:17:53,555 - INFO - Searching for postal code: 10115
2025-01-31 15:17:53,559 - INFO - merged_df: 
       PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 15:17:53,561 - INFO - Filtered dataframe:
Empty DataFrame
Columns: [PLZ, Number, geometry_x, Einwohner, Breitengrad, Längengrad, geometry_y]
Index: []
2025-01-31 15:17:53,567 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8ADA08950>), kwargs: {}
2025-01-31 15:17:53,618 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2FC97F0>, <folium.folium.Map object at 0x000002B8ADA08950>)
2025-01-31 15:17:53,807 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:17:53,818 - INFO -  ====> Duration 0.69 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:27:42,387 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:27:42,409 - INFO - Starting execution of the main function.
2025-01-31 15:27:42,435 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:27:42,660 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:27:42,660 - INFO - Starting preprop_lstat function.
2025-01-31 15:27:42,688 - INFO - Renamed columns in DataFrame.
2025-01-31 15:27:42,721 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:27:42,724 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:27:42,726 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:27:42,733 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:27:42,737 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:27:42,811 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:27:42,811 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:27:42,818 - INFO -  ====> Duration 0.16 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:27:42,819 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:27:42,829 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:27:42,831 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:27:42,839 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:27:42,839 - INFO - Starting preprop_resid function.
2025-01-31 15:27:42,840 - INFO - Renamed columns in DataFrame.
2025-01-31 15:27:42,846 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:27:42,847 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:27:42,848 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:27:42,850 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:27:42,852 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:27:42,859 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:27:42,859 - INFO - preprop_resid function completed successfully.
2025-01-31 15:27:42,860 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:27:42,865 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:27:42,876 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1C950>), kwargs: {}
2025-01-31 15:27:42,919 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E0B9A7B0>, <folium.folium.Map object at 0x000002B8DFD1C950>)
2025-01-31 15:27:43,061 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:27:43,070 - INFO -  ====> Duration 0.66 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:27:44,552 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:27:44,552 - INFO - Starting execution of the main function.
2025-01-31 15:27:44,559 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:27:44,758 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:27:44,758 - INFO - Starting preprop_lstat function.
2025-01-31 15:27:44,773 - INFO - Renamed columns in DataFrame.
2025-01-31 15:27:44,794 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:27:44,796 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:27:44,799 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:27:44,801 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:27:44,805 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:27:44,873 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:27:44,874 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:27:44,881 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:27:44,882 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:27:44,887 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:27:44,890 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:27:44,896 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:27:44,897 - INFO - Starting preprop_resid function.
2025-01-31 15:27:44,897 - INFO - Renamed columns in DataFrame.
2025-01-31 15:27:44,903 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:27:44,903 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:27:44,905 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:27:44,906 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:27:44,908 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:27:44,916 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:27:44,917 - INFO - preprop_resid function completed successfully.
2025-01-31 15:27:44,917 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:27:44,923 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:27:44,927 - INFO - Searching for postal code: 10115
2025-01-31 15:27:44,931 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 15:27:44,932 - INFO - Filtered dataframe:
Empty DataFrame
Columns: [PLZ, Number, geometry_x, Einwohner, Breitengrad, Längengrad, geometry_y]
Index: []
2025-01-31 15:27:44,937 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8ADA08950>), kwargs: {}
2025-01-31 15:27:44,974 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2FC8BB0>, <folium.folium.Map object at 0x000002B8ADA08950>)
2025-01-31 15:27:45,115 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:27:45,124 - INFO -  ====> Duration 0.57 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:27:48,416 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:27:48,416 - INFO - Starting execution of the main function.
2025-01-31 15:27:48,423 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:27:48,639 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:27:48,639 - INFO - Starting preprop_lstat function.
2025-01-31 15:27:48,658 - INFO - Renamed columns in DataFrame.
2025-01-31 15:27:48,679 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:27:48,682 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:27:48,684 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:27:48,686 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:27:48,689 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:27:48,758 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:27:48,758 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:27:48,765 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:27:48,766 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:27:48,771 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:27:48,773 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:27:48,779 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:27:48,779 - INFO - Starting preprop_resid function.
2025-01-31 15:27:48,780 - INFO - Renamed columns in DataFrame.
2025-01-31 15:27:48,786 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:27:48,787 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:27:48,788 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:27:48,789 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:27:48,791 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:27:48,798 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:27:48,798 - INFO - preprop_resid function completed successfully.
2025-01-31 15:27:48,798 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:27:48,803 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:27:48,806 - INFO - Searching for postal code: 10115
2025-01-31 15:27:48,810 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 15:27:48,810 - INFO - Filtered dataframe:
Empty DataFrame
Columns: [PLZ, Number, geometry_x, Einwohner, Breitengrad, Längengrad, geometry_y]
Index: []
2025-01-31 15:27:48,816 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1CB50>), kwargs: {}
2025-01-31 15:27:48,855 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E0B98F30>, <folium.folium.Map object at 0x000002B8DFD1CB50>)
2025-01-31 15:27:48,991 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:27:49,000 - INFO -  ====> Duration 0.58 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:30:16,973 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:30:16,988 - INFO - Starting execution of the main function.
2025-01-31 15:30:17,002 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:30:17,226 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:30:17,226 - INFO - Starting preprop_lstat function.
2025-01-31 15:30:17,240 - INFO - Renamed columns in DataFrame.
2025-01-31 15:30:17,261 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:30:17,263 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:30:17,265 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:30:17,267 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:30:17,271 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:30:17,340 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:30:17,340 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:30:17,347 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:30:17,347 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:30:17,353 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:30:17,356 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:30:17,362 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:30:17,362 - INFO - Starting preprop_resid function.
2025-01-31 15:30:17,363 - INFO - Renamed columns in DataFrame.
2025-01-31 15:30:17,370 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:30:17,370 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:30:17,372 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:30:17,373 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:30:17,375 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:30:17,382 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:30:17,383 - INFO - preprop_resid function completed successfully.
2025-01-31 15:30:17,383 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:30:17,389 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:30:17,397 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1D250>), kwargs: {}
2025-01-31 15:30:17,435 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2FCA190>, <folium.folium.Map object at 0x000002B8DFD1D250>)
2025-01-31 15:30:17,581 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:30:17,592 - INFO -  ====> Duration 0.60 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:30:19,243 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:30:19,243 - INFO - Starting execution of the main function.
2025-01-31 15:30:19,249 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:30:19,444 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:30:19,444 - INFO - Starting preprop_lstat function.
2025-01-31 15:30:19,458 - INFO - Renamed columns in DataFrame.
2025-01-31 15:30:19,479 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:30:19,482 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:30:19,485 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:30:19,488 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:30:19,490 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:30:19,557 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:30:19,558 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:30:19,564 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:30:19,564 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:30:19,570 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:30:19,573 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:30:19,579 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:30:19,579 - INFO - Starting preprop_resid function.
2025-01-31 15:30:19,580 - INFO - Renamed columns in DataFrame.
2025-01-31 15:30:19,588 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:30:19,588 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:30:19,590 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:30:19,591 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:30:19,594 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:30:19,600 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:30:19,601 - INFO - preprop_resid function completed successfully.
2025-01-31 15:30:19,601 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:30:19,607 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:30:19,609 - INFO - Searching for postal code: 10115
2025-01-31 15:30:19,613 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 15:30:19,614 - INFO - Filtered dataframe:
Empty DataFrame
Columns: [PLZ, Number, geometry_x, Einwohner, Breitengrad, Längengrad, geometry_y]
Index: []
2025-01-31 15:30:19,620 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DE0FF950>), kwargs: {}
2025-01-31 15:30:19,660 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E0B99710>, <folium.folium.Map object at 0x000002B8DE0FF950>)
2025-01-31 15:30:19,794 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:30:19,803 - INFO -  ====> Duration 0.56 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:35:16,769 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:35:16,779 - INFO - Starting execution of the main function.
2025-01-31 15:35:16,786 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:35:16,994 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:35:16,994 - INFO - Starting preprop_lstat function.
2025-01-31 15:35:17,006 - INFO - Renamed columns in DataFrame.
2025-01-31 15:35:17,026 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:35:17,029 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:35:17,032 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:35:17,034 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:35:17,037 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:35:17,105 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:35:17,105 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:35:17,112 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:35:17,113 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:35:17,118 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:35:17,120 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:35:17,128 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:35:17,128 - INFO - Starting preprop_resid function.
2025-01-31 15:35:17,129 - INFO - Renamed columns in DataFrame.
2025-01-31 15:35:17,135 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:35:17,136 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:35:17,138 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:35:17,139 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:35:17,141 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:35:17,148 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:35:17,148 - INFO - preprop_resid function completed successfully.
2025-01-31 15:35:17,148 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:35:17,154 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:35:17,161 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1F650>), kwargs: {}
2025-01-31 15:35:17,199 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2FC9FD0>, <folium.folium.Map object at 0x000002B8DFD1F650>)
2025-01-31 15:35:17,339 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:35:17,349 - INFO -  ====> Duration 0.57 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:35:17,983 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:35:17,983 - INFO - Starting execution of the main function.
2025-01-31 15:35:17,989 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:35:18,182 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:35:18,182 - INFO - Starting preprop_lstat function.
2025-01-31 15:35:18,195 - INFO - Renamed columns in DataFrame.
2025-01-31 15:35:18,214 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:35:18,217 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:35:18,219 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:35:18,221 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:35:18,224 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:35:18,290 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:35:18,290 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:35:18,297 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:35:18,297 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:35:18,303 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:35:18,305 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:35:18,312 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:35:18,312 - INFO - Starting preprop_resid function.
2025-01-31 15:35:18,312 - INFO - Renamed columns in DataFrame.
2025-01-31 15:35:18,318 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:35:18,319 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:35:18,320 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:35:18,321 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:35:18,323 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:35:18,330 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:35:18,330 - INFO - preprop_resid function completed successfully.
2025-01-31 15:35:18,330 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:35:18,336 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:35:18,339 - INFO - Searching for postal code: 10115
2025-01-31 15:35:18,345 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 15:35:18,351 - INFO - Filtered dataframe:
Empty DataFrame
Columns: [PLZ, Number, geometry_x, Einwohner, Breitengrad, Längengrad, geometry_y]
Index: []
2025-01-31 15:35:18,356 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1F050>), kwargs: {}
2025-01-31 15:35:18,393 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E0B991D0>, <folium.folium.Map object at 0x000002B8DFD1F050>)
2025-01-31 15:35:18,530 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:35:18,538 - INFO -  ====> Duration 0.56 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:35:21,014 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:35:21,015 - INFO - Starting execution of the main function.
2025-01-31 15:35:21,021 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:35:21,252 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:35:21,252 - INFO - Starting preprop_lstat function.
2025-01-31 15:35:21,271 - INFO - Renamed columns in DataFrame.
2025-01-31 15:35:21,291 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:35:21,294 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:35:21,297 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:35:21,299 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:35:21,305 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:35:21,375 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:35:21,375 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:35:21,384 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:35:21,384 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:35:21,389 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:35:21,392 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:35:21,400 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:35:21,400 - INFO - Starting preprop_resid function.
2025-01-31 15:35:21,401 - INFO - Renamed columns in DataFrame.
2025-01-31 15:35:21,407 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:35:21,408 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:35:21,409 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:35:21,410 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:35:21,414 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:35:21,421 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:35:21,422 - INFO - preprop_resid function completed successfully.
2025-01-31 15:35:21,422 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:35:21,428 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:35:21,431 - INFO - Searching for postal code: 10115
2025-01-31 15:35:21,439 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 15:35:21,445 - INFO - Filtered dataframe:
Empty DataFrame
Columns: [PLZ, Number, geometry_x, Einwohner, Breitengrad, Längengrad, geometry_y]
Index: []
2025-01-31 15:35:21,452 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1F250>), kwargs: {}
2025-01-31 15:35:21,503 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2FC9710>, <folium.folium.Map object at 0x000002B8DFD1F250>)
2025-01-31 15:35:21,641 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:35:21,651 - INFO -  ====> Duration 0.64 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:37:04,205 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:37:04,211 - INFO - Starting execution of the main function.
2025-01-31 15:37:04,217 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:37:04,438 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:37:04,438 - INFO - Starting preprop_lstat function.
2025-01-31 15:37:04,451 - INFO - Renamed columns in DataFrame.
2025-01-31 15:37:04,469 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:37:04,471 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:37:04,474 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:37:04,475 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:37:04,478 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:37:04,548 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:37:04,549 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:37:04,556 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:37:04,556 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:37:04,561 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:37:04,563 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:37:04,570 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:37:04,570 - INFO - Starting preprop_resid function.
2025-01-31 15:37:04,571 - INFO - Renamed columns in DataFrame.
2025-01-31 15:37:04,577 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:37:04,577 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:37:04,579 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:37:04,580 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:37:04,582 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:37:04,589 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:37:04,589 - INFO - preprop_resid function completed successfully.
2025-01-31 15:37:04,589 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:37:04,594 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:37:04,600 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1FD50>), kwargs: {}
2025-01-31 15:37:04,637 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E0B9B770>, <folium.folium.Map object at 0x000002B8DFD1FD50>)
2025-01-31 15:37:04,773 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:37:04,782 - INFO -  ====> Duration 0.57 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:37:06,320 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:37:06,322 - INFO - Starting execution of the main function.
2025-01-31 15:37:06,329 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:37:06,549 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:37:06,549 - INFO - Starting preprop_lstat function.
2025-01-31 15:37:06,561 - INFO - Renamed columns in DataFrame.
2025-01-31 15:37:06,582 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:37:06,584 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:37:06,587 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:37:06,589 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:37:06,592 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:37:06,672 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:37:06,673 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:37:06,681 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:37:06,681 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:37:06,686 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:37:06,689 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:37:06,698 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:37:06,698 - INFO - Starting preprop_resid function.
2025-01-31 15:37:06,699 - INFO - Renamed columns in DataFrame.
2025-01-31 15:37:06,705 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:37:06,706 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:37:06,707 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:37:06,708 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:37:06,711 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:37:06,718 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:37:06,718 - INFO - preprop_resid function completed successfully.
2025-01-31 15:37:06,718 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:37:06,725 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:37:06,728 - INFO - Searching for postal code: 10117
2025-01-31 15:37:06,733 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 15:37:06,738 - INFO - Filtered dataframe:
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2025-01-31 15:37:06,744 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1CC50>), kwargs: {}
2025-01-31 15:37:06,802 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2FCBBD0>, <folium.folium.Map object at 0x000002B8DFD1CC50>)
2025-01-31 15:37:06,935 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:37:06,943 - INFO -  ====> Duration 0.62 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:41:04,868 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:41:04,889 - INFO - Starting execution of the main function.
2025-01-31 15:41:04,897 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:41:05,096 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:41:05,096 - INFO - Starting preprop_lstat function.
2025-01-31 15:41:05,109 - INFO - Renamed columns in DataFrame.
2025-01-31 15:41:05,130 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:41:05,133 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:41:05,135 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:41:05,137 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:41:05,140 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:41:05,209 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:41:05,210 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:41:05,218 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:41:05,218 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:41:05,223 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:41:05,225 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:41:05,231 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:41:05,232 - INFO - Starting preprop_resid function.
2025-01-31 15:41:05,232 - INFO - Renamed columns in DataFrame.
2025-01-31 15:41:05,239 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:41:05,239 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:41:05,241 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:41:05,242 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:41:05,245 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:41:05,252 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:41:05,252 - INFO - preprop_resid function completed successfully.
2025-01-31 15:41:05,252 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:41:05,257 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:41:05,263 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1CD50>), kwargs: {}
2025-01-31 15:41:05,300 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E0B99B70>, <folium.folium.Map object at 0x000002B8DFD1CD50>)
2025-01-31 15:41:05,441 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:41:05,453 - INFO -  ====> Duration 0.56 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:41:06,969 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:41:06,970 - INFO - Starting execution of the main function.
2025-01-31 15:41:06,975 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:41:07,163 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:41:07,163 - INFO - Starting preprop_lstat function.
2025-01-31 15:41:07,176 - INFO - Renamed columns in DataFrame.
2025-01-31 15:41:07,194 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:41:07,197 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:41:07,199 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:41:07,201 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:41:07,205 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:41:07,273 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:41:07,273 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:41:07,280 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:41:07,280 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:41:07,286 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:41:07,289 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:41:07,296 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:41:07,296 - INFO - Starting preprop_resid function.
2025-01-31 15:41:07,297 - INFO - Renamed columns in DataFrame.
2025-01-31 15:41:07,303 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:41:07,304 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:41:07,305 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:41:07,306 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:41:07,309 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:41:07,315 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:41:07,315 - INFO - preprop_resid function completed successfully.
2025-01-31 15:41:07,315 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:41:07,321 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:41:07,323 - INFO - Searching for postal code: 10117
2025-01-31 15:41:07,327 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 15:41:07,331 - INFO - Filtered dataframe:
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2025-01-31 15:41:07,336 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1FE50>), kwargs: {}
2025-01-31 15:41:07,375 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2FCA350>, <folium.folium.Map object at 0x000002B8DFD1FE50>)
2025-01-31 15:41:07,511 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:41:07,520 - INFO -  ====> Duration 0.55 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:41:10,703 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:41:10,704 - INFO - Starting execution of the main function.
2025-01-31 15:41:10,711 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:41:10,927 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:41:10,928 - INFO - Starting preprop_lstat function.
2025-01-31 15:41:10,944 - INFO - Renamed columns in DataFrame.
2025-01-31 15:41:10,963 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:41:10,966 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:41:10,969 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:41:10,971 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:41:10,974 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:41:11,043 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:41:11,044 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:41:11,052 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:41:11,053 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:41:11,058 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:41:11,061 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:41:11,067 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:41:11,067 - INFO - Starting preprop_resid function.
2025-01-31 15:41:11,068 - INFO - Renamed columns in DataFrame.
2025-01-31 15:41:11,075 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:41:11,076 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:41:11,078 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:41:11,079 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:41:11,081 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:41:11,089 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:41:11,089 - INFO - preprop_resid function completed successfully.
2025-01-31 15:41:11,089 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:41:11,095 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:41:11,105 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1EC50>), kwargs: {}
2025-01-31 15:41:11,142 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E0B9B690>, <folium.folium.Map object at 0x000002B8DFD1EC50>)
2025-01-31 15:41:11,284 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:41:11,293 - INFO -  ====> Duration 0.59 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:41:12,330 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:41:12,330 - INFO - Starting execution of the main function.
2025-01-31 15:41:12,336 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:41:12,553 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:41:12,553 - INFO - Starting preprop_lstat function.
2025-01-31 15:41:12,567 - INFO - Renamed columns in DataFrame.
2025-01-31 15:41:12,586 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:41:12,590 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:41:12,595 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:41:12,596 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:41:12,599 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:41:12,713 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:41:12,716 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:41:12,723 - INFO -  ====> Duration 0.17 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:41:12,723 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:41:12,729 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:41:12,731 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:41:12,741 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:41:12,741 - INFO - Starting preprop_resid function.
2025-01-31 15:41:12,742 - INFO - Renamed columns in DataFrame.
2025-01-31 15:41:12,748 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:41:12,749 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:41:12,750 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:41:12,751 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:41:12,754 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:41:12,762 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:41:12,762 - INFO - preprop_resid function completed successfully.
2025-01-31 15:41:12,762 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:41:12,768 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:41:12,771 - INFO - Searching for postal code: 10115
2025-01-31 15:41:12,774 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 15:41:12,777 - INFO - Filtered dataframe:
Empty DataFrame
Columns: [PLZ, Number, geometry_x, Einwohner, Breitengrad, Längengrad, geometry_y]
Index: []
2025-01-31 15:41:12,777 - WARNING - No locations found for postal code: 10115
2025-01-31 15:41:12,783 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1EF50>), kwargs: {}
2025-01-31 15:41:12,838 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2FC83D0>, <folium.folium.Map object at 0x000002B8DFD1EF50>)
2025-01-31 15:41:12,978 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:41:12,990 - INFO -  ====> Duration 0.66 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:42:24,767 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:42:24,779 - INFO - Starting execution of the main function.
2025-01-31 15:42:24,786 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:42:25,000 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:42:25,000 - INFO - Starting preprop_lstat function.
2025-01-31 15:42:25,012 - INFO - Renamed columns in DataFrame.
2025-01-31 15:42:25,034 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:42:25,037 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:42:25,039 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:42:25,041 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:42:25,044 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:42:25,111 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:42:25,112 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:42:25,119 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:42:25,119 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:42:25,125 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:42:25,128 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:42:25,134 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:42:25,134 - INFO - Starting preprop_resid function.
2025-01-31 15:42:25,135 - INFO - Renamed columns in DataFrame.
2025-01-31 15:42:25,141 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:42:25,141 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:42:25,144 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:42:25,145 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:42:25,147 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:42:25,154 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:42:25,154 - INFO - preprop_resid function completed successfully.
2025-01-31 15:42:25,154 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:42:25,160 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:42:25,167 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1CD50>), kwargs: {}
2025-01-31 15:42:25,205 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E0B9A890>, <folium.folium.Map object at 0x000002B8DFD1CD50>)
2025-01-31 15:42:25,345 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:42:25,355 - INFO -  ====> Duration 0.58 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:42:26,220 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:42:26,221 - INFO - Starting execution of the main function.
2025-01-31 15:42:26,226 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:42:26,423 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:42:26,424 - INFO - Starting preprop_lstat function.
2025-01-31 15:42:26,436 - INFO - Renamed columns in DataFrame.
2025-01-31 15:42:26,455 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:42:26,457 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:42:26,459 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:42:26,461 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:42:26,463 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:42:26,531 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:42:26,531 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:42:26,537 - INFO -  ====> Duration 0.11 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:42:26,537 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:42:26,542 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:42:26,544 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:42:26,551 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:42:26,551 - INFO - Starting preprop_resid function.
2025-01-31 15:42:26,551 - INFO - Renamed columns in DataFrame.
2025-01-31 15:42:26,557 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:42:26,557 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:42:26,559 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:42:26,559 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:42:26,562 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:42:26,570 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:42:26,570 - INFO - preprop_resid function completed successfully.
2025-01-31 15:42:26,570 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:42:26,575 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:42:26,577 - INFO - Searching for postal code: 10115
2025-01-31 15:42:26,580 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 15:42:26,582 - INFO - Filtered dataframe:
Empty DataFrame
Columns: [PLZ, Number, geometry_x, Einwohner, Breitengrad, Längengrad, geometry_y]
Index: []
2025-01-31 15:42:26,582 - WARNING - No locations found for postal code: 10115
2025-01-31 15:42:26,582 - ERROR - create_electric_charging_residents_heatmap raised an exception: 'tuple' object has no attribute 'staions'
2025-01-31 15:42:40,356 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:42:40,365 - INFO - Starting execution of the main function.
2025-01-31 15:42:40,371 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:42:40,585 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:42:40,585 - INFO - Starting preprop_lstat function.
2025-01-31 15:42:40,596 - INFO - Renamed columns in DataFrame.
2025-01-31 15:42:40,629 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:42:40,632 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:42:40,635 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:42:40,637 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:42:40,640 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:42:40,709 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:42:40,709 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:42:40,715 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:42:40,716 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:42:40,721 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:42:40,723 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:42:40,730 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:42:40,730 - INFO - Starting preprop_resid function.
2025-01-31 15:42:40,731 - INFO - Renamed columns in DataFrame.
2025-01-31 15:42:40,737 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:42:40,737 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:42:40,739 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:42:40,740 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:42:40,742 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:42:40,749 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:42:40,749 - INFO - preprop_resid function completed successfully.
2025-01-31 15:42:40,749 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:42:40,754 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:42:40,757 - INFO - Searching for postal code: 10115
2025-01-31 15:42:40,760 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 15:42:40,763 - INFO - Filtered dataframe:
Empty DataFrame
Columns: [PLZ, Number, geometry_x, Einwohner, Breitengrad, Längengrad, geometry_y]
Index: []
2025-01-31 15:42:40,763 - WARNING - No locations found for postal code: 10115
2025-01-31 15:42:40,763 - ERROR - create_electric_charging_residents_heatmap raised an exception: 'tuple' object has no attribute 'stations'
2025-01-31 15:42:42,954 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:42:42,954 - INFO - Starting execution of the main function.
2025-01-31 15:42:42,960 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:42:43,155 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:42:43,155 - INFO - Starting preprop_lstat function.
2025-01-31 15:42:43,170 - INFO - Renamed columns in DataFrame.
2025-01-31 15:42:43,190 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:42:43,193 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:42:43,195 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:42:43,197 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:42:43,200 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:42:43,269 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:42:43,269 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:42:43,276 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:42:43,276 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:42:43,281 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:42:43,283 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:42:43,291 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:42:43,292 - INFO - Starting preprop_resid function.
2025-01-31 15:42:43,293 - INFO - Renamed columns in DataFrame.
2025-01-31 15:42:43,306 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:42:43,306 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:42:43,308 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:42:43,309 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:42:43,312 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:42:43,319 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:42:43,319 - INFO - preprop_resid function completed successfully.
2025-01-31 15:42:43,320 - INFO -  ====> Duration 0.03 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:42:43,325 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:42:43,331 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1E550>), kwargs: {}
2025-01-31 15:42:43,376 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8DFD3AEB0>, <folium.folium.Map object at 0x000002B8DFD1E550>)
2025-01-31 15:42:43,514 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:42:43,523 - INFO -  ====> Duration 0.57 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:42:44,826 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:42:44,826 - INFO - Starting execution of the main function.
2025-01-31 15:42:44,833 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:42:45,044 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:42:45,044 - INFO - Starting preprop_lstat function.
2025-01-31 15:42:45,061 - INFO - Renamed columns in DataFrame.
2025-01-31 15:42:45,088 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:42:45,091 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:42:45,094 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:42:45,096 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:42:45,100 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:42:45,186 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:42:45,187 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:42:45,194 - INFO -  ====> Duration 0.15 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:42:45,194 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:42:45,201 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:42:45,203 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:42:45,210 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:42:45,211 - INFO - Starting preprop_resid function.
2025-01-31 15:42:45,213 - INFO - Renamed columns in DataFrame.
2025-01-31 15:42:45,222 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:42:45,223 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:42:45,226 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:42:45,227 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:42:45,230 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:42:45,240 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:42:45,241 - INFO - preprop_resid function completed successfully.
2025-01-31 15:42:45,241 - INFO -  ====> Duration 0.03 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:42:45,248 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:42:45,251 - INFO - Searching for postal code: 10115
2025-01-31 15:42:45,255 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 15:42:45,258 - INFO - Filtered dataframe:
Empty DataFrame
Columns: [PLZ, Number, geometry_x, Einwohner, Breitengrad, Längengrad, geometry_y]
Index: []
2025-01-31 15:42:45,258 - WARNING - No locations found for postal code: 10115
2025-01-31 15:42:45,258 - ERROR - create_electric_charging_residents_heatmap raised an exception: 'tuple' object has no attribute 'stations'
2025-01-31 15:44:20,147 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:44:20,158 - INFO - Starting execution of the main function.
2025-01-31 15:44:20,164 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:44:20,371 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:44:20,371 - INFO - Starting preprop_lstat function.
2025-01-31 15:44:20,382 - INFO - Renamed columns in DataFrame.
2025-01-31 15:44:20,400 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:47:58,596 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:47:58,606 - INFO - Starting execution of the main function.
2025-01-31 15:47:58,612 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:47:58,810 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:47:58,811 - INFO - Starting preprop_lstat function.
2025-01-31 15:47:58,824 - INFO - Renamed columns in DataFrame.
2025-01-31 15:47:58,858 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:47:58,861 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:47:58,864 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:47:58,866 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:47:58,869 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:47:58,937 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:47:58,938 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:47:58,944 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:47:58,944 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:47:58,950 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:47:58,952 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:47:58,959 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:47:58,959 - INFO - Starting preprop_resid function.
2025-01-31 15:47:58,960 - INFO - Renamed columns in DataFrame.
2025-01-31 15:47:58,966 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:47:58,967 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:47:58,969 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:47:58,969 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:47:58,972 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:47:58,978 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:47:58,978 - INFO - preprop_resid function completed successfully.
2025-01-31 15:47:58,978 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:47:58,984 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:47:58,991 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1D250>), kwargs: {}
2025-01-31 15:47:59,031 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8DFD38F30>, <folium.folium.Map object at 0x000002B8DFD1D250>)
2025-01-31 15:47:59,165 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:47:59,174 - INFO -  ====> Duration 0.57 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:48:03,983 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:48:03,984 - INFO - Starting execution of the main function.
2025-01-31 15:48:03,989 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:48:04,029 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:48:04,031 - INFO - Starting execution of the main function.
2025-01-31 15:48:04,037 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:48:04,305 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:48:04,306 - INFO - Starting preprop_lstat function.
2025-01-31 15:48:04,329 - INFO - Renamed columns in DataFrame.
2025-01-31 15:48:04,378 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:48:04,386 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:48:04,391 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:48:04,404 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:48:04,410 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:48:04,527 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:48:04,528 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:48:04,537 - INFO -  ====> Duration 0.23 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:48:04,537 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:48:04,544 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:48:04,547 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:48:04,563 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:48:04,564 - INFO - Starting preprop_resid function.
2025-01-31 15:48:04,565 - INFO - Renamed columns in DataFrame.
2025-01-31 15:48:04,573 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:48:04,577 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:48:04,582 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:48:04,587 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:48:04,590 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:48:04,619 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:48:04,629 - INFO - preprop_resid function completed successfully.
2025-01-31 15:48:04,630 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:48:04,630 - INFO -  ====> Duration 0.07 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:48:04,631 - INFO - Starting preprop_lstat function.
2025-01-31 15:48:04,644 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:48:04,669 - INFO - Renamed columns in DataFrame.
2025-01-31 15:48:04,738 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:48:04,742 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:48:04,745 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:48:04,748 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:48:04,751 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:48:04,832 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:48:04,832 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:48:04,841 - INFO -  ====> Duration 0.21 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:48:04,841 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:48:04,846 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:48:04,848 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:48:04,855 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:48:04,855 - INFO - Starting preprop_resid function.
2025-01-31 15:48:04,856 - INFO - Renamed columns in DataFrame.
2025-01-31 15:48:04,863 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:48:04,863 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:48:04,865 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:48:04,865 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:48:04,867 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:48:04,874 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:48:04,875 - INFO - preprop_resid function completed successfully.
2025-01-31 15:48:04,875 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:48:04,881 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:48:04,887 - INFO - Searching for postal code: 10115
2025-01-31 15:48:04,891 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 15:48:04,894 - INFO - Filtered dataframe:
Empty DataFrame
Columns: [PLZ, Number, geometry_x, Einwohner, Breitengrad, Längengrad, geometry_y]
Index: []
2025-01-31 15:48:04,894 - WARNING - No locations found for postal code: 10115
2025-01-31 15:48:04,895 - ERROR - create_electric_charging_residents_heatmap raised an exception: cannot access local variable 'e' where it is not associated with a value
2025-01-31 15:48:35,882 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:48:35,891 - INFO - Starting execution of the main function.
2025-01-31 15:48:35,895 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:48:36,087 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:48:36,087 - INFO - Starting preprop_lstat function.
2025-01-31 15:48:36,098 - INFO - Renamed columns in DataFrame.
2025-01-31 15:48:36,125 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:48:36,128 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:48:36,131 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:48:36,133 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:48:36,137 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:48:36,212 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:48:36,212 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:48:36,218 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:48:36,219 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:48:36,225 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:48:36,227 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:48:36,233 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:48:36,233 - INFO - Starting preprop_resid function.
2025-01-31 15:48:36,234 - INFO - Renamed columns in DataFrame.
2025-01-31 15:48:36,240 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:48:36,240 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:48:36,242 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:48:36,243 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:48:36,245 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:48:36,252 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:48:36,252 - INFO - preprop_resid function completed successfully.
2025-01-31 15:48:36,253 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:48:36,257 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:48:36,264 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8E230DE50>), kwargs: {}
2025-01-31 15:48:36,301 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2F28130>, <folium.folium.Map object at 0x000002B8E230DE50>)
2025-01-31 15:48:36,435 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:48:36,443 - INFO -  ====> Duration 0.55 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:48:37,447 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:48:37,448 - INFO - Starting execution of the main function.
2025-01-31 15:48:37,453 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:48:37,668 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:48:37,668 - INFO - Starting preprop_lstat function.
2025-01-31 15:48:37,679 - INFO - Renamed columns in DataFrame.
2025-01-31 15:48:37,699 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:48:37,702 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:48:37,705 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:48:37,706 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:48:37,709 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:48:37,777 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:48:37,778 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:48:37,784 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:48:37,784 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:48:37,789 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:48:37,791 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:48:37,798 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:48:37,798 - INFO - Starting preprop_resid function.
2025-01-31 15:48:37,799 - INFO - Renamed columns in DataFrame.
2025-01-31 15:48:37,805 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:48:37,805 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:48:37,807 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:48:37,808 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:48:37,810 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:48:37,818 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:48:37,818 - INFO - preprop_resid function completed successfully.
2025-01-31 15:48:37,818 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:48:37,824 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:48:37,827 - INFO - Searching for postal code: 10115
2025-01-31 15:48:37,830 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 15:48:37,833 - INFO - Filtered dataframe:
Empty DataFrame
Columns: [PLZ, Number, geometry_x, Einwohner, Breitengrad, Längengrad, geometry_y]
Index: []
2025-01-31 15:48:37,833 - WARNING - No locations found for postal code: 10115
2025-01-31 15:48:37,833 - INFO - result shape: StationSearchPerformed(timestamp=Timestamp('2025-01-31 15:48:37.833296'), postal_code='10115', stations_found=0)

2025-01-31 15:48:37,838 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1DF50>), kwargs: {}
2025-01-31 15:48:37,880 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E360A7B0>, <folium.folium.Map object at 0x000002B8DFD1DF50>)
2025-01-31 15:48:38,017 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:48:38,026 - INFO -  ====> Duration 0.58 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:49:27,970 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:49:27,980 - INFO - Starting execution of the main function.
2025-01-31 15:49:27,990 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:49:28,193 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:49:28,193 - INFO - Starting preprop_lstat function.
2025-01-31 15:49:28,207 - INFO - Renamed columns in DataFrame.
2025-01-31 15:49:28,227 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:49:28,229 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:49:28,232 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:49:28,233 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:49:28,237 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:49:28,302 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:49:28,309 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:49:28,316 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:49:28,316 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:49:28,321 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:49:28,323 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:49:28,330 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:49:28,330 - INFO - Starting preprop_resid function.
2025-01-31 15:49:28,331 - INFO - Renamed columns in DataFrame.
2025-01-31 15:49:28,337 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:49:28,338 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:49:28,340 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:49:28,341 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:49:28,343 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:49:28,350 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:49:28,351 - INFO - preprop_resid function completed successfully.
2025-01-31 15:49:28,351 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:49:28,356 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:49:28,364 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1CC50>), kwargs: {}
2025-01-31 15:49:28,406 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2F29390>, <folium.folium.Map object at 0x000002B8DFD1CC50>)
2025-01-31 15:49:28,540 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:49:28,549 - INFO -  ====> Duration 0.57 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:49:29,171 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:49:29,172 - INFO - Starting execution of the main function.
2025-01-31 15:49:29,177 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:49:29,365 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:49:29,366 - INFO - Starting preprop_lstat function.
2025-01-31 15:49:29,378 - INFO - Renamed columns in DataFrame.
2025-01-31 15:49:29,398 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:49:29,401 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:49:29,403 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:49:29,405 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:49:29,407 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:49:29,474 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:49:29,474 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:49:29,481 - INFO -  ====> Duration 0.11 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:49:29,481 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:49:29,486 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:49:29,488 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:49:29,495 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:49:29,495 - INFO - Starting preprop_resid function.
2025-01-31 15:49:29,496 - INFO - Renamed columns in DataFrame.
2025-01-31 15:49:29,502 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:49:29,502 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:49:29,504 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:49:29,505 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:49:29,507 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:49:29,514 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:49:29,514 - INFO - preprop_resid function completed successfully.
2025-01-31 15:49:29,515 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:49:29,520 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:49:29,523 - INFO - Searching for postal code: 10115
2025-01-31 15:49:29,527 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 15:49:29,529 - INFO - Filtered dataframe:
Empty DataFrame
Columns: [PLZ, Number, geometry_x, Einwohner, Breitengrad, Längengrad, geometry_y]
Index: []
2025-01-31 15:49:29,529 - WARNING - No locations found for postal code: 10115
2025-01-31 15:49:29,529 - ERROR - create_electric_charging_residents_heatmap raised an exception: tuple index out of range
2025-01-31 15:49:41,053 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:49:41,061 - INFO - Starting execution of the main function.
2025-01-31 15:49:41,067 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:49:41,264 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:49:41,264 - INFO - Starting preprop_lstat function.
2025-01-31 15:49:41,275 - INFO - Renamed columns in DataFrame.
2025-01-31 15:49:41,293 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:49:41,296 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:49:41,299 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:49:41,301 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:49:41,305 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:49:41,374 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:49:41,375 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:49:41,380 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:49:41,381 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:49:41,387 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:49:41,389 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:49:41,394 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:49:41,394 - INFO - Starting preprop_resid function.
2025-01-31 15:49:41,395 - INFO - Renamed columns in DataFrame.
2025-01-31 15:49:41,400 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:49:41,401 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:49:41,403 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:49:41,404 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:49:41,406 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:49:41,413 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:49:41,414 - INFO - preprop_resid function completed successfully.
2025-01-31 15:49:41,414 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:49:41,419 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:49:41,428 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8E230C050>), kwargs: {}
2025-01-31 15:49:41,468 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E3609E10>, <folium.folium.Map object at 0x000002B8E230C050>)
2025-01-31 15:49:41,600 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:49:41,607 - INFO -  ====> Duration 0.55 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:49:42,519 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:49:42,519 - INFO - Starting execution of the main function.
2025-01-31 15:49:42,526 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:49:42,722 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:49:42,723 - INFO - Starting preprop_lstat function.
2025-01-31 15:49:42,736 - INFO - Renamed columns in DataFrame.
2025-01-31 15:49:42,757 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:49:42,759 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:49:42,761 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:49:42,763 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:49:42,767 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:49:42,834 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:49:42,835 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:49:42,842 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:49:42,842 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:49:42,847 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:49:42,850 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:49:42,857 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:49:42,857 - INFO - Starting preprop_resid function.
2025-01-31 15:49:42,858 - INFO - Renamed columns in DataFrame.
2025-01-31 15:49:42,863 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:49:42,864 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:49:42,866 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:49:42,867 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:49:42,869 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:49:42,876 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:49:42,876 - INFO - preprop_resid function completed successfully.
2025-01-31 15:49:42,876 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:49:42,881 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:49:42,884 - INFO - Searching for postal code: 10115
2025-01-31 15:49:42,887 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 15:49:42,889 - INFO - Filtered dataframe:
Empty DataFrame
Columns: [PLZ, Number, geometry_x, Einwohner, Breitengrad, Längengrad, geometry_y]
Index: []
2025-01-31 15:49:42,890 - WARNING - No locations found for postal code: 10115
2025-01-31 15:49:42,890 - INFO - result shape: []

2025-01-31 15:49:42,895 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1FA50>), kwargs: {}
2025-01-31 15:49:42,933 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8DFD39550>, <folium.folium.Map object at 0x000002B8DFD1FA50>)
2025-01-31 15:49:43,072 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:49:43,082 - INFO -  ====> Duration 0.56 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:51:54,648 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:51:54,660 - INFO - Starting execution of the main function.
2025-01-31 15:51:54,666 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:51:54,887 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:51:54,888 - INFO - Starting preprop_lstat function.
2025-01-31 15:51:54,900 - INFO - Renamed columns in DataFrame.
2025-01-31 15:51:54,921 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:51:54,923 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:51:54,926 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:51:54,927 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:51:54,930 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:51:54,997 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:51:54,998 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:51:55,004 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:51:55,004 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:51:55,010 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:51:55,015 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:51:55,021 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:51:55,021 - INFO - Starting preprop_resid function.
2025-01-31 15:51:55,022 - INFO - Renamed columns in DataFrame.
2025-01-31 15:51:55,030 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:51:55,030 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:51:55,032 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:51:55,033 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:51:55,035 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:51:55,043 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:51:55,043 - INFO - preprop_resid function completed successfully.
2025-01-31 15:51:55,043 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:51:55,049 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:51:55,055 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1E550>), kwargs: {}
2025-01-31 15:51:55,094 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2F2A430>, <folium.folium.Map object at 0x000002B8DFD1E550>)
2025-01-31 15:51:55,229 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:51:55,239 - INFO -  ====> Duration 0.58 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:51:55,785 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:51:55,786 - INFO - Starting execution of the main function.
2025-01-31 15:51:55,792 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:51:55,988 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:51:55,989 - INFO - Starting preprop_lstat function.
2025-01-31 15:51:56,002 - INFO - Renamed columns in DataFrame.
2025-01-31 15:51:56,021 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:51:56,024 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:51:56,026 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:51:56,027 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:51:56,031 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:51:56,097 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:51:56,097 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:51:56,104 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:51:56,104 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:51:56,109 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:51:56,111 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:51:56,117 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:51:56,117 - INFO - Starting preprop_resid function.
2025-01-31 15:51:56,118 - INFO - Renamed columns in DataFrame.
2025-01-31 15:51:56,123 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:51:56,124 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:51:56,126 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:51:56,127 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:51:56,129 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:51:56,136 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:51:56,136 - INFO - preprop_resid function completed successfully.
2025-01-31 15:51:56,137 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:51:56,142 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:51:56,145 - INFO - Searching for postal code: 10115
2025-01-31 15:51:56,148 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 15:51:56,151 - INFO - Filtered dataframe:
Empty DataFrame
Columns: [PLZ, Number, geometry_x, Einwohner, Breitengrad, Längengrad, geometry_y]
Index: []
2025-01-31 15:51:56,151 - WARNING - No locations found for postal code: 10115
2025-01-31 15:51:56,151 - INFO - result shape: []

2025-01-31 15:51:56,157 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1F550>), kwargs: {}
2025-01-31 15:51:56,195 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8DFD3BA10>, <folium.folium.Map object at 0x000002B8DFD1F550>)
2025-01-31 15:51:56,332 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:51:56,349 - INFO -  ====> Duration 0.56 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:52:02,894 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:52:02,896 - INFO - Starting execution of the main function.
2025-01-31 15:52:02,905 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:52:03,110 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:52:03,110 - INFO - Starting preprop_lstat function.
2025-01-31 15:52:03,123 - INFO - Renamed columns in DataFrame.
2025-01-31 15:52:03,143 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:52:03,146 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:52:03,148 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:52:03,149 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:52:03,153 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:52:03,219 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:52:03,219 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:52:03,227 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:52:03,227 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:52:03,232 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:52:03,234 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:52:03,241 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:52:03,241 - INFO - Starting preprop_resid function.
2025-01-31 15:52:03,242 - INFO - Renamed columns in DataFrame.
2025-01-31 15:52:03,248 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:52:03,248 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:52:03,249 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:52:03,250 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:52:03,253 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:52:03,259 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:52:03,260 - INFO - preprop_resid function completed successfully.
2025-01-31 15:52:03,260 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:52:03,265 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:52:03,271 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1D150>), kwargs: {}
2025-01-31 15:52:03,308 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2F298D0>, <folium.folium.Map object at 0x000002B8DFD1D150>)
2025-01-31 15:52:03,445 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:52:03,455 - INFO -  ====> Duration 0.56 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:52:04,331 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:52:04,332 - INFO - Starting execution of the main function.
2025-01-31 15:52:04,338 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:52:04,538 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:52:04,538 - INFO - Starting preprop_lstat function.
2025-01-31 15:52:04,552 - INFO - Renamed columns in DataFrame.
2025-01-31 15:52:04,571 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:52:04,573 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:52:04,575 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:52:04,577 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:52:04,580 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:52:04,647 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:52:04,647 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:52:04,654 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:52:04,654 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:52:04,659 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:52:04,662 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:52:04,668 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:52:04,668 - INFO - Starting preprop_resid function.
2025-01-31 15:52:04,669 - INFO - Renamed columns in DataFrame.
2025-01-31 15:52:04,675 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:52:04,676 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:52:04,677 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:52:04,678 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:52:04,680 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:52:04,687 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:52:04,687 - INFO - preprop_resid function completed successfully.
2025-01-31 15:52:04,687 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:52:04,694 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:52:04,697 - INFO - Searching for postal code: 10111
2025-01-31 15:52:04,700 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 15:52:04,702 - INFO - Filtered dataframe:
Empty DataFrame
Columns: [PLZ, Number, geometry_x, Einwohner, Breitengrad, Längengrad, geometry_y]
Index: []
2025-01-31 15:52:04,702 - WARNING - No locations found for postal code: 10111
2025-01-31 15:52:04,702 - INFO - result shape: []

2025-01-31 15:52:04,708 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1FC50>), kwargs: {}
2025-01-31 15:52:04,746 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8DFD38590>, <folium.folium.Map object at 0x000002B8DFD1FC50>)
2025-01-31 15:52:04,880 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:52:04,890 - INFO -  ====> Duration 0.56 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:52:08,087 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:52:08,087 - INFO - Starting execution of the main function.
2025-01-31 15:52:08,093 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:52:08,319 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:52:08,319 - INFO - Starting preprop_lstat function.
2025-01-31 15:52:08,332 - INFO - Renamed columns in DataFrame.
2025-01-31 15:52:08,352 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:52:08,354 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:52:08,356 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:52:08,358 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:52:08,361 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:52:08,429 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:52:08,429 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:52:08,436 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:52:08,436 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:52:08,441 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:52:08,443 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:52:08,450 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:52:08,450 - INFO - Starting preprop_resid function.
2025-01-31 15:52:08,450 - INFO - Renamed columns in DataFrame.
2025-01-31 15:52:08,456 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:52:08,457 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:52:08,458 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:52:08,459 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:52:08,461 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:52:08,467 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:52:08,467 - INFO - preprop_resid function completed successfully.
2025-01-31 15:52:08,468 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:52:08,473 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:52:08,479 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1F050>), kwargs: {}
2025-01-31 15:52:08,516 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2F2B150>, <folium.folium.Map object at 0x000002B8DFD1F050>)
2025-01-31 15:52:08,650 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:52:08,659 - INFO -  ====> Duration 0.57 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 15:52:09,218 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 15:52:09,219 - INFO - Starting execution of the main function.
2025-01-31 15:52:09,224 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 15:52:09,421 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 15:52:09,421 - INFO - Starting preprop_lstat function.
2025-01-31 15:52:09,432 - INFO - Renamed columns in DataFrame.
2025-01-31 15:52:09,452 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:52:09,454 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 15:52:09,456 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:52:09,458 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 15:52:09,461 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 15:52:09,527 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:52:09,528 - INFO - preprop_lstat function completed successfully.
2025-01-31 15:52:09,535 - INFO -  ====> Duration 0.11 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 15:52:09,535 - INFO - Starting count_plz_occurrences function.
2025-01-31 15:52:09,540 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 15:52:09,542 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 15:52:09,549 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 15:52:09,549 - INFO - Starting preprop_resid function.
2025-01-31 15:52:09,549 - INFO - Renamed columns in DataFrame.
2025-01-31 15:52:09,555 - INFO - Formatted latitude and longitude columns.
2025-01-31 15:52:09,555 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 15:52:09,557 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 15:52:09,558 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 15:52:09,560 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 15:52:09,566 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 15:52:09,566 - INFO - preprop_resid function completed successfully.
2025-01-31 15:52:09,566 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 15:52:09,571 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 15:52:09,574 - INFO - Searching for postal code: 10117
2025-01-31 15:52:09,577 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 15:52:09,582 - INFO - Filtered dataframe:
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2025-01-31 15:52:09,582 - INFO - result shape: [ChargingStation(postal_code=10117, latitude=52.51752, longitude=13.38777)]

2025-01-31 15:52:09,587 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1C750>), kwargs: {}
2025-01-31 15:52:09,625 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8DFD3B690>, <folium.folium.Map object at 0x000002B8DFD1C750>)
2025-01-31 15:52:09,757 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 15:52:09,765 - INFO -  ====> Duration 0.55 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 16:10:50,209 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:10:50,210 - INFO - Starting execution of the main function.
2025-01-31 16:10:50,217 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:10:50,438 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:10:50,439 - INFO - Starting preprop_lstat function.
2025-01-31 16:10:50,453 - INFO - Renamed columns in DataFrame.
2025-01-31 16:10:50,477 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:10:50,480 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:10:50,482 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:10:50,485 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:10:50,489 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:10:50,571 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:10:50,571 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:10:50,579 - INFO -  ====> Duration 0.14 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:10:50,580 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:10:50,585 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:10:50,588 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:10:50,595 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:10:50,596 - INFO - Starting preprop_resid function.
2025-01-31 16:10:50,596 - INFO - Renamed columns in DataFrame.
2025-01-31 16:10:50,602 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:10:50,603 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:10:50,605 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:10:50,605 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:10:50,608 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:10:50,616 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:10:50,616 - INFO - preprop_resid function completed successfully.
2025-01-31 16:10:50,617 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:10:50,624 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:10:50,797 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 16:10:50,807 - INFO -  ====> Duration 0.60 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 16:10:52,756 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:10:52,757 - INFO - Starting execution of the main function.
2025-01-31 16:10:52,764 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:10:52,978 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:10:52,978 - INFO - Starting preprop_lstat function.
2025-01-31 16:10:52,991 - INFO - Renamed columns in DataFrame.
2025-01-31 16:10:53,011 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:10:53,013 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:10:53,015 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:10:53,017 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:10:53,020 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:10:53,091 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:10:53,092 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:10:53,099 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:10:53,099 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:10:53,105 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:10:53,108 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:10:53,115 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:10:53,116 - INFO - Starting preprop_resid function.
2025-01-31 16:10:53,116 - INFO - Renamed columns in DataFrame.
2025-01-31 16:10:53,123 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:10:53,123 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:10:53,125 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:10:53,125 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:10:53,128 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:10:53,135 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:10:53,135 - INFO - preprop_resid function completed successfully.
2025-01-31 16:10:53,135 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:10:53,141 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:10:53,146 - ERROR - create_electric_charging_residents_heatmap raised an exception: 'Einwohner'
2025-01-31 16:12:39,645 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:12:39,657 - INFO - Starting execution of the main function.
2025-01-31 16:12:39,663 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:12:39,943 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:12:39,944 - INFO - Starting preprop_lstat function.
2025-01-31 16:12:39,956 - INFO - Renamed columns in DataFrame.
2025-01-31 16:12:39,978 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:12:39,981 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:12:39,985 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:12:39,987 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:12:40,000 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:12:40,106 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:12:40,106 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:12:40,115 - INFO -  ====> Duration 0.17 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:12:40,116 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:12:40,123 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:12:40,127 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:12:40,136 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:12:40,136 - INFO - Starting preprop_resid function.
2025-01-31 16:12:40,137 - INFO - Renamed columns in DataFrame.
2025-01-31 16:12:40,143 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:12:40,143 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:12:40,148 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:12:40,151 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:12:40,154 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:12:40,162 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:12:40,162 - INFO - preprop_resid function completed successfully.
2025-01-31 16:12:40,162 - INFO -  ====> Duration 0.03 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:12:40,168 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:12:40,172 - INFO - Searching for postal code: 10117
2025-01-31 16:12:40,176 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:12:40,183 - INFO - Filtered dataframe:
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2025-01-31 16:12:40,183 - INFO - result shape: [ChargingStation(postal_code=10117, latitude=52.51752, longitude=13.38777)]

2025-01-31 16:12:40,195 - ERROR - create_electric_charging_residents_heatmap raised an exception: 'Einwohner'
2025-01-31 16:13:25,680 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:13:25,689 - INFO - Starting execution of the main function.
2025-01-31 16:13:25,695 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:13:25,896 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:13:25,896 - INFO - Starting preprop_lstat function.
2025-01-31 16:13:25,910 - INFO - Renamed columns in DataFrame.
2025-01-31 16:13:25,936 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:13:25,939 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:13:25,942 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:13:25,944 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:13:25,947 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:13:26,014 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:13:26,014 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:13:26,021 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:13:26,021 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:13:26,026 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:13:26,028 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:13:26,034 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:13:26,035 - INFO - Starting preprop_resid function.
2025-01-31 16:13:26,036 - INFO - Renamed columns in DataFrame.
2025-01-31 16:13:26,042 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:13:26,043 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:13:26,044 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:13:26,045 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:13:26,047 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:13:26,054 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:13:26,054 - INFO - preprop_resid function completed successfully.
2025-01-31 16:13:26,055 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:13:26,060 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:13:26,064 - ERROR - create_electric_charging_residents_heatmap raised an exception: 'Einwohner'
2025-01-31 16:13:27,697 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:13:27,697 - INFO - Starting execution of the main function.
2025-01-31 16:13:27,704 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:13:27,889 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:13:27,889 - INFO - Starting preprop_lstat function.
2025-01-31 16:13:27,901 - INFO - Renamed columns in DataFrame.
2025-01-31 16:13:27,919 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:13:27,921 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:13:27,923 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:13:27,925 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:13:27,929 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:13:27,996 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:13:27,996 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:13:28,003 - INFO -  ====> Duration 0.11 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:13:28,003 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:13:28,009 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:13:28,011 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:13:28,018 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:13:28,018 - INFO - Starting preprop_resid function.
2025-01-31 16:13:28,018 - INFO - Renamed columns in DataFrame.
2025-01-31 16:13:28,024 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:13:28,025 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:13:28,026 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:13:28,027 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:13:28,029 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:13:28,035 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:13:28,036 - INFO - preprop_resid function completed successfully.
2025-01-31 16:13:28,036 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:13:28,040 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:13:28,044 - INFO - Searching for postal code: 10117
2025-01-31 16:13:28,048 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:13:28,052 - INFO - Filtered dataframe:
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2025-01-31 16:13:28,052 - INFO - result shape: [ChargingStation(postal_code=10117, latitude=52.51752, longitude=13.38777)]

2025-01-31 16:13:28,052 - ERROR - create_electric_charging_residents_heatmap raised an exception: 'tuple' object has no attribute 'StationSearchPerformed'
2025-01-31 16:13:54,297 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:13:54,306 - INFO - Starting execution of the main function.
2025-01-31 16:13:54,312 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:13:54,506 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:13:54,506 - INFO - Starting preprop_lstat function.
2025-01-31 16:13:54,520 - INFO - Renamed columns in DataFrame.
2025-01-31 16:13:54,539 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:13:54,542 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:13:54,545 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:13:54,547 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:13:54,550 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:13:54,615 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:13:54,615 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:13:54,623 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:13:54,623 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:13:54,628 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:13:54,631 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:13:54,637 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:13:54,637 - INFO - Starting preprop_resid function.
2025-01-31 16:13:54,638 - INFO - Renamed columns in DataFrame.
2025-01-31 16:13:54,644 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:13:54,644 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:13:54,646 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:13:54,647 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:13:54,650 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:13:54,656 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:13:54,656 - INFO - preprop_resid function completed successfully.
2025-01-31 16:13:54,656 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:13:54,661 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:13:54,665 - ERROR - create_electric_charging_residents_heatmap raised an exception: 'Einwohner'
2025-01-31 16:13:55,702 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:13:55,702 - INFO - Starting execution of the main function.
2025-01-31 16:13:55,708 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:13:55,892 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:13:55,892 - INFO - Starting preprop_lstat function.
2025-01-31 16:13:55,905 - INFO - Renamed columns in DataFrame.
2025-01-31 16:13:55,923 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:13:55,926 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:13:55,928 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:13:55,930 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:13:55,933 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:13:56,000 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:13:56,001 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:13:56,007 - INFO -  ====> Duration 0.11 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:13:56,007 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:13:56,012 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:13:56,014 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:13:56,021 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:13:56,021 - INFO - Starting preprop_resid function.
2025-01-31 16:13:56,022 - INFO - Renamed columns in DataFrame.
2025-01-31 16:13:56,028 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:13:56,029 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:13:56,030 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:13:56,031 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:13:56,033 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:13:56,040 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:13:56,040 - INFO - preprop_resid function completed successfully.
2025-01-31 16:13:56,041 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:13:56,047 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:13:56,050 - INFO - Searching for postal code: 10117
2025-01-31 16:13:56,054 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:13:56,059 - INFO - Filtered dataframe:
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2025-01-31 16:13:56,059 - INFO - result shape: [ChargingStation(postal_code=10117, latitude=52.51752, longitude=13.38777)]

2025-01-31 16:13:56,060 - ERROR - create_electric_charging_residents_heatmap raised an exception: 'StationSearchPerformed' object is not subscriptable
2025-01-31 16:14:05,860 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:14:05,880 - INFO - Starting execution of the main function.
2025-01-31 16:14:05,887 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:14:06,089 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:14:06,089 - INFO - Starting preprop_lstat function.
2025-01-31 16:14:06,101 - INFO - Renamed columns in DataFrame.
2025-01-31 16:14:06,120 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:14:06,123 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:14:06,125 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:14:06,127 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:14:06,130 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:14:06,197 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:14:06,197 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:14:06,207 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:14:06,207 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:14:06,215 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:14:06,218 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:14:06,225 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:14:06,225 - INFO - Starting preprop_resid function.
2025-01-31 16:14:06,227 - INFO - Renamed columns in DataFrame.
2025-01-31 16:14:06,234 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:14:06,235 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:14:06,239 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:14:06,240 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:14:06,243 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:14:06,249 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:14:06,250 - INFO - preprop_resid function completed successfully.
2025-01-31 16:14:06,250 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:14:06,257 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:14:06,263 - INFO - Searching for postal code: 10117
2025-01-31 16:14:06,267 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:14:06,273 - INFO - Filtered dataframe:
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2025-01-31 16:14:06,273 - INFO - result shape: [ChargingStation(postal_code=10117, latitude=52.51752, longitude=13.38777)]

2025-01-31 16:14:06,281 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8E230D450>), kwargs: {}
2025-01-31 16:14:06,318 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E0392C10>, <folium.folium.Map object at 0x000002B8E230D450>)
2025-01-31 16:14:06,462 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 16:14:06,471 - INFO -  ====> Duration 0.59 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 16:16:25,123 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:16:25,131 - INFO - Starting execution of the main function.
2025-01-31 16:16:25,140 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:16:25,351 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:16:25,351 - INFO - Starting preprop_lstat function.
2025-01-31 16:16:25,364 - INFO - Renamed columns in DataFrame.
2025-01-31 16:16:25,384 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:16:25,386 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:16:25,388 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:16:25,390 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:16:25,393 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:16:25,459 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:16:25,459 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:16:25,467 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:16:25,467 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:16:25,472 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:16:25,474 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:16:25,481 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:16:25,481 - INFO - Starting preprop_resid function.
2025-01-31 16:16:25,482 - INFO - Renamed columns in DataFrame.
2025-01-31 16:16:25,488 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:16:25,488 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:16:25,490 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:16:25,491 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:16:25,493 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:16:25,499 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:16:25,499 - INFO - preprop_resid function completed successfully.
2025-01-31 16:16:25,499 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:16:25,504 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:16:25,508 - INFO - Searching for postal code: 10117
2025-01-31 16:16:25,512 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:16:25,516 - INFO - Filtered dataframe:
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2025-01-31 16:16:25,517 - INFO - result shape: [ChargingStation(postal_code=10117, latitude=52.51752, longitude=13.38777)]

2025-01-31 16:16:25,517 - ERROR - create_electric_charging_residents_heatmap raised an exception: 'StationSearchPerformed' object is not subscriptable
2025-01-31 16:16:46,986 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:16:46,995 - INFO - Starting execution of the main function.
2025-01-31 16:16:47,000 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:16:47,182 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:16:47,182 - INFO - Starting preprop_lstat function.
2025-01-31 16:16:47,193 - INFO - Renamed columns in DataFrame.
2025-01-31 16:16:47,211 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:16:47,214 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:16:47,217 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:16:47,219 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:16:47,222 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:16:47,296 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:16:47,297 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:16:47,303 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:16:47,303 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:16:47,309 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:16:47,311 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:16:47,317 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:16:47,317 - INFO - Starting preprop_resid function.
2025-01-31 16:16:47,319 - INFO - Renamed columns in DataFrame.
2025-01-31 16:16:47,325 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:16:47,326 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:16:47,327 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:16:47,328 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:16:47,330 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:16:47,337 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:16:47,337 - INFO - preprop_resid function completed successfully.
2025-01-31 16:16:47,337 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:16:47,344 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:16:47,347 - INFO - Searching for postal code: 10117
2025-01-31 16:16:47,351 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:16:47,356 - INFO - Filtered dataframe:
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2025-01-31 16:16:47,356 - INFO - result shape: [ChargingStation(postal_code=10117, latitude=52.51752, longitude=13.38777)]

2025-01-31 16:16:47,365 - ERROR - create_electric_charging_residents_heatmap raised an exception: tuple indices must be integers or slices, not tuple
2025-01-31 16:17:16,558 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:17:16,571 - INFO - Starting execution of the main function.
2025-01-31 16:17:16,575 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:17:16,786 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:17:16,786 - INFO - Starting preprop_lstat function.
2025-01-31 16:17:16,804 - INFO - Renamed columns in DataFrame.
2025-01-31 16:17:16,831 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:17:16,834 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:17:16,837 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:17:16,839 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:17:16,843 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:17:16,911 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:17:16,911 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:17:16,917 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:17:16,917 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:17:16,923 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:17:16,925 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:17:16,931 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:17:16,931 - INFO - Starting preprop_resid function.
2025-01-31 16:17:16,931 - INFO - Renamed columns in DataFrame.
2025-01-31 16:17:16,937 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:17:16,938 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:17:16,939 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:17:16,941 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:17:16,943 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:17:16,950 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:17:16,950 - INFO - preprop_resid function completed successfully.
2025-01-31 16:17:16,950 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:17:16,955 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:17:16,958 - INFO - Searching for postal code: 10117
2025-01-31 16:17:16,962 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:17:16,966 - INFO - Filtered dataframe:
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2025-01-31 16:17:16,966 - INFO - result shape: [ChargingStation(postal_code=10117, latitude=52.51752, longitude=13.38777)]

2025-01-31 16:17:16,972 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8E230D850>), kwargs: {}
2025-01-31 16:17:17,009 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8DFD39E10>, <folium.folium.Map object at 0x000002B8E230D850>)
2025-01-31 16:17:17,145 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 16:17:17,153 - INFO -  ====> Duration 0.58 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 16:18:34,203 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:18:34,216 - INFO - Starting execution of the main function.
2025-01-31 16:18:34,222 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:18:34,420 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:18:34,421 - INFO - Starting preprop_lstat function.
2025-01-31 16:18:34,434 - INFO - Renamed columns in DataFrame.
2025-01-31 16:18:34,452 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:18:34,455 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:18:34,457 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:18:34,459 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:18:34,461 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:18:34,528 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:18:34,528 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:18:34,536 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:18:34,536 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:18:34,542 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:18:34,544 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:18:34,552 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:18:34,552 - INFO - Starting preprop_resid function.
2025-01-31 16:18:34,553 - INFO - Renamed columns in DataFrame.
2025-01-31 16:18:34,558 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:18:34,559 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:18:34,560 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:18:34,562 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:18:34,564 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:18:34,571 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:18:34,571 - INFO - preprop_resid function completed successfully.
2025-01-31 16:18:34,571 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:18:34,576 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:18:34,584 - INFO - Searching for postal code: 10117
2025-01-31 16:18:34,591 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:18:34,594 - INFO - Filtered dataframe:
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2025-01-31 16:18:34,595 - INFO - result shape: [ChargingStation(postal_code=10117, latitude=52.51752, longitude=13.38777)]

2025-01-31 16:18:34,595 - ERROR - create_electric_charging_residents_heatmap raised an exception: 'tuple' object has no attribute 'StationSearchPerformed'
2025-01-31 16:18:46,921 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:18:46,933 - INFO - Starting execution of the main function.
2025-01-31 16:18:46,938 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:18:47,135 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:18:47,136 - INFO - Starting preprop_lstat function.
2025-01-31 16:18:47,149 - INFO - Renamed columns in DataFrame.
2025-01-31 16:18:47,169 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:18:47,172 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:18:47,175 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:18:47,177 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:18:47,181 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:18:47,256 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:18:47,256 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:18:47,262 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:18:47,262 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:18:47,267 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:18:47,269 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:18:47,275 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:18:47,275 - INFO - Starting preprop_resid function.
2025-01-31 16:18:47,276 - INFO - Renamed columns in DataFrame.
2025-01-31 16:18:47,282 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:18:47,283 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:18:47,285 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:18:47,286 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:18:47,289 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:18:47,295 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:18:47,296 - INFO - preprop_resid function completed successfully.
2025-01-31 16:18:47,296 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:18:47,301 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:18:47,303 - INFO - Searching for postal code: 10117
2025-01-31 16:18:47,307 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:18:47,311 - INFO - Filtered dataframe:
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2025-01-31 16:18:47,311 - INFO - result shape: [ChargingStation(postal_code=10117, latitude=52.51752, longitude=13.38777)]

2025-01-31 16:18:47,316 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8E230D550>), kwargs: {}
2025-01-31 16:18:47,354 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8DFD390F0>, <folium.folium.Map object at 0x000002B8E230D550>)
2025-01-31 16:18:47,485 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 16:18:47,493 - INFO -  ====> Duration 0.56 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 16:19:16,088 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:19:16,089 - INFO - Starting execution of the main function.
2025-01-31 16:19:16,095 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:19:16,163 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:19:16,167 - INFO - Starting execution of the main function.
2025-01-31 16:19:16,192 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:19:16,356 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:19:16,356 - INFO - Starting preprop_lstat function.
2025-01-31 16:19:16,370 - INFO - Renamed columns in DataFrame.
2025-01-31 16:19:16,390 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:19:16,394 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:19:16,397 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:19:16,400 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:19:16,404 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:19:16,473 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:19:16,473 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:19:16,481 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:19:16,482 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:19:16,488 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:19:16,490 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:19:16,506 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:19:16,507 - INFO - Starting preprop_resid function.
2025-01-31 16:19:16,511 - INFO - Renamed columns in DataFrame.
2025-01-31 16:19:16,527 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:19:16,530 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:19:16,534 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:19:16,540 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:19:16,546 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:19:16,555 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:19:16,556 - INFO - preprop_resid function completed successfully.
2025-01-31 16:19:16,556 - INFO -  ====> Duration 0.05 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:19:16,564 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:19:16,667 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:19:16,668 - INFO - Starting preprop_lstat function.
2025-01-31 16:19:16,683 - INFO - Renamed columns in DataFrame.
2025-01-31 16:19:16,707 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:19:16,711 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:19:16,714 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:19:16,716 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:19:16,719 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:19:16,790 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:19:16,791 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:19:16,800 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:19:16,800 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:19:16,806 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:19:16,810 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:19:16,818 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:19:16,818 - INFO - Starting preprop_resid function.
2025-01-31 16:19:16,819 - INFO - Renamed columns in DataFrame.
2025-01-31 16:19:16,827 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:19:16,827 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:19:16,831 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:19:16,834 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:19:16,837 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:19:16,844 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:19:16,845 - INFO - preprop_resid function completed successfully.
2025-01-31 16:19:16,845 - INFO -  ====> Duration 0.03 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:19:16,851 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:19:16,854 - INFO - Searching for postal code: 13055
2025-01-31 16:19:16,857 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:19:16,863 - INFO - Filtered dataframe:
       PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
124  13055      30  POLYGON ((13.51801 52.53553, 13.51176 52.53508...      27928    52.54122   13.49656  POLYGON ((13.51801 52.53553, 13.51176 52.53508...
2025-01-31 16:19:16,864 - INFO - result shape: [ChargingStation(postal_code=13055, latitude=52.54122, longitude=13.49656)]

2025-01-31 16:19:16,871 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1CE50>), kwargs: {}
2025-01-31 16:19:16,920 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E31A65F0>, <folium.folium.Map object at 0x000002B8DFD1CE50>)
2025-01-31 16:19:17,066 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 16:19:17,075 - INFO -  ====> Duration 0.91 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 16:20:49,260 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:20:49,261 - INFO - Starting execution of the main function.
2025-01-31 16:20:49,266 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:20:49,547 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:20:49,548 - INFO - Starting preprop_lstat function.
2025-01-31 16:20:49,560 - INFO - Renamed columns in DataFrame.
2025-01-31 16:20:49,578 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:20:49,581 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:20:49,583 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:20:49,586 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:20:49,590 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:20:49,660 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:20:49,660 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:20:49,667 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:20:49,667 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:20:49,672 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:20:49,675 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:20:49,681 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:20:49,681 - INFO - Starting preprop_resid function.
2025-01-31 16:20:49,682 - INFO - Renamed columns in DataFrame.
2025-01-31 16:20:49,689 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:20:49,690 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:20:49,691 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:20:49,692 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:20:49,695 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:20:49,701 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:20:49,702 - INFO - preprop_resid function completed successfully.
2025-01-31 16:20:49,702 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:20:49,709 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:20:49,718 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1F750>), kwargs: {}
2025-01-31 16:20:49,756 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2BD58D0>, <folium.folium.Map object at 0x000002B8DFD1F750>)
2025-01-31 16:20:49,947 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 16:20:49,961 - INFO -  ====> Duration 0.70 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 16:20:50,849 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:20:50,850 - INFO - Starting execution of the main function.
2025-01-31 16:20:50,856 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:20:51,079 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:20:51,080 - INFO - Starting preprop_lstat function.
2025-01-31 16:20:51,096 - INFO - Renamed columns in DataFrame.
2025-01-31 16:20:51,117 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:20:51,120 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:20:51,123 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:20:51,126 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:20:51,130 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:20:51,203 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:20:51,204 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:20:51,212 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:20:51,212 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:20:51,219 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:20:51,222 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:20:51,229 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:20:51,229 - INFO - Starting preprop_resid function.
2025-01-31 16:20:51,231 - INFO - Renamed columns in DataFrame.
2025-01-31 16:20:51,238 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:20:51,239 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:20:51,240 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:20:51,241 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:20:51,244 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:20:51,252 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:20:51,252 - INFO - preprop_resid function completed successfully.
2025-01-31 16:20:51,253 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:20:51,260 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:20:51,264 - INFO - Searching for postal code: 10117
2025-01-31 16:20:51,269 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:20:51,275 - INFO - Filtered dataframe:
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2025-01-31 16:20:51,275 - INFO - result shape: [ChargingStation(postal_code=10117, latitude=52.51752, longitude=13.38777)]

2025-01-31 16:20:51,284 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1E750>), kwargs: {}
2025-01-31 16:20:51,322 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E0B990F0>, <folium.folium.Map object at 0x000002B8DFD1E750>)
2025-01-31 16:20:51,510 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 16:20:51,520 - INFO -  ====> Duration 0.67 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 16:21:22,802 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:21:22,809 - INFO - Starting execution of the main function.
2025-01-31 16:21:22,815 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:21:23,016 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:21:23,016 - INFO - Starting preprop_lstat function.
2025-01-31 16:21:23,028 - INFO - Renamed columns in DataFrame.
2025-01-31 16:21:23,047 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:21:23,050 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:21:23,053 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:21:23,055 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:21:23,058 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:21:23,125 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:21:23,125 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:21:23,132 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:21:23,132 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:21:23,137 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:21:23,140 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:21:23,146 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:21:23,146 - INFO - Starting preprop_resid function.
2025-01-31 16:21:23,146 - INFO - Renamed columns in DataFrame.
2025-01-31 16:21:23,152 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:21:23,153 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:21:23,154 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:21:23,156 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:21:23,158 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:21:23,164 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:21:23,165 - INFO - preprop_resid function completed successfully.
2025-01-31 16:21:23,165 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:21:23,170 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:21:23,172 - INFO - Searching for postal code: 10117
2025-01-31 16:21:23,176 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:21:23,180 - INFO - Filtered dataframe:
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2025-01-31 16:21:23,181 - INFO - result shape: [ChargingStation(postal_code=10117, latitude=52.51752, longitude=13.38777)]

2025-01-31 16:21:23,187 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1FB50>), kwargs: {}
2025-01-31 16:21:23,225 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2BD7150>, <folium.folium.Map object at 0x000002B8DFD1FB50>)
2025-01-31 16:21:23,357 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 16:21:23,368 - INFO -  ====> Duration 0.56 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 16:21:24,305 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:21:24,306 - INFO - Starting execution of the main function.
2025-01-31 16:21:24,312 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:21:24,510 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:21:24,510 - INFO - Starting preprop_lstat function.
2025-01-31 16:21:24,522 - INFO - Renamed columns in DataFrame.
2025-01-31 16:21:24,541 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:21:24,544 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:21:24,546 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:21:24,548 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:21:24,551 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:21:24,619 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:21:24,619 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:21:24,626 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:21:24,627 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:21:24,632 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:21:24,635 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:21:24,641 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:21:24,641 - INFO - Starting preprop_resid function.
2025-01-31 16:21:24,642 - INFO - Renamed columns in DataFrame.
2025-01-31 16:21:24,649 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:21:24,649 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:21:24,651 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:21:24,652 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:21:24,654 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:21:24,661 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:21:24,661 - INFO - preprop_resid function completed successfully.
2025-01-31 16:21:24,661 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:21:24,666 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:21:24,670 - INFO - Searching for postal code: 10117
2025-01-31 16:21:24,677 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:21:24,680 - INFO - Filtered dataframe:
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2025-01-31 16:21:24,681 - INFO - result shape: [ChargingStation(postal_code=10117, latitude=52.51752, longitude=13.38777)]

2025-01-31 16:21:24,686 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1F950>), kwargs: {}
2025-01-31 16:21:24,723 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E0B98910>, <folium.folium.Map object at 0x000002B8DFD1F950>)
2025-01-31 16:21:24,859 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 16:21:24,869 - INFO -  ====> Duration 0.56 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 16:27:46,835 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:27:46,845 - INFO - Starting execution of the main function.
2025-01-31 16:27:46,852 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:27:47,099 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:27:47,099 - INFO - Starting preprop_lstat function.
2025-01-31 16:27:47,113 - INFO - Renamed columns in DataFrame.
2025-01-31 16:27:47,135 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:27:47,138 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:27:47,141 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:27:47,143 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:27:47,146 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:27:47,216 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:27:47,217 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:27:47,225 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:27:47,225 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:27:47,230 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:27:47,232 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:27:47,240 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:27:47,240 - INFO - Starting preprop_resid function.
2025-01-31 16:27:47,240 - INFO - Renamed columns in DataFrame.
2025-01-31 16:27:47,246 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:27:47,247 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:27:47,249 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:27:47,250 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:27:47,252 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:27:47,258 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:27:47,259 - INFO - preprop_resid function completed successfully.
2025-01-31 16:27:47,259 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:27:47,264 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:27:47,266 - INFO - Searching for postal code: 10117
2025-01-31 16:27:47,270 - INFO - merged_df: 
       PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:27:47,271 - ERROR - An unexpected error occurred: invalid literal for int() with base 10: '10117.0'
2025-01-31 16:27:47,271 - ERROR - create_electric_charging_residents_heatmap raised an exception: list index out of range
2025-01-31 16:28:55,961 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:28:55,969 - INFO - Starting execution of the main function.
2025-01-31 16:28:55,975 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:28:56,168 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:28:56,168 - INFO - Starting preprop_lstat function.
2025-01-31 16:28:56,179 - INFO - Renamed columns in DataFrame.
2025-01-31 16:28:56,198 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:28:56,201 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:28:56,204 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:28:56,206 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:28:56,209 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:28:56,278 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:28:56,278 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:28:56,285 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:28:56,285 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:28:56,291 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:28:56,294 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:28:56,300 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:28:56,300 - INFO - Starting preprop_resid function.
2025-01-31 16:28:56,301 - INFO - Renamed columns in DataFrame.
2025-01-31 16:28:56,307 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:28:56,307 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:28:56,309 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:28:56,310 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:28:56,312 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:28:56,318 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:28:56,318 - INFO - preprop_resid function completed successfully.
2025-01-31 16:28:56,318 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:28:56,323 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:28:56,326 - INFO - Searching for postal code: 10117
2025-01-31 16:28:56,329 - INFO - merged_df: 
       PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:28:56,330 - ERROR - An unexpected error occurred: invalid literal for int() with base 10: '10117.0'
2025-01-31 16:28:56,330 - ERROR - create_electric_charging_residents_heatmap raised an exception: list index out of range
2025-01-31 16:29:12,346 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:29:12,356 - INFO - Starting execution of the main function.
2025-01-31 16:29:12,361 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:29:12,539 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:29:12,540 - INFO - Starting preprop_lstat function.
2025-01-31 16:29:12,550 - INFO - Renamed columns in DataFrame.
2025-01-31 16:29:12,569 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:29:12,571 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:29:12,574 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:29:12,576 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:29:12,579 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:29:12,648 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:29:12,649 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:29:12,655 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:29:12,655 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:29:12,660 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:29:12,662 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:29:12,668 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:29:12,668 - INFO - Starting preprop_resid function.
2025-01-31 16:29:12,669 - INFO - Renamed columns in DataFrame.
2025-01-31 16:29:12,675 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:29:12,676 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:29:12,677 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:29:12,678 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:29:12,681 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:29:12,689 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:29:12,689 - INFO - preprop_resid function completed successfully.
2025-01-31 16:29:12,690 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:29:12,695 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:29:12,698 - INFO - Searching for postal code: 10117
2025-01-31 16:29:12,701 - INFO - merged_df: 
       PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:29:12,702 - ERROR - An unexpected error occurred: invalid literal for int() with base 10: '10117.0'
2025-01-31 16:29:12,702 - ERROR - create_electric_charging_residents_heatmap raised an exception: list index out of range
2025-01-31 16:29:15,673 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:29:15,673 - INFO - Starting execution of the main function.
2025-01-31 16:29:15,679 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:29:15,872 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:29:15,872 - INFO - Starting preprop_lstat function.
2025-01-31 16:29:15,883 - INFO - Renamed columns in DataFrame.
2025-01-31 16:29:15,901 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:29:15,904 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:29:15,906 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:29:15,908 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:29:15,911 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:29:15,988 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:29:15,988 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:29:15,993 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:29:15,993 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:29:15,999 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:29:16,001 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:29:16,007 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:29:16,007 - INFO - Starting preprop_resid function.
2025-01-31 16:29:16,008 - INFO - Renamed columns in DataFrame.
2025-01-31 16:29:16,014 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:29:16,015 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:29:16,016 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:29:16,018 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:29:16,020 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:29:16,027 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:29:16,027 - INFO - preprop_resid function completed successfully.
2025-01-31 16:29:16,027 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:29:16,033 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:29:16,039 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8E230DD50>), kwargs: {}
2025-01-31 16:29:16,077 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E0B9BBD0>, <folium.folium.Map object at 0x000002B8E230DD50>)
2025-01-31 16:29:16,212 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 16:29:16,219 - INFO -  ====> Duration 0.55 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 16:29:16,998 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:29:16,999 - INFO - Starting execution of the main function.
2025-01-31 16:29:17,005 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:29:17,225 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:29:17,225 - INFO - Starting preprop_lstat function.
2025-01-31 16:29:17,237 - INFO - Renamed columns in DataFrame.
2025-01-31 16:29:17,257 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:29:17,260 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:29:17,262 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:29:17,264 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:29:17,267 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:29:17,341 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:29:17,341 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:29:17,348 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:29:17,348 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:29:17,354 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:29:17,356 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:29:17,363 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:29:17,363 - INFO - Starting preprop_resid function.
2025-01-31 16:29:17,364 - INFO - Renamed columns in DataFrame.
2025-01-31 16:29:17,371 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:29:17,371 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:29:17,373 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:29:17,374 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:29:17,377 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:29:17,384 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:29:17,384 - INFO - preprop_resid function completed successfully.
2025-01-31 16:29:17,385 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:29:17,391 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:29:17,395 - INFO - Searching for postal code: 10117
2025-01-31 16:29:17,399 - INFO - merged_df: 
       PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:29:17,399 - ERROR - An unexpected error occurred: invalid literal for int() with base 10: '10117.0'
2025-01-31 16:29:17,400 - ERROR - create_electric_charging_residents_heatmap raised an exception: list index out of range
2025-01-31 16:29:33,084 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:29:33,092 - INFO - Starting execution of the main function.
2025-01-31 16:29:33,097 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:29:33,309 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:29:33,310 - INFO - Starting preprop_lstat function.
2025-01-31 16:29:33,321 - INFO - Renamed columns in DataFrame.
2025-01-31 16:29:33,342 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:29:33,344 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:29:33,347 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:29:33,349 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:29:33,352 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:29:33,427 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:29:33,427 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:29:33,432 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:29:33,432 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:29:33,438 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:29:33,440 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:29:33,445 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:29:33,445 - INFO - Starting preprop_resid function.
2025-01-31 16:29:33,446 - INFO - Renamed columns in DataFrame.
2025-01-31 16:29:33,452 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:29:33,453 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:29:33,454 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:29:33,455 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:29:33,457 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:29:33,464 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:29:33,464 - INFO - preprop_resid function completed successfully.
2025-01-31 16:29:33,464 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:29:33,469 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:29:33,472 - INFO - Searching for postal code: 10117
2025-01-31 16:29:33,476 - INFO - merged_df: 
       PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:29:33,477 - ERROR - An unexpected error occurred: invalid literal for int() with base 10: '10117.0'
2025-01-31 16:29:33,477 - ERROR - create_electric_charging_residents_heatmap raised an exception: list index out of range
2025-01-31 16:29:35,050 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:29:35,051 - INFO - Starting execution of the main function.
2025-01-31 16:29:35,056 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:29:35,240 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:29:35,240 - INFO - Starting preprop_lstat function.
2025-01-31 16:29:35,251 - INFO - Renamed columns in DataFrame.
2025-01-31 16:29:35,269 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:29:35,272 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:29:35,274 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:29:35,276 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:29:35,279 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:29:35,348 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:29:35,348 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:29:35,354 - INFO -  ====> Duration 0.11 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:29:35,354 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:29:35,360 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:29:35,362 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:29:35,367 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:29:35,367 - INFO - Starting preprop_resid function.
2025-01-31 16:29:35,368 - INFO - Renamed columns in DataFrame.
2025-01-31 16:29:35,374 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:29:35,375 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:29:35,376 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:29:35,378 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:29:35,380 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:29:35,387 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:29:35,387 - INFO - preprop_resid function completed successfully.
2025-01-31 16:29:35,388 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:29:35,393 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:29:35,395 - INFO - Searching for postal code: 10117
2025-01-31 16:29:35,399 - INFO - merged_df: 
       PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:29:35,400 - ERROR - An unexpected error occurred: invalid literal for int() with base 10: '10117.0'
2025-01-31 16:29:35,400 - ERROR - create_electric_charging_residents_heatmap raised an exception: list index out of range
2025-01-31 16:29:38,133 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:29:38,133 - INFO - Starting execution of the main function.
2025-01-31 16:29:38,138 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:29:38,321 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:29:38,321 - INFO - Starting preprop_lstat function.
2025-01-31 16:29:38,336 - INFO - Renamed columns in DataFrame.
2025-01-31 16:29:38,360 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:29:38,364 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:29:38,367 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:29:38,370 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:29:38,374 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:29:38,445 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:29:38,446 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:29:38,454 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:29:38,454 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:29:38,461 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:29:38,463 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:29:38,470 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:29:38,473 - INFO - Starting preprop_resid function.
2025-01-31 16:29:38,474 - INFO - Renamed columns in DataFrame.
2025-01-31 16:29:38,480 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:29:38,481 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:29:38,483 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:29:38,484 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:29:38,486 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:29:38,493 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:29:38,494 - INFO - preprop_resid function completed successfully.
2025-01-31 16:29:38,494 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:29:38,499 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:29:38,507 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DE0FF950>), kwargs: {}
2025-01-31 16:29:38,547 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8DFD39E10>, <folium.folium.Map object at 0x000002B8DE0FF950>)
2025-01-31 16:29:38,686 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 16:29:38,696 - INFO -  ====> Duration 0.56 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 16:29:39,609 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:29:39,610 - INFO - Starting execution of the main function.
2025-01-31 16:29:39,618 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:29:39,800 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:29:39,800 - INFO - Starting preprop_lstat function.
2025-01-31 16:29:39,812 - INFO - Renamed columns in DataFrame.
2025-01-31 16:29:39,841 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:29:39,847 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:29:39,850 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:29:39,852 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:29:39,855 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:29:39,949 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:29:39,950 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:29:39,956 - INFO -  ====> Duration 0.16 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:29:39,956 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:29:39,962 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:29:39,964 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:29:39,971 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:29:39,971 - INFO - Starting preprop_resid function.
2025-01-31 16:29:39,972 - INFO - Renamed columns in DataFrame.
2025-01-31 16:29:39,978 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:29:39,979 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:29:39,981 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:29:39,982 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:29:39,985 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:29:39,992 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:29:39,992 - INFO - preprop_resid function completed successfully.
2025-01-31 16:29:39,992 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:29:39,999 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:29:40,003 - INFO - Searching for postal code: 10117
2025-01-31 16:29:40,007 - INFO - merged_df: 
       PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:29:40,008 - ERROR - An unexpected error occurred: invalid literal for int() with base 10: '10117.0'
2025-01-31 16:29:40,008 - ERROR - create_electric_charging_residents_heatmap raised an exception: list index out of range
2025-01-31 16:30:14,513 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:30:14,521 - INFO - Starting execution of the main function.
2025-01-31 16:30:14,526 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:30:14,700 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:30:14,700 - INFO - Starting preprop_lstat function.
2025-01-31 16:30:14,714 - INFO - Renamed columns in DataFrame.
2025-01-31 16:30:14,733 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:30:14,736 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:30:14,739 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:30:14,741 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:30:14,745 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:30:14,819 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:30:14,819 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:30:14,827 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:30:14,827 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:30:14,834 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:30:14,837 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:30:14,843 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:30:14,843 - INFO - Starting preprop_resid function.
2025-01-31 16:30:14,844 - INFO - Renamed columns in DataFrame.
2025-01-31 16:30:14,850 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:30:14,850 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:30:14,852 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:30:14,854 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:30:14,856 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:30:14,862 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:30:14,863 - INFO - preprop_resid function completed successfully.
2025-01-31 16:30:14,863 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:30:14,868 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:30:14,871 - INFO - Searching for postal code: 10117
2025-01-31 16:30:14,874 - INFO - merged_df: 
       PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:30:14,874 - ERROR - An unexpected error occurred: invalid literal for int() with base 10: '10117.0'
2025-01-31 16:30:14,875 - ERROR - create_electric_charging_residents_heatmap raised an exception: list index out of range
2025-01-31 16:30:17,416 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:30:17,416 - INFO - Starting execution of the main function.
2025-01-31 16:30:17,421 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:30:17,612 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:30:17,613 - INFO - Starting preprop_lstat function.
2025-01-31 16:30:17,626 - INFO - Renamed columns in DataFrame.
2025-01-31 16:30:17,646 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:30:17,649 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:30:17,653 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:30:17,654 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:30:17,658 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:30:17,733 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:30:17,733 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:30:17,741 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:30:17,741 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:30:17,747 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:30:17,750 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:30:17,757 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:30:17,757 - INFO - Starting preprop_resid function.
2025-01-31 16:30:17,758 - INFO - Renamed columns in DataFrame.
2025-01-31 16:30:17,764 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:30:17,765 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:30:17,767 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:30:17,768 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:30:17,770 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:30:17,776 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:30:17,777 - INFO - preprop_resid function completed successfully.
2025-01-31 16:30:17,777 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:30:17,782 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:30:17,789 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1CB50>), kwargs: {}
2025-01-31 16:30:17,827 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E314BE70>, <folium.folium.Map object at 0x000002B8DFD1CB50>)
2025-01-31 16:30:17,960 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 16:30:17,968 - INFO -  ====> Duration 0.55 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 16:30:19,144 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:30:19,144 - INFO - Starting execution of the main function.
2025-01-31 16:30:19,151 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:30:19,434 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:30:19,434 - INFO - Starting preprop_lstat function.
2025-01-31 16:30:19,448 - INFO - Renamed columns in DataFrame.
2025-01-31 16:30:19,478 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:30:19,480 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:30:19,483 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:30:19,485 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:30:19,489 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:30:19,559 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:30:19,559 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:30:19,569 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:30:19,569 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:30:19,574 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:30:19,577 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:30:19,584 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:30:19,584 - INFO - Starting preprop_resid function.
2025-01-31 16:30:19,585 - INFO - Renamed columns in DataFrame.
2025-01-31 16:30:19,592 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:30:19,592 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:30:19,594 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:30:19,594 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:30:19,598 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:30:19,604 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:30:19,605 - INFO - preprop_resid function completed successfully.
2025-01-31 16:30:19,605 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:30:19,611 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:30:19,614 - INFO - Searching for postal code: 10115
2025-01-31 16:30:19,619 - INFO - merged_df: 
       PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:30:19,619 - ERROR - An unexpected error occurred: invalid literal for int() with base 10: '10117.0'
2025-01-31 16:30:19,620 - ERROR - create_electric_charging_residents_heatmap raised an exception: list index out of range
2025-01-31 16:31:16,729 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:31:16,737 - INFO - Starting execution of the main function.
2025-01-31 16:31:16,742 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:31:16,909 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:31:16,909 - INFO - Starting preprop_lstat function.
2025-01-31 16:31:16,919 - INFO - Renamed columns in DataFrame.
2025-01-31 16:31:16,944 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:31:16,947 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:31:16,949 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:31:16,951 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:31:16,958 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:31:17,025 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:31:17,025 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:31:17,033 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:31:17,033 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:31:17,039 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:31:17,041 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:31:17,047 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:31:17,047 - INFO - Starting preprop_resid function.
2025-01-31 16:31:17,047 - INFO - Renamed columns in DataFrame.
2025-01-31 16:31:17,054 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:31:17,055 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:31:17,056 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:31:17,058 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:31:17,060 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:31:17,066 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:31:17,067 - INFO - preprop_resid function completed successfully.
2025-01-31 16:31:17,067 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:31:17,072 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:31:17,075 - INFO - Searching for postal code: 10115
2025-01-31 16:31:17,078 - INFO - merged_df: 
       PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:31:17,079 - ERROR - An unexpected error occurred: invalid literal for int() with base 10: '10117.0'
2025-01-31 16:31:17,079 - ERROR - create_electric_charging_residents_heatmap raised an exception: list index out of range
2025-01-31 16:31:19,618 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:31:19,619 - INFO - Starting execution of the main function.
2025-01-31 16:31:19,624 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:31:19,802 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:31:19,802 - INFO - Starting preprop_lstat function.
2025-01-31 16:31:19,814 - INFO - Renamed columns in DataFrame.
2025-01-31 16:31:19,832 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:31:19,835 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:31:19,837 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:31:19,839 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:31:19,842 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:31:19,909 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:31:19,909 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:31:19,915 - INFO -  ====> Duration 0.11 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:31:19,915 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:31:19,922 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:31:19,926 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:31:19,932 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:31:19,932 - INFO - Starting preprop_resid function.
2025-01-31 16:31:19,932 - INFO - Renamed columns in DataFrame.
2025-01-31 16:31:19,938 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:31:19,939 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:31:19,940 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:31:19,942 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:31:19,944 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:31:19,950 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:31:19,951 - INFO - preprop_resid function completed successfully.
2025-01-31 16:31:19,951 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:31:19,956 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:31:19,966 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1CC50>), kwargs: {}
2025-01-31 16:31:20,006 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E0B9A190>, <folium.folium.Map object at 0x000002B8DFD1CC50>)
2025-01-31 16:31:20,139 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 16:31:20,147 - INFO -  ====> Duration 0.53 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 16:31:21,069 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:31:21,070 - INFO - Starting execution of the main function.
2025-01-31 16:31:21,075 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:31:21,290 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:31:21,290 - INFO - Starting preprop_lstat function.
2025-01-31 16:31:21,307 - INFO - Renamed columns in DataFrame.
2025-01-31 16:31:21,334 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:31:21,339 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:31:21,342 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:31:21,344 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:31:21,348 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:31:21,418 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:31:21,418 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:31:21,429 - INFO -  ====> Duration 0.14 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:31:21,429 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:31:21,434 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:31:21,437 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:31:21,444 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:31:21,444 - INFO - Starting preprop_resid function.
2025-01-31 16:31:21,444 - INFO - Renamed columns in DataFrame.
2025-01-31 16:31:21,451 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:31:21,451 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:31:21,453 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:31:21,454 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:31:21,457 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:31:21,464 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:31:21,464 - INFO - preprop_resid function completed successfully.
2025-01-31 16:31:21,464 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:31:21,471 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:31:21,474 - INFO - Searching for postal code: 10117
2025-01-31 16:31:21,478 - INFO - merged_df: 
       PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:31:21,479 - ERROR - An unexpected error occurred: invalid literal for int() with base 10: '10117.0'
2025-01-31 16:31:21,479 - ERROR - create_electric_charging_residents_heatmap raised an exception: list index out of range
2025-01-31 16:32:04,813 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:32:04,827 - INFO - Starting execution of the main function.
2025-01-31 16:32:04,832 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:32:05,031 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:32:05,031 - INFO - Starting preprop_lstat function.
2025-01-31 16:32:05,046 - INFO - Renamed columns in DataFrame.
2025-01-31 16:32:05,066 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:32:05,069 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:32:05,071 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:32:05,075 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:32:05,079 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:32:05,153 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:32:05,155 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:32:05,163 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:32:05,163 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:32:05,169 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:32:05,171 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:32:05,178 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:32:05,179 - INFO - Starting preprop_resid function.
2025-01-31 16:32:05,180 - INFO - Renamed columns in DataFrame.
2025-01-31 16:32:05,189 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:32:05,190 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:32:05,192 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:32:05,193 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:32:05,195 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:32:05,204 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:32:05,204 - INFO - preprop_resid function completed successfully.
2025-01-31 16:32:05,204 - INFO -  ====> Duration 0.03 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:32:05,211 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:32:05,214 - INFO - Searching for postal code: 10117
2025-01-31 16:32:05,217 - INFO - merged_df: 
       PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:32:05,218 - ERROR - An unexpected error occurred: invalid literal for int() with base 10: '10117.0'
2025-01-31 16:32:05,218 - INFO - result shape: []

2025-01-31 16:32:05,218 - ERROR - create_electric_charging_residents_heatmap raised an exception: list index out of range
2025-01-31 16:32:07,003 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:32:07,003 - INFO - Starting execution of the main function.
2025-01-31 16:32:07,008 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:32:07,212 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:32:07,212 - INFO - Starting preprop_lstat function.
2025-01-31 16:32:07,227 - INFO - Renamed columns in DataFrame.
2025-01-31 16:32:07,248 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:32:07,250 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:32:07,253 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:32:07,255 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:32:07,259 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:32:07,328 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:32:07,329 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:32:07,338 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:32:07,338 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:32:07,344 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:32:07,346 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:32:07,353 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:32:07,353 - INFO - Starting preprop_resid function.
2025-01-31 16:32:07,353 - INFO - Renamed columns in DataFrame.
2025-01-31 16:32:07,360 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:32:07,360 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:32:07,362 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:32:07,363 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:32:07,365 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:32:07,373 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:32:07,373 - INFO - preprop_resid function completed successfully.
2025-01-31 16:32:07,374 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:32:07,381 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:32:07,384 - INFO - Searching for postal code: 10117
2025-01-31 16:32:07,388 - INFO - merged_df: 
       PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:32:07,389 - ERROR - An unexpected error occurred: invalid literal for int() with base 10: '10117.0'
2025-01-31 16:32:07,389 - INFO - result shape: []

2025-01-31 16:32:07,389 - ERROR - create_electric_charging_residents_heatmap raised an exception: list index out of range
2025-01-31 16:32:09,903 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:32:09,904 - INFO - Starting execution of the main function.
2025-01-31 16:32:09,909 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:32:10,154 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:32:10,154 - INFO - Starting preprop_lstat function.
2025-01-31 16:32:10,167 - INFO - Renamed columns in DataFrame.
2025-01-31 16:32:10,185 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:32:10,187 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:32:10,191 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:32:10,192 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:32:10,195 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:32:10,264 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:32:10,264 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:32:10,272 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:32:10,272 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:32:10,278 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:32:10,280 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:32:10,287 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:32:10,287 - INFO - Starting preprop_resid function.
2025-01-31 16:32:10,288 - INFO - Renamed columns in DataFrame.
2025-01-31 16:32:10,294 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:32:10,295 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:32:10,297 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:32:10,298 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:32:10,301 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:32:10,307 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:32:10,307 - INFO - preprop_resid function completed successfully.
2025-01-31 16:32:10,308 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:32:10,313 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:32:10,320 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1D550>), kwargs: {}
2025-01-31 16:32:10,369 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E551EF90>, <folium.folium.Map object at 0x000002B8DFD1D550>)
2025-01-31 16:32:10,558 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 16:32:10,566 - INFO -  ====> Duration 0.66 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 16:32:11,862 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:32:11,863 - INFO - Starting execution of the main function.
2025-01-31 16:32:11,871 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:32:12,077 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:32:12,078 - INFO - Starting preprop_lstat function.
2025-01-31 16:32:12,093 - INFO - Renamed columns in DataFrame.
2025-01-31 16:32:12,113 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:32:12,116 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:32:12,118 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:32:12,120 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:32:12,124 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:32:12,194 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:32:12,194 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:32:12,204 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:32:12,204 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:32:12,211 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:32:12,217 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:32:12,224 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:32:12,224 - INFO - Starting preprop_resid function.
2025-01-31 16:32:12,225 - INFO - Renamed columns in DataFrame.
2025-01-31 16:32:12,234 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:32:12,235 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:32:12,237 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:32:12,238 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:32:12,240 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:32:12,248 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:32:12,248 - INFO - preprop_resid function completed successfully.
2025-01-31 16:32:12,248 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:32:12,256 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:32:12,261 - INFO - Searching for postal code: 10117
2025-01-31 16:32:12,266 - INFO - merged_df: 
       PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:32:12,267 - ERROR - An unexpected error occurred: invalid literal for int() with base 10: '10117.0'
2025-01-31 16:32:12,267 - INFO - result shape: []

2025-01-31 16:32:12,267 - ERROR - create_electric_charging_residents_heatmap raised an exception: list index out of range
2025-01-31 16:33:34,679 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:33:34,690 - INFO - Starting execution of the main function.
2025-01-31 16:33:34,697 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:33:34,897 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:33:34,898 - INFO - Starting preprop_lstat function.
2025-01-31 16:33:34,910 - INFO - Renamed columns in DataFrame.
2025-01-31 16:33:34,931 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:33:34,933 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:33:34,937 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:33:34,938 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:33:34,942 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:33:35,013 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:33:35,013 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:33:35,019 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:33:35,020 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:33:35,025 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:33:35,027 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:33:35,034 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:33:35,034 - INFO - Starting preprop_resid function.
2025-01-31 16:33:35,035 - INFO - Renamed columns in DataFrame.
2025-01-31 16:33:35,041 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:33:35,041 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:33:35,043 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:33:35,044 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:33:35,047 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:33:35,053 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:33:35,054 - INFO - preprop_resid function completed successfully.
2025-01-31 16:33:35,054 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:33:35,060 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:33:35,062 - INFO - Searching for postal code: 10117
2025-01-31 16:33:35,066 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:33:35,070 - INFO - Filtered dataframe:
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2025-01-31 16:33:35,070 - INFO - result shape: ([ChargingStation(postal_code=10117, latitude=52.51752, longitude=13.38777)], StationSearchPerformed(timestamp=Timestamp('2025-01-31 16:33:35.070518'), postal_code='10117', stations_found=0    54
Name: Number, dtype: int64))

2025-01-31 16:33:35,078 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8E230EA50>), kwargs: {}
2025-01-31 16:33:35,119 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E0B9ACF0>, <folium.folium.Map object at 0x000002B8E230EA50>)
2025-01-31 16:33:35,253 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 16:33:35,262 - INFO -  ====> Duration 0.57 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 16:33:46,512 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:33:46,522 - INFO - Starting execution of the main function.
2025-01-31 16:33:46,529 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:33:46,757 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:33:46,757 - INFO - Starting preprop_lstat function.
2025-01-31 16:33:46,772 - INFO - Renamed columns in DataFrame.
2025-01-31 16:33:46,794 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:33:46,797 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:33:46,799 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:33:46,801 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:33:46,804 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:33:46,873 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:33:46,873 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:33:46,881 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:33:46,881 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:33:46,887 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:33:46,889 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:33:46,897 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:33:46,897 - INFO - Starting preprop_resid function.
2025-01-31 16:33:46,898 - INFO - Renamed columns in DataFrame.
2025-01-31 16:33:46,904 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:33:46,905 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:33:46,907 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:33:46,908 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:33:46,911 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:33:46,917 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:33:46,917 - INFO - preprop_resid function completed successfully.
2025-01-31 16:33:46,918 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:33:46,923 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:33:46,926 - INFO - Searching for postal code: 10117
2025-01-31 16:33:46,930 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:33:46,934 - INFO - Filtered dataframe:
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2025-01-31 16:33:46,935 - INFO - result shape: ([ChargingStation(postal_code=10117, latitude=52.51752, longitude=13.38777)], StationSearchPerformed(timestamp=Timestamp('2025-01-31 16:33:46.935243'), postal_code='10117', stations_found=0    54
Name: Number, dtype: int64))

2025-01-31 16:33:46,967 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8E230C150>), kwargs: {}
2025-01-31 16:33:47,016 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2FCAC10>, <folium.folium.Map object at 0x000002B8E230C150>)
2025-01-31 16:33:47,161 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 16:33:47,173 - INFO -  ====> Duration 0.65 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 16:34:03,602 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:34:03,610 - INFO - Starting execution of the main function.
2025-01-31 16:34:03,617 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:34:03,912 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:34:03,912 - INFO - Starting preprop_lstat function.
2025-01-31 16:34:03,929 - INFO - Renamed columns in DataFrame.
2025-01-31 16:34:03,949 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:34:03,952 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:34:03,954 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:34:03,957 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:34:03,960 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:34:04,029 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:34:04,029 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:34:04,037 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:34:04,037 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:34:04,043 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:34:04,046 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:34:04,053 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:34:04,054 - INFO - Starting preprop_resid function.
2025-01-31 16:34:04,055 - INFO - Renamed columns in DataFrame.
2025-01-31 16:34:04,061 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:34:04,061 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:34:04,063 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:34:04,065 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:34:04,067 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:34:04,075 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:34:04,075 - INFO - preprop_resid function completed successfully.
2025-01-31 16:34:04,075 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:34:04,080 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:34:04,091 - INFO - Searching for postal code: 10117
2025-01-31 16:34:04,096 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:34:04,101 - INFO - Filtered dataframe:
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2025-01-31 16:34:04,101 - ERROR - An unexpected error occurred: 'Series' object has no attribute 'value'
2025-01-31 16:34:04,102 - INFO - result shape: []

2025-01-31 16:34:04,102 - ERROR - create_electric_charging_residents_heatmap raised an exception: list index out of range
2025-01-31 16:35:21,225 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:35:21,233 - INFO - Starting execution of the main function.
2025-01-31 16:35:21,240 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:35:21,456 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:35:21,456 - INFO - Starting preprop_lstat function.
2025-01-31 16:35:21,468 - INFO - Renamed columns in DataFrame.
2025-01-31 16:35:21,487 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:35:21,489 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:35:21,492 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:35:21,494 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:35:21,497 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:35:21,579 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:35:21,580 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:35:21,587 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:35:21,588 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:35:21,593 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:35:21,595 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:35:21,602 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:35:21,603 - INFO - Starting preprop_resid function.
2025-01-31 16:35:21,605 - INFO - Renamed columns in DataFrame.
2025-01-31 16:35:21,611 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:35:21,612 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:35:21,613 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:35:21,614 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:35:21,617 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:35:21,623 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:35:21,623 - INFO - preprop_resid function completed successfully.
2025-01-31 16:35:21,623 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:35:21,629 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:35:21,631 - INFO - Searching for postal code: 10117
2025-01-31 16:35:21,635 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:35:21,639 - INFO - Filtered dataframe:
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2025-01-31 16:35:21,639 - INFO - result shape: ([ChargingStation(postal_code=10117, latitude=52.51752, longitude=13.38777)], StationSearchPerformed(timestamp=Timestamp('2025-01-31 16:35:21.639551'), postal_code='10117', stations_found=54))

2025-01-31 16:35:21,645 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8E230CF50>), kwargs: {}
2025-01-31 16:35:21,683 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E29FBE70>, <folium.folium.Map object at 0x000002B8E230CF50>)
2025-01-31 16:35:21,817 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 16:35:21,824 - INFO -  ====> Duration 0.59 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 16:35:45,853 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:35:45,861 - INFO - Starting execution of the main function.
2025-01-31 16:35:45,866 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:35:46,079 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:35:46,080 - INFO - Starting preprop_lstat function.
2025-01-31 16:35:46,092 - INFO - Renamed columns in DataFrame.
2025-01-31 16:35:46,111 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:35:46,114 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:35:46,116 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:35:46,118 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:35:46,121 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:35:46,189 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:35:46,189 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:35:46,196 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:35:46,197 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:35:46,202 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:35:46,204 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:35:46,211 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:35:46,211 - INFO - Starting preprop_resid function.
2025-01-31 16:35:46,212 - INFO - Renamed columns in DataFrame.
2025-01-31 16:35:46,218 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:35:46,219 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:35:46,220 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:35:46,221 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:35:46,224 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:35:46,230 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:35:46,230 - INFO - preprop_resid function completed successfully.
2025-01-31 16:35:46,230 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:35:46,237 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:35:46,239 - INFO - Searching for postal code: 10117
2025-01-31 16:35:46,243 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:35:46,246 - INFO - Filtered dataframe:
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2025-01-31 16:35:46,247 - INFO - result shape: ([ChargingStation(postal_code=10117, latitude=52.51752, longitude=13.38777)], StationSearchPerformed(timestamp=Timestamp('2025-01-31 16:35:46.247101'), postal_code='10117', stations_found=54))

2025-01-31 16:35:46,261 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DE0FF550>), kwargs: {}
2025-01-31 16:35:46,299 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E4E85C50>, <folium.folium.Map object at 0x000002B8DE0FF550>)
2025-01-31 16:35:46,432 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 16:35:46,442 - INFO -  ====> Duration 0.58 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 16:37:32,826 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:37:51,777 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:38:21,859 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:38:21,868 - INFO - Starting execution of the main function.
2025-01-31 16:38:21,874 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:38:22,072 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:38:22,073 - INFO - Starting preprop_lstat function.
2025-01-31 16:38:22,089 - INFO - Renamed columns in DataFrame.
2025-01-31 16:38:22,112 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:38:22,114 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:38:22,117 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:38:22,119 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:38:22,122 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:38:22,188 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:38:22,189 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:38:22,197 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:38:22,197 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:38:22,202 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:38:22,204 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:38:22,210 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:38:22,211 - INFO - Starting preprop_resid function.
2025-01-31 16:38:22,211 - INFO - Renamed columns in DataFrame.
2025-01-31 16:38:22,217 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:38:22,218 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:38:22,220 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:38:22,221 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:38:22,223 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:38:22,230 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:38:22,230 - INFO - preprop_resid function completed successfully.
2025-01-31 16:38:22,230 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:38:22,235 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:38:22,241 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1C650>), kwargs: {}
2025-01-31 16:38:22,279 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E4E87CB0>, <folium.folium.Map object at 0x000002B8DFD1C650>)
2025-01-31 16:38:22,410 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 16:38:22,418 - INFO -  ====> Duration 0.55 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 16:38:25,444 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:38:25,444 - INFO - Starting execution of the main function.
2025-01-31 16:38:25,450 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:38:25,696 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:38:25,696 - INFO - Starting preprop_lstat function.
2025-01-31 16:38:25,713 - INFO - Renamed columns in DataFrame.
2025-01-31 16:38:25,733 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:38:25,736 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:38:25,739 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:38:25,741 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:38:25,745 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:38:25,814 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:38:25,816 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:38:25,827 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:38:25,828 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:38:25,833 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:38:25,836 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:38:25,842 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:38:25,843 - INFO - Starting preprop_resid function.
2025-01-31 16:38:25,844 - INFO - Renamed columns in DataFrame.
2025-01-31 16:38:25,851 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:38:25,851 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:38:25,853 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:38:25,855 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:38:25,857 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:38:25,864 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:38:25,864 - INFO - preprop_resid function completed successfully.
2025-01-31 16:38:25,865 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:38:25,870 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:38:25,876 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1FC50>), kwargs: {}
2025-01-31 16:38:25,932 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E4E87070>, <folium.folium.Map object at 0x000002B8DFD1FC50>)
2025-01-31 16:38:26,079 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 16:38:26,090 - INFO -  ====> Duration 0.65 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 16:38:26,916 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:38:26,918 - INFO - Starting execution of the main function.
2025-01-31 16:38:26,927 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:38:27,136 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:38:27,136 - INFO - Starting preprop_lstat function.
2025-01-31 16:38:27,150 - INFO - Renamed columns in DataFrame.
2025-01-31 16:38:27,169 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:38:27,173 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:38:27,175 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:38:27,177 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:38:27,181 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:38:27,285 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:38:27,285 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:38:27,293 - INFO -  ====> Duration 0.16 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:38:27,294 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:38:27,299 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:38:27,302 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:38:27,310 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:38:27,310 - INFO - Starting preprop_resid function.
2025-01-31 16:38:27,311 - INFO - Renamed columns in DataFrame.
2025-01-31 16:38:27,317 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:38:27,318 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:38:27,320 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:38:27,321 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:38:27,323 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:38:27,331 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:38:27,331 - INFO - preprop_resid function completed successfully.
2025-01-31 16:38:27,331 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:38:27,337 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:38:27,340 - INFO - Searching for postal code: 10117
2025-01-31 16:38:27,345 - INFO - merged_df: 
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1  10119       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2  10178      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3  10179      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4  10243      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...      28390    52.51191   13.43733  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
2025-01-31 16:38:27,348 - INFO - Filtered dataframe:
     PLZ  Number                                         geometry_x  Einwohner Breitengrad Längengrad                                         geometry_y
0  10117      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2025-01-31 16:38:27,349 - INFO - result shape: ([ChargingStation(postal_code=10117, latitude=52.51752, longitude=13.38777)], StationSearchPerformed(timestamp=Timestamp('2025-01-31 16:38:27.349350'), postal_code='10117', stations_found=54))

2025-01-31 16:38:27,355 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8DFD1C850>), kwargs: {}
2025-01-31 16:38:27,394 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2464BB0>, <folium.folium.Map object at 0x000002B8DFD1C850>)
2025-01-31 16:38:27,573 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 16:38:27,583 - INFO -  ====> Duration 0.66 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
2025-01-31 16:39:56,853 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:39:56,864 - INFO - Starting execution of the main function.
2025-01-31 16:39:56,871 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:39:57,068 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:39:57,068 - INFO - Starting preprop_lstat function.
2025-01-31 16:39:57,085 - INFO - Renamed columns in DataFrame.
2025-01-31 16:39:57,106 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:39:57,109 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:39:57,112 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:39:57,114 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:39:57,118 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:39:57,184 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:39:57,185 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:39:57,193 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:39:57,193 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:39:57,198 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:39:57,201 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:39:57,207 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:39:57,208 - INFO - Starting preprop_resid function.
2025-01-31 16:39:57,209 - INFO - Renamed columns in DataFrame.
2025-01-31 16:39:57,215 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:39:57,215 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:39:57,217 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:39:57,218 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:39:57,220 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:39:57,227 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:39:57,227 - INFO - preprop_resid function completed successfully.
2025-01-31 16:39:57,227 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:39:57,232 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:39:57,272 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:39:57,273 - INFO - Starting execution of the main function.
2025-01-31 16:39:57,279 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:39:57,474 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:39:57,474 - INFO - Starting preprop_lstat function.
2025-01-31 16:39:57,489 - INFO - Renamed columns in DataFrame.
2025-01-31 16:39:57,509 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:39:57,512 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:39:57,515 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:39:57,517 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:39:57,520 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:39:57,588 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:39:57,588 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:39:57,595 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:39:57,596 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:39:57,601 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:39:57,603 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:39:57,610 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:39:57,611 - INFO - Starting preprop_resid function.
2025-01-31 16:39:57,611 - INFO - Renamed columns in DataFrame.
2025-01-31 16:39:57,617 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:39:57,618 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:39:57,619 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:39:57,621 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:39:57,623 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:39:57,630 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:39:57,630 - INFO - preprop_resid function completed successfully.
2025-01-31 16:39:57,630 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:39:57,636 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:39:57,679 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:39:57,679 - INFO - Starting execution of the main function.
2025-01-31 16:39:57,686 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:39:57,885 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:39:57,886 - INFO - Starting preprop_lstat function.
2025-01-31 16:39:57,900 - INFO - Renamed columns in DataFrame.
2025-01-31 16:39:57,919 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:39:57,921 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:39:57,924 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:39:57,926 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:39:57,929 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:39:57,997 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:39:57,997 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:39:58,004 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:39:58,004 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:39:58,010 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:39:58,012 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:39:58,018 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:39:58,019 - INFO - Starting preprop_resid function.
2025-01-31 16:39:58,019 - INFO - Renamed columns in DataFrame.
2025-01-31 16:39:58,025 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:39:58,026 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:39:58,028 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:39:58,029 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:39:58,032 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:39:58,039 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:39:58,039 - INFO - preprop_resid function completed successfully.
2025-01-31 16:39:58,039 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:39:58,044 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:39:58,081 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:39:58,081 - INFO - Starting execution of the main function.
2025-01-31 16:39:58,087 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:39:58,285 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:39:58,285 - INFO - Starting preprop_lstat function.
2025-01-31 16:39:58,299 - INFO - Renamed columns in DataFrame.
2025-01-31 16:39:58,319 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:39:58,322 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:39:58,325 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:39:58,326 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:39:58,329 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:39:58,395 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:39:58,398 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:39:58,406 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:39:58,406 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:39:58,411 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:39:58,414 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:39:58,421 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:39:58,421 - INFO - Starting preprop_resid function.
2025-01-31 16:39:58,421 - INFO - Renamed columns in DataFrame.
2025-01-31 16:39:58,427 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:39:58,428 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:39:58,430 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:39:58,431 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:39:58,433 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:39:58,440 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:39:58,440 - INFO - preprop_resid function completed successfully.
2025-01-31 16:39:58,441 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:39:58,446 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:39:58,486 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:39:58,487 - INFO - Starting execution of the main function.
2025-01-31 16:39:58,493 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:39:58,694 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:39:58,694 - INFO - Starting preprop_lstat function.
2025-01-31 16:39:58,710 - INFO - Renamed columns in DataFrame.
2025-01-31 16:39:58,731 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:39:58,734 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:39:58,737 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:39:58,739 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:39:58,742 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:39:58,812 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:39:58,812 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:39:58,821 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:39:58,821 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:39:58,827 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:39:58,829 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:39:58,836 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:39:58,836 - INFO - Starting preprop_resid function.
2025-01-31 16:39:58,837 - INFO - Renamed columns in DataFrame.
2025-01-31 16:39:58,843 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:39:58,844 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:39:58,846 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:39:58,847 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:39:58,849 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:39:58,858 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:39:58,859 - INFO - preprop_resid function completed successfully.
2025-01-31 16:39:58,860 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:39:58,866 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:39:58,905 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:39:58,906 - INFO - Starting execution of the main function.
2025-01-31 16:39:58,912 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:39:59,110 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:39:59,110 - INFO - Starting preprop_lstat function.
2025-01-31 16:39:59,124 - INFO - Renamed columns in DataFrame.
2025-01-31 16:39:59,146 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:39:59,148 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:39:59,151 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:39:59,152 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:39:59,156 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:39:59,224 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:39:59,224 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:39:59,232 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:39:59,232 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:39:59,237 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:39:59,240 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:39:59,247 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:39:59,247 - INFO - Starting preprop_resid function.
2025-01-31 16:39:59,248 - INFO - Renamed columns in DataFrame.
2025-01-31 16:39:59,253 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:39:59,254 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:39:59,256 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:39:59,258 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:39:59,260 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:39:59,267 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:39:59,267 - INFO - preprop_resid function completed successfully.
2025-01-31 16:39:59,267 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:39:59,273 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:39:59,312 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:39:59,312 - INFO - Starting execution of the main function.
2025-01-31 16:39:59,318 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:39:59,519 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:39:59,519 - INFO - Starting preprop_lstat function.
2025-01-31 16:39:59,533 - INFO - Renamed columns in DataFrame.
2025-01-31 16:39:59,553 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:39:59,556 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:39:59,559 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:39:59,561 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:39:59,565 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:39:59,633 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:39:59,633 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:39:59,641 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:39:59,641 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:39:59,647 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:39:59,649 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:39:59,655 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:39:59,655 - INFO - Starting preprop_resid function.
2025-01-31 16:39:59,656 - INFO - Renamed columns in DataFrame.
2025-01-31 16:39:59,662 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:39:59,662 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:39:59,665 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:39:59,666 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:39:59,668 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:39:59,675 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:39:59,675 - INFO - preprop_resid function completed successfully.
2025-01-31 16:39:59,675 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:39:59,681 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:39:59,720 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:39:59,720 - INFO - Starting execution of the main function.
2025-01-31 16:39:59,727 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:39:59,925 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:39:59,925 - INFO - Starting preprop_lstat function.
2025-01-31 16:39:59,939 - INFO - Renamed columns in DataFrame.
2025-01-31 16:39:59,964 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:39:59,967 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:39:59,969 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:39:59,971 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:39:59,974 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:00,043 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:00,043 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:00,054 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:00,056 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:00,062 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:00,066 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:00,074 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:00,074 - INFO - Starting preprop_resid function.
2025-01-31 16:40:00,075 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:00,080 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:00,081 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:00,083 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:00,084 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:00,087 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:00,093 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:00,094 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:00,094 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:00,099 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:00,141 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:00,142 - INFO - Starting execution of the main function.
2025-01-31 16:40:00,148 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:00,343 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:00,343 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:00,356 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:00,376 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:00,378 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:00,381 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:00,383 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:00,386 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:00,454 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:00,456 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:00,468 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:00,468 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:00,474 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:00,476 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:00,483 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:00,483 - INFO - Starting preprop_resid function.
2025-01-31 16:40:00,484 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:00,490 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:00,491 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:00,492 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:00,493 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:00,496 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:00,504 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:00,504 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:00,504 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:00,510 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:00,549 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:00,550 - INFO - Starting execution of the main function.
2025-01-31 16:40:00,555 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:00,649 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:00,670 - INFO - Starting execution of the main function.
2025-01-31 16:40:00,684 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:00,886 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:00,887 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:00,906 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:00,940 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:00,944 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:00,946 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:00,950 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:00,954 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:01,024 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:01,024 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:01,033 - INFO -  ====> Duration 0.15 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:01,034 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:01,041 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:01,043 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:01,053 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:01,054 - INFO - Starting preprop_resid function.
2025-01-31 16:40:01,055 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:01,075 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:01,091 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:01,098 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:01,102 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:01,106 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:01,120 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:01,125 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:01,126 - INFO -  ====> Duration 0.07 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:01,137 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:01,240 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:01,240 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:01,255 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:01,280 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:01,284 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:01,286 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:01,288 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:01,292 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:01,374 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:01,374 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:01,382 - INFO -  ====> Duration 0.14 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:01,382 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:01,388 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:01,390 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:01,401 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:01,401 - INFO - Starting preprop_resid function.
2025-01-31 16:40:01,402 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:01,409 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:01,409 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:01,411 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:01,412 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:01,415 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:01,422 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:01,422 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:01,423 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:01,428 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:01,472 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:01,473 - INFO - Starting execution of the main function.
2025-01-31 16:40:01,481 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:01,742 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:01,742 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:01,756 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:01,777 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:01,780 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:01,783 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:01,785 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:01,789 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:01,860 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:01,860 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:01,869 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:01,869 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:01,876 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:01,880 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:01,888 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:01,888 - INFO - Starting preprop_resid function.
2025-01-31 16:40:01,889 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:01,895 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:01,896 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:01,897 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:01,898 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:01,901 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:01,912 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:01,912 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:01,912 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:01,920 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:01,967 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:01,968 - INFO - Starting execution of the main function.
2025-01-31 16:40:01,973 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:02,170 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:02,171 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:02,182 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:02,204 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:02,207 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:02,210 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:02,212 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:02,216 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:02,317 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:02,317 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:02,323 - INFO -  ====> Duration 0.15 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:02,323 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:02,329 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:02,331 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:02,339 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:02,339 - INFO - Starting preprop_resid function.
2025-01-31 16:40:02,340 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:02,347 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:02,347 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:02,349 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:02,350 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:02,353 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:02,360 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:02,360 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:02,360 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:02,367 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:02,411 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:02,412 - INFO - Starting execution of the main function.
2025-01-31 16:40:02,419 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:02,665 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:02,665 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:02,677 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:02,698 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:02,700 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:02,702 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:02,704 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:02,707 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:02,775 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:02,775 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:02,781 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:02,782 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:02,787 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:02,790 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:02,797 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:02,797 - INFO - Starting preprop_resid function.
2025-01-31 16:40:02,798 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:02,804 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:02,805 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:02,807 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:02,808 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:02,810 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:02,821 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:02,821 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:02,822 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:02,828 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:02,869 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:02,870 - INFO - Starting execution of the main function.
2025-01-31 16:40:02,875 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:03,111 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:03,111 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:03,123 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:03,152 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:03,155 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:03,158 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:03,160 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:03,163 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:03,231 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:03,233 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:03,241 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:03,241 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:03,246 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:03,249 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:03,256 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:03,256 - INFO - Starting preprop_resid function.
2025-01-31 16:40:03,257 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:03,263 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:03,264 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:03,266 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:03,267 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:03,269 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:03,276 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:03,276 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:03,276 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:03,282 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:03,321 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:03,322 - INFO - Starting execution of the main function.
2025-01-31 16:40:03,327 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:03,555 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:03,555 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:03,569 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:03,590 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:03,593 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:03,596 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:03,598 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:03,603 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:03,672 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:03,674 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:03,682 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:03,682 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:03,689 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:03,691 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:03,698 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:03,698 - INFO - Starting preprop_resid function.
2025-01-31 16:40:03,698 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:03,704 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:03,705 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:03,706 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:03,707 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:03,709 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:03,718 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:03,718 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:03,718 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:03,723 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:03,768 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:03,769 - INFO - Starting execution of the main function.
2025-01-31 16:40:03,775 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:03,980 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:03,981 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:03,995 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:04,019 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:04,022 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:04,024 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:04,026 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:04,029 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:04,098 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:04,099 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:04,107 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:04,108 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:04,113 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:04,115 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:04,122 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:04,122 - INFO - Starting preprop_resid function.
2025-01-31 16:40:04,122 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:04,129 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:04,129 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:04,131 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:04,132 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:04,135 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:04,143 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:04,143 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:04,144 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:04,148 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:04,196 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:04,197 - INFO - Starting execution of the main function.
2025-01-31 16:40:04,206 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:04,470 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:04,471 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:04,485 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:04,506 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:04,509 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:04,511 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:04,513 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:04,517 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:04,586 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:04,586 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:04,595 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:04,596 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:04,601 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:04,604 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:04,612 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:04,612 - INFO - Starting preprop_resid function.
2025-01-31 16:40:04,613 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:04,619 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:04,619 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:04,621 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:04,622 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:04,625 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:04,632 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:04,632 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:04,633 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:04,639 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:04,677 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:04,678 - INFO - Starting execution of the main function.
2025-01-31 16:40:04,684 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:04,917 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:04,917 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:04,932 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:04,965 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:04,969 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:04,971 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:04,974 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:04,978 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:05,072 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:05,073 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:05,081 - INFO -  ====> Duration 0.16 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:05,081 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:05,087 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:05,089 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:05,095 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:05,095 - INFO - Starting preprop_resid function.
2025-01-31 16:40:05,096 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:05,102 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:05,102 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:05,104 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:05,105 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:05,107 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:05,114 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:05,115 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:05,115 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:05,121 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:05,171 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:05,171 - INFO - Starting execution of the main function.
2025-01-31 16:40:05,178 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:05,384 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:05,385 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:05,404 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:05,427 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:05,430 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:05,433 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:05,435 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:05,438 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:05,508 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:05,509 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:05,517 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:05,517 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:05,524 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:05,527 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:05,534 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:05,534 - INFO - Starting preprop_resid function.
2025-01-31 16:40:05,535 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:05,541 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:05,542 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:05,543 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:05,545 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:05,548 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:05,556 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:05,557 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:05,557 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:05,563 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:05,619 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:05,620 - INFO - Starting execution of the main function.
2025-01-31 16:40:05,625 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:05,834 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:05,834 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:05,847 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:05,867 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:05,870 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:05,872 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:05,874 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:05,876 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:05,962 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:05,962 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:05,969 - INFO -  ====> Duration 0.14 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:05,970 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:05,975 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:05,977 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:05,989 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:05,989 - INFO - Starting preprop_resid function.
2025-01-31 16:40:05,991 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:06,000 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:06,001 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:06,003 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:06,004 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:06,006 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:06,013 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:06,013 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:06,013 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:06,019 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:06,068 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:06,068 - INFO - Starting execution of the main function.
2025-01-31 16:40:06,074 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:06,303 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:06,304 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:06,318 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:06,340 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:06,342 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:06,346 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:06,348 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:06,351 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:06,457 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:06,458 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:06,467 - INFO -  ====> Duration 0.16 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:06,467 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:06,472 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:06,475 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:06,483 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:06,484 - INFO - Starting preprop_resid function.
2025-01-31 16:40:06,485 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:06,491 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:06,492 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:06,493 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:06,495 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:06,497 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:06,504 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:06,504 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:06,504 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:06,511 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:06,560 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:06,561 - INFO - Starting execution of the main function.
2025-01-31 16:40:06,567 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:06,782 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:06,782 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:06,798 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:06,820 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:06,823 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:06,826 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:06,828 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:06,833 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:06,952 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:06,952 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:06,960 - INFO -  ====> Duration 0.18 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:06,961 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:06,966 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:06,970 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:06,976 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:06,976 - INFO - Starting preprop_resid function.
2025-01-31 16:40:06,978 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:06,984 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:06,985 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:06,987 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:06,988 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:06,990 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:06,998 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:06,998 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:06,998 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:07,006 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:07,045 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:07,046 - INFO - Starting execution of the main function.
2025-01-31 16:40:07,052 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:07,243 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:07,243 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:07,263 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:07,297 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:07,300 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:07,303 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:07,305 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:07,309 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:07,426 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:07,427 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:07,434 - INFO -  ====> Duration 0.19 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:07,434 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:07,439 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:07,442 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:07,448 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:07,448 - INFO - Starting preprop_resid function.
2025-01-31 16:40:07,449 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:07,455 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:07,456 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:07,458 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:07,459 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:07,461 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:07,472 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:07,472 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:07,473 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:07,479 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:07,525 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:07,526 - INFO - Starting execution of the main function.
2025-01-31 16:40:07,531 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:07,785 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:07,785 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:07,805 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:07,843 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:07,846 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:07,849 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:07,851 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:07,856 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:07,964 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:07,964 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:07,972 - INFO -  ====> Duration 0.19 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:07,972 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:07,977 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:07,979 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:07,985 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:07,985 - INFO - Starting preprop_resid function.
2025-01-31 16:40:07,986 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:07,992 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:07,993 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:07,994 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:07,995 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:07,997 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:08,004 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:08,005 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:08,005 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:08,011 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:08,047 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:08,048 - INFO - Starting execution of the main function.
2025-01-31 16:40:08,054 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:08,237 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:08,238 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:08,249 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:08,271 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:08,273 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:08,276 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:08,278 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:08,283 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:08,396 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:08,397 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:08,406 - INFO -  ====> Duration 0.17 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:08,406 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:08,413 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:08,416 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:08,423 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:08,424 - INFO - Starting preprop_resid function.
2025-01-31 16:40:08,426 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:08,432 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:08,433 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:08,434 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:08,435 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:08,438 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:08,445 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:08,445 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:08,446 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:08,454 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:08,501 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:08,501 - INFO - Starting execution of the main function.
2025-01-31 16:40:08,507 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:08,701 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:08,702 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:08,715 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:08,737 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:08,739 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:08,742 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:08,744 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:08,748 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:08,855 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:08,855 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:08,862 - INFO -  ====> Duration 0.16 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:08,862 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:08,870 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:08,872 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:08,879 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:08,879 - INFO - Starting preprop_resid function.
2025-01-31 16:40:08,880 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:08,886 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:08,887 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:08,889 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:08,890 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:08,892 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:08,899 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:08,899 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:08,899 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:08,904 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:08,943 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:08,944 - INFO - Starting execution of the main function.
2025-01-31 16:40:08,948 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:09,073 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:09,074 - INFO - Starting execution of the main function.
2025-01-31 16:40:09,079 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:09,277 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:09,278 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:09,293 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:09,315 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:09,319 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:09,321 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:09,323 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:09,327 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:09,395 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:09,396 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:09,402 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:09,403 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:09,411 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:09,414 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:09,423 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:09,423 - INFO - Starting preprop_resid function.
2025-01-31 16:40:09,424 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:09,432 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:09,433 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:09,434 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:09,436 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:09,439 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:09,448 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:09,448 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:09,448 - INFO -  ====> Duration 0.03 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:09,455 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:09,593 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:09,594 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:09,609 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:09,632 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:09,636 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:09,638 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:09,640 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:09,643 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:09,750 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:09,751 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:09,760 - INFO -  ====> Duration 0.17 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:09,760 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:09,767 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:09,770 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:09,777 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:09,777 - INFO - Starting preprop_resid function.
2025-01-31 16:40:09,778 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:09,789 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:09,789 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:09,791 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:09,792 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:09,794 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:09,806 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:09,806 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:09,806 - INFO -  ====> Duration 0.03 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:09,812 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:09,860 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:09,860 - INFO - Starting execution of the main function.
2025-01-31 16:40:09,866 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:10,056 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:10,057 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:10,067 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:10,087 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:10,089 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:10,091 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:10,094 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:10,098 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:10,167 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:10,168 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:10,176 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:10,176 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:10,183 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:10,185 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:10,192 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:10,193 - INFO - Starting preprop_resid function.
2025-01-31 16:40:10,194 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:10,201 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:10,201 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:10,203 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:10,204 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:10,206 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:10,213 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:10,213 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:10,214 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:10,219 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:10,256 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:10,257 - INFO - Starting execution of the main function.
2025-01-31 16:40:10,262 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:10,514 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:10,515 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:10,533 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:10,565 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:10,568 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:10,571 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:10,573 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:10,576 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:10,649 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:10,650 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:10,660 - INFO -  ====> Duration 0.15 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:10,661 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:10,667 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:10,678 - INFO -  ====> Duration 0.02 secs: Counts loading stations per PLZ
2025-01-31 16:40:10,689 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:10,689 - INFO - Starting preprop_resid function.
2025-01-31 16:40:10,690 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:10,699 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:10,700 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:10,701 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:10,702 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:10,705 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:10,712 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:10,712 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:10,713 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:10,723 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:10,776 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:10,777 - INFO - Starting execution of the main function.
2025-01-31 16:40:10,784 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:11,042 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:11,042 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:11,060 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:11,088 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:11,092 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:11,095 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:11,097 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:11,100 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:11,221 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:11,222 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:11,232 - INFO -  ====> Duration 0.19 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:11,233 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:11,238 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:11,242 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:11,251 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:11,251 - INFO - Starting preprop_resid function.
2025-01-31 16:40:11,251 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:11,262 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:11,262 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:11,265 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:11,266 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:11,269 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:11,278 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:11,278 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:11,279 - INFO -  ====> Duration 0.03 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:11,285 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:11,342 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:11,343 - INFO - Starting execution of the main function.
2025-01-31 16:40:11,351 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:11,602 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:11,602 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:11,613 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:11,633 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:11,635 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:11,637 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:11,639 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:11,642 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:11,712 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:11,713 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:11,719 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:11,720 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:11,725 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:11,727 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:11,736 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:11,736 - INFO - Starting preprop_resid function.
2025-01-31 16:40:11,737 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:11,748 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:11,749 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:11,750 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:11,752 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:11,754 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:11,761 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:11,762 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:11,762 - INFO -  ====> Duration 0.03 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:11,768 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:11,804 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:11,805 - INFO - Starting execution of the main function.
2025-01-31 16:40:11,810 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:12,060 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:12,060 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:12,074 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:12,095 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:12,099 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:12,101 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:12,103 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:12,106 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:12,225 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:12,225 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:12,232 - INFO -  ====> Duration 0.17 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:12,232 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:12,237 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:12,240 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:12,246 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:12,247 - INFO - Starting preprop_resid function.
2025-01-31 16:40:12,247 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:12,254 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:12,254 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:12,256 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:12,257 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:12,260 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:12,268 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:12,268 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:12,268 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:12,274 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:12,312 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:12,313 - INFO - Starting execution of the main function.
2025-01-31 16:40:12,318 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:12,570 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:12,570 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:12,582 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:12,612 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:12,616 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:12,619 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:12,621 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:12,624 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:12,742 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:12,742 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:12,748 - INFO -  ====> Duration 0.18 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:12,748 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:12,754 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:12,756 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:12,762 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:12,762 - INFO - Starting preprop_resid function.
2025-01-31 16:40:12,762 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:12,770 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:12,770 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:12,772 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:12,772 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:12,774 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:12,782 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:12,782 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:12,782 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:12,787 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:12,839 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:12,840 - INFO - Starting execution of the main function.
2025-01-31 16:40:12,845 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:13,110 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:13,110 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:13,125 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:13,153 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:13,157 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:13,160 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:13,162 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:13,165 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:13,305 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:13,305 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:13,324 - INFO -  ====> Duration 0.21 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:13,326 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:13,336 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:13,341 - INFO -  ====> Duration 0.02 secs: Counts loading stations per PLZ
2025-01-31 16:40:13,354 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:13,354 - INFO - Starting preprop_resid function.
2025-01-31 16:40:13,355 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:13,373 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:13,374 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:13,378 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:13,381 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:13,385 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:13,410 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:13,410 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:13,411 - INFO -  ====> Duration 0.06 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:13,430 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:13,606 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:13,607 - INFO - Starting execution of the main function.
2025-01-31 16:40:13,614 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:13,903 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:13,903 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:13,917 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:13,948 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:13,951 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:13,954 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:13,956 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:13,960 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:14,076 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:14,076 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:14,085 - INFO -  ====> Duration 0.18 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:14,085 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:14,090 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:14,092 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:14,099 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:14,099 - INFO - Starting preprop_resid function.
2025-01-31 16:40:14,099 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:14,106 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:14,107 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:14,109 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:14,109 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:14,112 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:14,118 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:14,118 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:14,119 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:14,125 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:14,170 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:14,171 - INFO - Starting execution of the main function.
2025-01-31 16:40:14,178 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:14,444 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:14,445 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:14,458 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:14,488 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:14,492 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:14,495 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:14,497 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:14,502 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:14,569 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:14,569 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:14,579 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:14,579 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:14,586 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:14,588 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:14,597 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:14,597 - INFO - Starting preprop_resid function.
2025-01-31 16:40:14,598 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:14,608 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:14,608 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:14,610 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:14,611 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:14,614 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:14,624 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:14,624 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:14,625 - INFO -  ====> Duration 0.03 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:14,631 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:14,669 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:14,670 - INFO - Starting execution of the main function.
2025-01-31 16:40:14,676 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:14,943 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:14,943 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:14,958 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:14,988 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:14,992 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:14,994 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:14,996 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:15,000 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:15,117 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:15,117 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:15,125 - INFO -  ====> Duration 0.18 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:15,125 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:15,130 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:15,132 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:15,138 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:15,138 - INFO - Starting preprop_resid function.
2025-01-31 16:40:15,139 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:15,146 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:15,146 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:15,148 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:15,149 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:15,151 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:15,161 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:15,161 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:15,162 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:15,168 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:15,210 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:15,211 - INFO - Starting execution of the main function.
2025-01-31 16:40:15,219 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:15,484 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:15,484 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:15,503 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:15,527 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:15,531 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:15,534 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:15,536 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:15,539 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:15,606 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:15,606 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:15,614 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:15,614 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:15,619 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:15,621 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:15,627 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:15,628 - INFO - Starting preprop_resid function.
2025-01-31 16:40:15,630 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:15,636 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:15,637 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:15,638 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:15,639 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:15,641 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:15,647 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:15,647 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:15,648 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:15,655 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:15,693 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:15,694 - INFO - Starting execution of the main function.
2025-01-31 16:40:15,699 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:15,967 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:15,968 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:15,980 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:16,011 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:16,014 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:16,017 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:16,019 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:16,023 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:16,143 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:16,143 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:16,153 - INFO -  ====> Duration 0.19 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:16,154 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:16,159 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:16,162 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:16,171 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:16,171 - INFO - Starting preprop_resid function.
2025-01-31 16:40:16,172 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:16,183 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:16,183 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:16,185 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:16,186 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:16,190 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:16,200 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:16,201 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:16,201 - INFO -  ====> Duration 0.03 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:16,207 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:16,253 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:16,254 - INFO - Starting execution of the main function.
2025-01-31 16:40:16,259 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:16,530 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:16,530 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:16,543 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:16,573 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:16,576 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:16,578 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:16,580 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:16,584 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:16,696 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:16,697 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:16,708 - INFO -  ====> Duration 0.18 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:16,709 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:16,714 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:16,716 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:16,722 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:16,722 - INFO - Starting preprop_resid function.
2025-01-31 16:40:16,722 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:16,729 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:16,729 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:16,731 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:16,732 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:16,734 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:16,741 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:16,742 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:16,743 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:16,748 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:16,799 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:16,800 - INFO - Starting execution of the main function.
2025-01-31 16:40:16,807 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:17,075 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:17,076 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:17,087 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:17,117 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:17,121 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:17,123 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:17,125 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:17,129 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:17,245 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:17,245 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:17,254 - INFO -  ====> Duration 0.18 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:17,254 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:17,261 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:17,264 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:17,275 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:17,276 - INFO - Starting preprop_resid function.
2025-01-31 16:40:17,276 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:17,287 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:17,287 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:17,289 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:17,291 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:17,295 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:17,305 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:17,305 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:17,306 - INFO -  ====> Duration 0.03 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:17,313 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:17,363 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:17,364 - INFO - Starting execution of the main function.
2025-01-31 16:40:17,370 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:17,601 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:17,601 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:17,616 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:17,637 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:17,640 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:17,642 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:17,644 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:17,647 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:17,714 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:17,715 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:17,723 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:17,723 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:17,729 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:17,731 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:17,737 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:17,738 - INFO - Starting preprop_resid function.
2025-01-31 16:40:17,738 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:17,745 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:17,746 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:17,748 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:17,749 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:17,751 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:17,757 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:17,758 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:17,758 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:17,763 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:17,803 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:17,804 - INFO - Starting execution of the main function.
2025-01-31 16:40:17,809 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:18,011 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:18,011 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:18,023 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:18,043 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:18,046 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:18,049 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:18,051 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:18,054 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:18,121 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:18,122 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:18,129 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:18,129 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:18,134 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:18,136 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:18,143 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:18,143 - INFO - Starting preprop_resid function.
2025-01-31 16:40:18,144 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:18,151 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:18,151 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:18,153 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:18,154 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:18,157 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:18,163 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:18,163 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:18,164 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:18,170 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:18,205 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:18,206 - INFO - Starting execution of the main function.
2025-01-31 16:40:18,211 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:18,409 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:18,409 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:18,421 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:18,441 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:18,443 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:18,445 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:18,447 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:18,449 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:18,518 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:18,519 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:18,529 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:18,529 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:18,535 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:18,537 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:18,543 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:18,543 - INFO - Starting preprop_resid function.
2025-01-31 16:40:18,544 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:18,551 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:18,552 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:18,554 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:18,555 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:18,558 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:18,567 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:18,568 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:18,568 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:18,575 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:18,617 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:18,618 - INFO - Starting execution of the main function.
2025-01-31 16:40:18,625 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:18,823 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:18,823 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:18,837 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:18,858 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:18,862 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:18,865 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:18,867 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:18,870 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:18,938 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:18,939 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:18,946 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:18,946 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:18,951 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:18,954 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:18,960 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:18,960 - INFO - Starting preprop_resid function.
2025-01-31 16:40:18,961 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:18,968 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:18,968 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:18,970 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:18,971 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:18,973 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:18,980 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:18,980 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:18,980 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:18,985 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:19,026 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:19,026 - INFO - Starting execution of the main function.
2025-01-31 16:40:19,031 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:19,228 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:19,228 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:19,241 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:19,261 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:19,264 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:19,267 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:19,269 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:19,272 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:19,339 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:19,340 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:19,347 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:19,348 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:19,353 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:19,356 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:19,362 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:19,362 - INFO - Starting preprop_resid function.
2025-01-31 16:40:19,363 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:19,369 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:19,369 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:19,371 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:19,372 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:19,374 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:19,380 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:19,380 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:19,381 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:19,386 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:19,424 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:19,424 - INFO - Starting execution of the main function.
2025-01-31 16:40:19,430 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:19,626 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:19,626 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:19,644 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:19,671 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:19,674 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:19,677 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:19,679 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:19,684 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:19,753 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:19,753 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:19,762 - INFO -  ====> Duration 0.14 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:19,762 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:19,768 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:19,770 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:19,776 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:19,776 - INFO - Starting preprop_resid function.
2025-01-31 16:40:19,777 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:19,784 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:19,784 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:19,786 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:19,786 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:19,788 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:19,795 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:19,795 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:19,796 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:19,801 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:19,835 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:19,836 - INFO - Starting execution of the main function.
2025-01-31 16:40:19,840 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:20,038 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:20,038 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:20,050 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:20,072 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:20,075 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:20,077 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:20,079 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:20,082 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:20,149 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:20,149 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:20,156 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:20,156 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:20,162 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:20,164 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:20,170 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:20,171 - INFO - Starting preprop_resid function.
2025-01-31 16:40:20,171 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:20,178 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:20,178 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:20,180 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:20,181 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:20,184 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:20,191 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:20,191 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:20,191 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:20,196 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:20,237 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:20,238 - INFO - Starting execution of the main function.
2025-01-31 16:40:20,245 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:20,444 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:20,444 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:20,456 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:20,477 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:20,479 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:20,482 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:20,484 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:20,487 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:20,554 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:20,554 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:20,562 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:20,562 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:20,567 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:20,570 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:20,576 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:20,576 - INFO - Starting preprop_resid function.
2025-01-31 16:40:20,577 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:20,583 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:20,583 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:20,585 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:20,586 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:20,589 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:20,596 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:20,596 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:20,596 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:20,601 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:20,641 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:20,642 - INFO - Starting execution of the main function.
2025-01-31 16:40:20,647 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:20,833 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:20,834 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:20,847 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:20,868 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:20,873 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:20,876 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:20,879 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:20,883 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:20,950 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:20,951 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:20,958 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:20,958 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:20,963 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:20,966 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:20,972 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:20,972 - INFO - Starting preprop_resid function.
2025-01-31 16:40:20,973 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:20,980 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:20,981 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:20,982 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:20,983 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:20,985 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:20,992 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:20,993 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:20,993 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:20,999 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:21,045 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:21,046 - INFO - Starting execution of the main function.
2025-01-31 16:40:21,051 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:21,236 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:21,236 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:21,251 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:21,273 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:21,280 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:21,284 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:21,286 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:21,290 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:21,361 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:21,362 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:21,370 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:21,370 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:21,376 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:21,379 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:21,388 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:21,389 - INFO - Starting preprop_resid function.
2025-01-31 16:40:21,389 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:21,396 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:21,397 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:21,399 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:21,400 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:21,402 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:21,411 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:21,411 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:21,412 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:21,421 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:21,481 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:21,481 - INFO - Starting execution of the main function.
2025-01-31 16:40:21,487 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:21,692 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:21,693 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:21,708 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:21,731 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:21,734 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:21,736 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:21,738 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:21,742 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:21,826 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:21,826 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:21,835 - INFO -  ====> Duration 0.14 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:21,835 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:21,840 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:21,843 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:21,850 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:21,850 - INFO - Starting preprop_resid function.
2025-01-31 16:40:21,851 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:21,858 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:21,859 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:21,861 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:21,863 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:21,865 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:21,872 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:21,872 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:21,873 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:21,878 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:21,914 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:21,914 - INFO - Starting execution of the main function.
2025-01-31 16:40:21,920 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:22,115 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:22,115 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:22,127 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:22,147 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:22,150 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:22,153 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:22,155 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:22,158 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:22,225 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:22,226 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:22,233 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:22,233 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:22,238 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:22,240 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:22,247 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:22,247 - INFO - Starting preprop_resid function.
2025-01-31 16:40:22,248 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:22,254 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:22,255 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:22,256 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:22,257 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:22,259 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:22,266 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:22,266 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:22,267 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:22,272 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:22,306 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:22,307 - INFO - Starting execution of the main function.
2025-01-31 16:40:22,312 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:22,513 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:22,513 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:22,529 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:22,550 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:22,552 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:22,555 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:22,557 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:22,560 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:22,631 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:22,631 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:22,639 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:22,640 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:22,645 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:22,648 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:22,655 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:22,656 - INFO - Starting preprop_resid function.
2025-01-31 16:40:22,656 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:22,663 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:22,663 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:22,665 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:22,666 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:22,668 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:22,676 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:22,676 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:22,676 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:22,681 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:22,716 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:22,717 - INFO - Starting execution of the main function.
2025-01-31 16:40:22,722 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:22,901 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:22,902 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:22,914 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:22,934 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:22,936 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:22,939 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:22,940 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:22,944 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:23,011 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:23,012 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:23,019 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:23,020 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:23,025 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:23,027 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:23,033 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:23,033 - INFO - Starting preprop_resid function.
2025-01-31 16:40:23,034 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:23,041 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:23,041 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:23,043 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:23,044 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:23,046 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:23,053 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:23,054 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:23,054 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:23,060 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:23,101 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:23,101 - INFO - Starting execution of the main function.
2025-01-31 16:40:23,106 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:23,297 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:23,297 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:23,311 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:23,332 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:23,335 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:23,337 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:23,339 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:23,342 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:23,410 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:23,410 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:23,418 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:23,419 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:23,424 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:23,427 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:23,434 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:23,434 - INFO - Starting preprop_resid function.
2025-01-31 16:40:23,434 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:23,441 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:23,442 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:23,443 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:23,445 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:23,447 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:23,455 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:23,455 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:23,455 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:23,460 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:23,496 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:23,496 - INFO - Starting execution of the main function.
2025-01-31 16:40:23,501 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:23,677 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:23,678 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:23,689 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:23,710 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:23,714 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:23,716 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:23,720 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:23,726 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:23,849 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:23,849 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:23,858 - INFO -  ====> Duration 0.18 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:23,858 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:23,866 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:23,869 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:23,879 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:23,880 - INFO - Starting preprop_resid function.
2025-01-31 16:40:23,881 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:23,900 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:23,901 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:23,903 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:23,905 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:23,907 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:23,932 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:23,932 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:23,950 - INFO -  ====> Duration 0.07 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:23,975 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:24,059 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:24,060 - INFO - Starting execution of the main function.
2025-01-31 16:40:24,066 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:24,281 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:24,281 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:24,295 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:24,315 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:24,318 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:24,320 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:24,322 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:24,325 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:24,395 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:24,397 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:24,407 - INFO -  ====> Duration 0.13 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:24,407 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:24,412 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:24,414 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:24,422 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:24,422 - INFO - Starting preprop_resid function.
2025-01-31 16:40:24,423 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:24,430 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:24,431 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:24,437 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:24,438 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:24,440 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:24,448 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:24,448 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:24,448 - INFO -  ====> Duration 0.03 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:24,454 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:24,511 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:24,512 - INFO - Starting execution of the main function.
2025-01-31 16:40:24,518 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:24,710 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:24,711 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:24,722 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:24,748 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:24,751 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:24,753 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:24,755 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:24,758 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:24,827 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:24,827 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:24,835 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:24,836 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:24,842 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:24,844 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:24,851 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:24,852 - INFO - Starting preprop_resid function.
2025-01-31 16:40:24,852 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:24,860 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:24,861 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:24,863 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:24,865 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:24,870 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:24,879 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:24,880 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:24,880 - INFO -  ====> Duration 0.03 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:24,887 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:24,925 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:24,925 - INFO - Starting execution of the main function.
2025-01-31 16:40:24,930 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:25,118 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:25,118 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:25,129 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:25,150 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:25,153 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:25,156 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:25,158 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:25,161 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:25,230 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:25,230 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:25,238 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:25,239 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:25,244 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:25,247 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:25,253 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:25,253 - INFO - Starting preprop_resid function.
2025-01-31 16:40:25,254 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:25,260 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:25,261 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:25,263 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:25,264 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:25,266 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:25,273 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:25,274 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:25,274 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:25,279 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:25,321 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:25,321 - INFO - Starting execution of the main function.
2025-01-31 16:40:25,326 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:25,509 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:25,509 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:25,522 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:25,543 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:25,546 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:25,548 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:25,550 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:25,554 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:25,625 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:25,626 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:25,633 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:25,633 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:25,639 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:25,642 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:25,649 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:25,649 - INFO - Starting preprop_resid function.
2025-01-31 16:40:25,650 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:25,658 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:25,659 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:25,660 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:25,661 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:25,663 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:25,670 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:25,674 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:25,675 - INFO -  ====> Duration 0.03 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:25,680 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:25,716 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:25,718 - INFO - Starting execution of the main function.
2025-01-31 16:40:25,723 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:25,903 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:25,903 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:25,915 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:25,935 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:25,938 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:25,940 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:25,942 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:25,945 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:26,014 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:26,014 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:26,023 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:26,024 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:26,029 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:26,032 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:26,038 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:26,038 - INFO - Starting preprop_resid function.
2025-01-31 16:40:26,039 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:26,046 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:26,046 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:26,048 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:26,050 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:26,052 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:26,058 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:26,059 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:26,059 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:26,064 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:26,103 - INFO - Current working directory: E:\Study\BHT\AdvancedSE\Assignment1\BerlinChargeHub
2025-01-31 16:40:26,116 - INFO - Starting execution of the main function.
2025-01-31 16:40:26,122 - INFO - geodata_berlin_plz.csv loaded successfully.
2025-01-31 16:40:26,316 - INFO - Ladesaeulenregister.csv loaded successfully.
2025-01-31 16:40:26,317 - INFO - Starting preprop_lstat function.
2025-01-31 16:40:26,330 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:26,353 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:26,356 - INFO - Filtered data for Berlin. Shape: (2746, 5)
2025-01-31 16:40:26,358 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:26,360 - INFO - Merged DataFrame with geometry. Shape: (2746, 6)
2025-01-31 16:40:26,363 - INFO - DataFrame after dropping missing geometries. Shape: (2737, 6)
2025-01-31 16:40:26,432 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:26,432 - INFO - preprop_lstat function completed successfully.
2025-01-31 16:40:26,441 - INFO -  ====> Duration 0.12 secs: Preprocessing dataframe from Ladesaeulenregister.csv
2025-01-31 16:40:26,441 - INFO - Starting count_plz_occurrences function.
2025-01-31 16:40:26,446 - INFO - count_plz_occurrences function completed successfully. Output DataFrame shape: (183, 3)
2025-01-31 16:40:26,449 - INFO -  ====> Duration 0.01 secs: Counts loading stations per PLZ
2025-01-31 16:40:26,455 - INFO - plz_einwohner.csv loaded successfully.
2025-01-31 16:40:26,455 - INFO - Starting preprop_resid function.
2025-01-31 16:40:26,456 - INFO - Renamed columns in DataFrame.
2025-01-31 16:40:26,462 - INFO - Formatted latitude and longitude columns.
2025-01-31 16:40:26,463 - INFO - Filtered DataFrame by postal codes. Remaining rows: 191
2025-01-31 16:40:26,464 - INFO - Starting sort_by_plz_add_geometry function.
2025-01-31 16:40:26,465 - INFO - Merged DataFrame with geometry. Shape: (191, 5)
2025-01-31 16:40:26,468 - INFO - DataFrame after dropping missing geometries. Shape: (190, 5)
2025-01-31 16:40:26,476 - INFO - sort_by_plz_add_geometry function completed successfully.
2025-01-31 16:40:26,476 - INFO - preprop_resid function completed successfully.
2025-01-31 16:40:26,476 - INFO -  ====> Duration 0.02 secs: 
Processes and prepares a dataframe by cleaning and filtering postal codes, renaming columns, and transforming
geographical data. The function works by copying the given data, transforming numeric columns into strings, and replacing
comma-separators for proper formatting. It also filters the dataset based on postal codes and combines additional
geometry information via another function.

Return: The processed dataframe with cleaned, formatted, and enriched data combining postal codes and geometrical information.
:rtype: pandas.DataFrame

2025-01-31 16:40:26,481 - INFO - Called create_electric_charging_residents_heatmap with args: (         PLZ  Number                                           geometry
0    10117.0      54  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
1    10119.0       6  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
2    10178.0      30  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
3    10179.0      37  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
4    10243.0      39  POLYGON ((13.42554 52.52371, 13.42862 52.52358...
..       ...     ...                                                ...
178  14169.0      17  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
179  14193.0       3  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
180  14195.0      32  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
181  14197.0      12  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
182  14199.0       7  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[183 rows x 3 columns],        PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns]), kwargs: {}
2025-01-31 16:40:26,489 - INFO - Called mapping_residents with args: (       PLZ  Einwohner Breitengrad Längengrad                                           geometry
0    10115      20313    52.53195    13.3838  POLYGON ((13.37239 52.53821, 13.3741 52.53717,...
1    10117      12217    52.51752   13.38777  POLYGON ((13.40031 52.5233, 13.40051 52.52216,...
2    10119      16363    52.53013   13.40551  POLYGON ((13.40056 52.53639, 13.4026 52.53507,...
3    10178      12167     52.5203   13.40473  POLYGON ((13.40918 52.52917, 13.41476 52.52779...
4    10179      18664    52.51379   13.41524  POLYGON ((13.42827 52.51895, 13.42751 52.51775...
..     ...        ...         ...        ...                                                ...
186  14169      17274       52.45   13.25883  POLYGON ((13.24957 52.45778, 13.25047 52.45803...
187  14193      15505    52.48135   13.23847  POLYGON ((13.28149 52.49817, 13.28228 52.49778...
188  14195      14667    52.45858   13.28463  POLYGON ((13.27759 52.47487, 13.28447 52.46998...
189  14197      17889    52.47319    13.3103  POLYGON ((13.32027 52.47775, 13.31991 52.47096...
190  14199      13657    52.47796   13.29242  POLYGON ((13.31186 52.48048, 13.30158 52.47452...

[190 rows x 5 columns], <folium.folium.Map object at 0x000002B8E230FE50>), kwargs: {}
2025-01-31 16:40:26,531 - INFO - mapping_residents returned (<branca.colormap.LinearColormap object at 0x000002B8E2FCBE70>, <folium.folium.Map object at 0x000002B8E230FE50>)
2025-01-31 16:40:26,682 - INFO - create_electric_charging_residents_heatmap returned None
2025-01-31 16:40:26,693 - INFO -  ====> Duration 0.58 secs: Main: Generation of Streamlit App for visualizing electric charging stations & residents in Berlin 
